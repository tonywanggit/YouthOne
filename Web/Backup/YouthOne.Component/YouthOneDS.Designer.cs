//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace YouthOne.Component {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("YouthOneDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class YouthOneDS : global::System.Data.DataSet {
        
        private YouthGroupDataTable tableYouthGroup;
        
        private SystemAdminDataTable tableSystemAdmin;
        
        private SystemLogDataTable tableSystemLog;
        
        private PostDataTable tablePost;
        
        private OrganizeDataTable tableOrganize;
        
        private StandardEnumDataTable tableStandardEnum;
        
        private MemberChargeDataTable tableMemberCharge;
        
        private PriseDataTable tablePrise;
        
        private MemberStaticDataTable tableMemberStatic;
        
        private NotificationDataTable tableNotification;
        
        private OutlayPublishDataTable tableOutlayPublish;
        
        private OutlayUseDataTable tableOutlayUse;
        
        private MemberImportDataTable tableMemberImport;
        
        private MemberDataTable tableMember;
        
        private BudgetApplyDataTable tableBudgetApply;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public YouthOneDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected YouthOneDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["YouthGroup"] != null)) {
                    base.Tables.Add(new YouthGroupDataTable(ds.Tables["YouthGroup"]));
                }
                if ((ds.Tables["SystemAdmin"] != null)) {
                    base.Tables.Add(new SystemAdminDataTable(ds.Tables["SystemAdmin"]));
                }
                if ((ds.Tables["SystemLog"] != null)) {
                    base.Tables.Add(new SystemLogDataTable(ds.Tables["SystemLog"]));
                }
                if ((ds.Tables["Post"] != null)) {
                    base.Tables.Add(new PostDataTable(ds.Tables["Post"]));
                }
                if ((ds.Tables["Organize"] != null)) {
                    base.Tables.Add(new OrganizeDataTable(ds.Tables["Organize"]));
                }
                if ((ds.Tables["StandardEnum"] != null)) {
                    base.Tables.Add(new StandardEnumDataTable(ds.Tables["StandardEnum"]));
                }
                if ((ds.Tables["MemberCharge"] != null)) {
                    base.Tables.Add(new MemberChargeDataTable(ds.Tables["MemberCharge"]));
                }
                if ((ds.Tables["Prise"] != null)) {
                    base.Tables.Add(new PriseDataTable(ds.Tables["Prise"]));
                }
                if ((ds.Tables["MemberStatic"] != null)) {
                    base.Tables.Add(new MemberStaticDataTable(ds.Tables["MemberStatic"]));
                }
                if ((ds.Tables["Notification"] != null)) {
                    base.Tables.Add(new NotificationDataTable(ds.Tables["Notification"]));
                }
                if ((ds.Tables["OutlayPublish"] != null)) {
                    base.Tables.Add(new OutlayPublishDataTable(ds.Tables["OutlayPublish"]));
                }
                if ((ds.Tables["OutlayUse"] != null)) {
                    base.Tables.Add(new OutlayUseDataTable(ds.Tables["OutlayUse"]));
                }
                if ((ds.Tables["MemberImport"] != null)) {
                    base.Tables.Add(new MemberImportDataTable(ds.Tables["MemberImport"]));
                }
                if ((ds.Tables["Member"] != null)) {
                    base.Tables.Add(new MemberDataTable(ds.Tables["Member"]));
                }
                if ((ds.Tables["BudgetApply"] != null)) {
                    base.Tables.Add(new BudgetApplyDataTable(ds.Tables["BudgetApply"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public YouthGroupDataTable YouthGroup {
            get {
                return this.tableYouthGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SystemAdminDataTable SystemAdmin {
            get {
                return this.tableSystemAdmin;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SystemLogDataTable SystemLog {
            get {
                return this.tableSystemLog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PostDataTable Post {
            get {
                return this.tablePost;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrganizeDataTable Organize {
            get {
                return this.tableOrganize;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StandardEnumDataTable StandardEnum {
            get {
                return this.tableStandardEnum;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MemberChargeDataTable MemberCharge {
            get {
                return this.tableMemberCharge;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PriseDataTable Prise {
            get {
                return this.tablePrise;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MemberStaticDataTable MemberStatic {
            get {
                return this.tableMemberStatic;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NotificationDataTable Notification {
            get {
                return this.tableNotification;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OutlayPublishDataTable OutlayPublish {
            get {
                return this.tableOutlayPublish;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OutlayUseDataTable OutlayUse {
            get {
                return this.tableOutlayUse;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MemberImportDataTable MemberImport {
            get {
                return this.tableMemberImport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MemberDataTable Member {
            get {
                return this.tableMember;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BudgetApplyDataTable BudgetApply {
            get {
                return this.tableBudgetApply;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            YouthOneDS cln = ((YouthOneDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["YouthGroup"] != null)) {
                    base.Tables.Add(new YouthGroupDataTable(ds.Tables["YouthGroup"]));
                }
                if ((ds.Tables["SystemAdmin"] != null)) {
                    base.Tables.Add(new SystemAdminDataTable(ds.Tables["SystemAdmin"]));
                }
                if ((ds.Tables["SystemLog"] != null)) {
                    base.Tables.Add(new SystemLogDataTable(ds.Tables["SystemLog"]));
                }
                if ((ds.Tables["Post"] != null)) {
                    base.Tables.Add(new PostDataTable(ds.Tables["Post"]));
                }
                if ((ds.Tables["Organize"] != null)) {
                    base.Tables.Add(new OrganizeDataTable(ds.Tables["Organize"]));
                }
                if ((ds.Tables["StandardEnum"] != null)) {
                    base.Tables.Add(new StandardEnumDataTable(ds.Tables["StandardEnum"]));
                }
                if ((ds.Tables["MemberCharge"] != null)) {
                    base.Tables.Add(new MemberChargeDataTable(ds.Tables["MemberCharge"]));
                }
                if ((ds.Tables["Prise"] != null)) {
                    base.Tables.Add(new PriseDataTable(ds.Tables["Prise"]));
                }
                if ((ds.Tables["MemberStatic"] != null)) {
                    base.Tables.Add(new MemberStaticDataTable(ds.Tables["MemberStatic"]));
                }
                if ((ds.Tables["Notification"] != null)) {
                    base.Tables.Add(new NotificationDataTable(ds.Tables["Notification"]));
                }
                if ((ds.Tables["OutlayPublish"] != null)) {
                    base.Tables.Add(new OutlayPublishDataTable(ds.Tables["OutlayPublish"]));
                }
                if ((ds.Tables["OutlayUse"] != null)) {
                    base.Tables.Add(new OutlayUseDataTable(ds.Tables["OutlayUse"]));
                }
                if ((ds.Tables["MemberImport"] != null)) {
                    base.Tables.Add(new MemberImportDataTable(ds.Tables["MemberImport"]));
                }
                if ((ds.Tables["Member"] != null)) {
                    base.Tables.Add(new MemberDataTable(ds.Tables["Member"]));
                }
                if ((ds.Tables["BudgetApply"] != null)) {
                    base.Tables.Add(new BudgetApplyDataTable(ds.Tables["BudgetApply"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableYouthGroup = ((YouthGroupDataTable)(base.Tables["YouthGroup"]));
            if ((initTable == true)) {
                if ((this.tableYouthGroup != null)) {
                    this.tableYouthGroup.InitVars();
                }
            }
            this.tableSystemAdmin = ((SystemAdminDataTable)(base.Tables["SystemAdmin"]));
            if ((initTable == true)) {
                if ((this.tableSystemAdmin != null)) {
                    this.tableSystemAdmin.InitVars();
                }
            }
            this.tableSystemLog = ((SystemLogDataTable)(base.Tables["SystemLog"]));
            if ((initTable == true)) {
                if ((this.tableSystemLog != null)) {
                    this.tableSystemLog.InitVars();
                }
            }
            this.tablePost = ((PostDataTable)(base.Tables["Post"]));
            if ((initTable == true)) {
                if ((this.tablePost != null)) {
                    this.tablePost.InitVars();
                }
            }
            this.tableOrganize = ((OrganizeDataTable)(base.Tables["Organize"]));
            if ((initTable == true)) {
                if ((this.tableOrganize != null)) {
                    this.tableOrganize.InitVars();
                }
            }
            this.tableStandardEnum = ((StandardEnumDataTable)(base.Tables["StandardEnum"]));
            if ((initTable == true)) {
                if ((this.tableStandardEnum != null)) {
                    this.tableStandardEnum.InitVars();
                }
            }
            this.tableMemberCharge = ((MemberChargeDataTable)(base.Tables["MemberCharge"]));
            if ((initTable == true)) {
                if ((this.tableMemberCharge != null)) {
                    this.tableMemberCharge.InitVars();
                }
            }
            this.tablePrise = ((PriseDataTable)(base.Tables["Prise"]));
            if ((initTable == true)) {
                if ((this.tablePrise != null)) {
                    this.tablePrise.InitVars();
                }
            }
            this.tableMemberStatic = ((MemberStaticDataTable)(base.Tables["MemberStatic"]));
            if ((initTable == true)) {
                if ((this.tableMemberStatic != null)) {
                    this.tableMemberStatic.InitVars();
                }
            }
            this.tableNotification = ((NotificationDataTable)(base.Tables["Notification"]));
            if ((initTable == true)) {
                if ((this.tableNotification != null)) {
                    this.tableNotification.InitVars();
                }
            }
            this.tableOutlayPublish = ((OutlayPublishDataTable)(base.Tables["OutlayPublish"]));
            if ((initTable == true)) {
                if ((this.tableOutlayPublish != null)) {
                    this.tableOutlayPublish.InitVars();
                }
            }
            this.tableOutlayUse = ((OutlayUseDataTable)(base.Tables["OutlayUse"]));
            if ((initTable == true)) {
                if ((this.tableOutlayUse != null)) {
                    this.tableOutlayUse.InitVars();
                }
            }
            this.tableMemberImport = ((MemberImportDataTable)(base.Tables["MemberImport"]));
            if ((initTable == true)) {
                if ((this.tableMemberImport != null)) {
                    this.tableMemberImport.InitVars();
                }
            }
            this.tableMember = ((MemberDataTable)(base.Tables["Member"]));
            if ((initTable == true)) {
                if ((this.tableMember != null)) {
                    this.tableMember.InitVars();
                }
            }
            this.tableBudgetApply = ((BudgetApplyDataTable)(base.Tables["BudgetApply"]));
            if ((initTable == true)) {
                if ((this.tableBudgetApply != null)) {
                    this.tableBudgetApply.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "YouthOneDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/YouthOneDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableYouthGroup = new YouthGroupDataTable();
            base.Tables.Add(this.tableYouthGroup);
            this.tableSystemAdmin = new SystemAdminDataTable();
            base.Tables.Add(this.tableSystemAdmin);
            this.tableSystemLog = new SystemLogDataTable();
            base.Tables.Add(this.tableSystemLog);
            this.tablePost = new PostDataTable();
            base.Tables.Add(this.tablePost);
            this.tableOrganize = new OrganizeDataTable();
            base.Tables.Add(this.tableOrganize);
            this.tableStandardEnum = new StandardEnumDataTable();
            base.Tables.Add(this.tableStandardEnum);
            this.tableMemberCharge = new MemberChargeDataTable();
            base.Tables.Add(this.tableMemberCharge);
            this.tablePrise = new PriseDataTable();
            base.Tables.Add(this.tablePrise);
            this.tableMemberStatic = new MemberStaticDataTable();
            base.Tables.Add(this.tableMemberStatic);
            this.tableNotification = new NotificationDataTable();
            base.Tables.Add(this.tableNotification);
            this.tableOutlayPublish = new OutlayPublishDataTable();
            base.Tables.Add(this.tableOutlayPublish);
            this.tableOutlayUse = new OutlayUseDataTable();
            base.Tables.Add(this.tableOutlayUse);
            this.tableMemberImport = new MemberImportDataTable();
            base.Tables.Add(this.tableMemberImport);
            this.tableMember = new MemberDataTable();
            base.Tables.Add(this.tableMember);
            this.tableBudgetApply = new BudgetApplyDataTable();
            base.Tables.Add(this.tableBudgetApply);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeYouthGroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSystemAdmin() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSystemLog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePost() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrganize() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStandardEnum() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMemberCharge() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePrise() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMemberStatic() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNotification() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOutlayPublish() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOutlayUse() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMemberImport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMember() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBudgetApply() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            YouthOneDS ds = new YouthOneDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void YouthGroupRowChangeEventHandler(object sender, YouthGroupRowChangeEvent e);
        
        public delegate void SystemAdminRowChangeEventHandler(object sender, SystemAdminRowChangeEvent e);
        
        public delegate void SystemLogRowChangeEventHandler(object sender, SystemLogRowChangeEvent e);
        
        public delegate void PostRowChangeEventHandler(object sender, PostRowChangeEvent e);
        
        public delegate void OrganizeRowChangeEventHandler(object sender, OrganizeRowChangeEvent e);
        
        public delegate void StandardEnumRowChangeEventHandler(object sender, StandardEnumRowChangeEvent e);
        
        public delegate void MemberChargeRowChangeEventHandler(object sender, MemberChargeRowChangeEvent e);
        
        public delegate void PriseRowChangeEventHandler(object sender, PriseRowChangeEvent e);
        
        public delegate void MemberStaticRowChangeEventHandler(object sender, MemberStaticRowChangeEvent e);
        
        public delegate void NotificationRowChangeEventHandler(object sender, NotificationRowChangeEvent e);
        
        public delegate void OutlayPublishRowChangeEventHandler(object sender, OutlayPublishRowChangeEvent e);
        
        public delegate void OutlayUseRowChangeEventHandler(object sender, OutlayUseRowChangeEvent e);
        
        public delegate void MemberImportRowChangeEventHandler(object sender, MemberImportRowChangeEvent e);
        
        public delegate void MemberRowChangeEventHandler(object sender, MemberRowChangeEvent e);
        
        public delegate void BudgetApplyRowChangeEventHandler(object sender, BudgetApplyRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class YouthGroupDataTable : global::System.Data.TypedTableBase<YouthGroupRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnYG_NAME;
            
            private global::System.Data.DataColumn columnYG_LEVEL;
            
            private global::System.Data.DataColumn columnPARENT_OID;
            
            private global::System.Data.DataColumn columnCRE_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public YouthGroupDataTable() {
                this.TableName = "YouthGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal YouthGroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected YouthGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YG_NAMEColumn {
                get {
                    return this.columnYG_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YG_LEVELColumn {
                get {
                    return this.columnYG_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARENT_OIDColumn {
                get {
                    return this.columnPARENT_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRE_DATEColumn {
                get {
                    return this.columnCRE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public YouthGroupRow this[int index] {
                get {
                    return ((YouthGroupRow)(this.Rows[index]));
                }
            }
            
            public event YouthGroupRowChangeEventHandler YouthGroupRowChanging;
            
            public event YouthGroupRowChangeEventHandler YouthGroupRowChanged;
            
            public event YouthGroupRowChangeEventHandler YouthGroupRowDeleting;
            
            public event YouthGroupRowChangeEventHandler YouthGroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddYouthGroupRow(YouthGroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public YouthGroupRow AddYouthGroupRow(string OID, string YG_NAME, int YG_LEVEL, string PARENT_OID, System.DateTime CRE_DATE) {
                YouthGroupRow rowYouthGroupRow = ((YouthGroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        YG_NAME,
                        YG_LEVEL,
                        PARENT_OID,
                        CRE_DATE};
                rowYouthGroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowYouthGroupRow);
                return rowYouthGroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public YouthGroupRow FindByOID(string OID) {
                return ((YouthGroupRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                YouthGroupDataTable cln = ((YouthGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new YouthGroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnYG_NAME = base.Columns["YG_NAME"];
                this.columnYG_LEVEL = base.Columns["YG_LEVEL"];
                this.columnPARENT_OID = base.Columns["PARENT_OID"];
                this.columnCRE_DATE = base.Columns["CRE_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnYG_NAME = new global::System.Data.DataColumn("YG_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYG_NAME);
                this.columnYG_LEVEL = new global::System.Data.DataColumn("YG_LEVEL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYG_LEVEL);
                this.columnPARENT_OID = new global::System.Data.DataColumn("PARENT_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARENT_OID);
                this.columnCRE_DATE = new global::System.Data.DataColumn("CRE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRE_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnYG_NAME.AllowDBNull = false;
                this.columnYG_NAME.MaxLength = 50;
                this.columnYG_LEVEL.AllowDBNull = false;
                this.columnPARENT_OID.AllowDBNull = false;
                this.columnPARENT_OID.MaxLength = 50;
                this.columnCRE_DATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public YouthGroupRow NewYouthGroupRow() {
                return ((YouthGroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new YouthGroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(YouthGroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.YouthGroupRowChanged != null)) {
                    this.YouthGroupRowChanged(this, new YouthGroupRowChangeEvent(((YouthGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.YouthGroupRowChanging != null)) {
                    this.YouthGroupRowChanging(this, new YouthGroupRowChangeEvent(((YouthGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.YouthGroupRowDeleted != null)) {
                    this.YouthGroupRowDeleted(this, new YouthGroupRowChangeEvent(((YouthGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.YouthGroupRowDeleting != null)) {
                    this.YouthGroupRowDeleting(this, new YouthGroupRowChangeEvent(((YouthGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveYouthGroupRow(YouthGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "YouthGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SystemAdminDataTable : global::System.Data.TypedTableBase<SystemAdminRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnLOG_NAME;
            
            private global::System.Data.DataColumn columnPAS_WORD;
            
            private global::System.Data.DataColumn columnROL_NAME;
            
            private global::System.Data.DataColumn columnCRE_DATE;
            
            private global::System.Data.DataColumn columnYG_OID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemAdminDataTable() {
                this.TableName = "SystemAdmin";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SystemAdminDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SystemAdminDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOG_NAMEColumn {
                get {
                    return this.columnLOG_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAS_WORDColumn {
                get {
                    return this.columnPAS_WORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROL_NAMEColumn {
                get {
                    return this.columnROL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRE_DATEColumn {
                get {
                    return this.columnCRE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YG_OIDColumn {
                get {
                    return this.columnYG_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemAdminRow this[int index] {
                get {
                    return ((SystemAdminRow)(this.Rows[index]));
                }
            }
            
            public event SystemAdminRowChangeEventHandler SystemAdminRowChanging;
            
            public event SystemAdminRowChangeEventHandler SystemAdminRowChanged;
            
            public event SystemAdminRowChangeEventHandler SystemAdminRowDeleting;
            
            public event SystemAdminRowChangeEventHandler SystemAdminRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSystemAdminRow(SystemAdminRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemAdminRow AddSystemAdminRow(string OID, string LOG_NAME, string PAS_WORD, string ROL_NAME, System.DateTime CRE_DATE, string YG_OID) {
                SystemAdminRow rowSystemAdminRow = ((SystemAdminRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        LOG_NAME,
                        PAS_WORD,
                        ROL_NAME,
                        CRE_DATE,
                        YG_OID};
                rowSystemAdminRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSystemAdminRow);
                return rowSystemAdminRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemAdminRow FindByOID(string OID) {
                return ((SystemAdminRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SystemAdminDataTable cln = ((SystemAdminDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SystemAdminDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnLOG_NAME = base.Columns["LOG_NAME"];
                this.columnPAS_WORD = base.Columns["PAS_WORD"];
                this.columnROL_NAME = base.Columns["ROL_NAME"];
                this.columnCRE_DATE = base.Columns["CRE_DATE"];
                this.columnYG_OID = base.Columns["YG_OID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnLOG_NAME = new global::System.Data.DataColumn("LOG_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOG_NAME);
                this.columnPAS_WORD = new global::System.Data.DataColumn("PAS_WORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAS_WORD);
                this.columnROL_NAME = new global::System.Data.DataColumn("ROL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROL_NAME);
                this.columnCRE_DATE = new global::System.Data.DataColumn("CRE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRE_DATE);
                this.columnYG_OID = new global::System.Data.DataColumn("YG_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYG_OID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnLOG_NAME.AllowDBNull = false;
                this.columnLOG_NAME.MaxLength = 50;
                this.columnPAS_WORD.AllowDBNull = false;
                this.columnPAS_WORD.MaxLength = 50;
                this.columnROL_NAME.AllowDBNull = false;
                this.columnROL_NAME.MaxLength = 50;
                this.columnCRE_DATE.AllowDBNull = false;
                this.columnYG_OID.AllowDBNull = false;
                this.columnYG_OID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemAdminRow NewSystemAdminRow() {
                return ((SystemAdminRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SystemAdminRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SystemAdminRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SystemAdminRowChanged != null)) {
                    this.SystemAdminRowChanged(this, new SystemAdminRowChangeEvent(((SystemAdminRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SystemAdminRowChanging != null)) {
                    this.SystemAdminRowChanging(this, new SystemAdminRowChangeEvent(((SystemAdminRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SystemAdminRowDeleted != null)) {
                    this.SystemAdminRowDeleted(this, new SystemAdminRowChangeEvent(((SystemAdminRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SystemAdminRowDeleting != null)) {
                    this.SystemAdminRowDeleting(this, new SystemAdminRowChangeEvent(((SystemAdminRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSystemAdminRow(SystemAdminRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SystemAdminDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SystemLogDataTable : global::System.Data.TypedTableBase<SystemLogRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnSA_OID;
            
            private global::System.Data.DataColumn columnSA_NAME;
            
            private global::System.Data.DataColumn columnOP_DATE;
            
            private global::System.Data.DataColumn columnOP_TYPE;
            
            private global::System.Data.DataColumn columnOP_NAME;
            
            private global::System.Data.DataColumn columnOP_DESC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemLogDataTable() {
                this.TableName = "SystemLog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SystemLogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SystemLogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_OIDColumn {
                get {
                    return this.columnSA_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SA_NAMEColumn {
                get {
                    return this.columnSA_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OP_DATEColumn {
                get {
                    return this.columnOP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OP_TYPEColumn {
                get {
                    return this.columnOP_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OP_NAMEColumn {
                get {
                    return this.columnOP_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OP_DESCColumn {
                get {
                    return this.columnOP_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemLogRow this[int index] {
                get {
                    return ((SystemLogRow)(this.Rows[index]));
                }
            }
            
            public event SystemLogRowChangeEventHandler SystemLogRowChanging;
            
            public event SystemLogRowChangeEventHandler SystemLogRowChanged;
            
            public event SystemLogRowChangeEventHandler SystemLogRowDeleting;
            
            public event SystemLogRowChangeEventHandler SystemLogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSystemLogRow(SystemLogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemLogRow AddSystemLogRow(string OID, string SA_OID, string SA_NAME, System.DateTime OP_DATE, string OP_TYPE, string OP_NAME, string OP_DESC) {
                SystemLogRow rowSystemLogRow = ((SystemLogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        SA_OID,
                        SA_NAME,
                        OP_DATE,
                        OP_TYPE,
                        OP_NAME,
                        OP_DESC};
                rowSystemLogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSystemLogRow);
                return rowSystemLogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemLogRow FindByOID(string OID) {
                return ((SystemLogRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SystemLogDataTable cln = ((SystemLogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SystemLogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnSA_OID = base.Columns["SA_OID"];
                this.columnSA_NAME = base.Columns["SA_NAME"];
                this.columnOP_DATE = base.Columns["OP_DATE"];
                this.columnOP_TYPE = base.Columns["OP_TYPE"];
                this.columnOP_NAME = base.Columns["OP_NAME"];
                this.columnOP_DESC = base.Columns["OP_DESC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnSA_OID = new global::System.Data.DataColumn("SA_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_OID);
                this.columnSA_NAME = new global::System.Data.DataColumn("SA_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSA_NAME);
                this.columnOP_DATE = new global::System.Data.DataColumn("OP_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP_DATE);
                this.columnOP_TYPE = new global::System.Data.DataColumn("OP_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP_TYPE);
                this.columnOP_NAME = new global::System.Data.DataColumn("OP_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP_NAME);
                this.columnOP_DESC = new global::System.Data.DataColumn("OP_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP_DESC);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnSA_OID.AllowDBNull = false;
                this.columnSA_OID.MaxLength = 50;
                this.columnSA_NAME.AllowDBNull = false;
                this.columnSA_NAME.MaxLength = 50;
                this.columnOP_DATE.AllowDBNull = false;
                this.columnOP_TYPE.AllowDBNull = false;
                this.columnOP_TYPE.MaxLength = 50;
                this.columnOP_NAME.AllowDBNull = false;
                this.columnOP_NAME.MaxLength = 50;
                this.columnOP_DESC.AllowDBNull = false;
                this.columnOP_DESC.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemLogRow NewSystemLogRow() {
                return ((SystemLogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SystemLogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SystemLogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SystemLogRowChanged != null)) {
                    this.SystemLogRowChanged(this, new SystemLogRowChangeEvent(((SystemLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SystemLogRowChanging != null)) {
                    this.SystemLogRowChanging(this, new SystemLogRowChangeEvent(((SystemLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SystemLogRowDeleted != null)) {
                    this.SystemLogRowDeleted(this, new SystemLogRowChangeEvent(((SystemLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SystemLogRowDeleting != null)) {
                    this.SystemLogRowDeleting(this, new SystemLogRowChangeEvent(((SystemLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSystemLogRow(SystemLogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SystemLogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PostDataTable : global::System.Data.TypedTableBase<PostRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnCRE_DATE;
            
            private global::System.Data.DataColumn columnCAT_NAME;
            
            private global::System.Data.DataColumn columnPOST_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PostDataTable() {
                this.TableName = "Post";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PostDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PostDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRE_DATEColumn {
                get {
                    return this.columnCRE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CAT_NAMEColumn {
                get {
                    return this.columnCAT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POST_NAMEColumn {
                get {
                    return this.columnPOST_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PostRow this[int index] {
                get {
                    return ((PostRow)(this.Rows[index]));
                }
            }
            
            public event PostRowChangeEventHandler PostRowChanging;
            
            public event PostRowChangeEventHandler PostRowChanged;
            
            public event PostRowChangeEventHandler PostRowDeleting;
            
            public event PostRowChangeEventHandler PostRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPostRow(PostRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PostRow AddPostRow(string OID, System.DateTime CRE_DATE, string CAT_NAME, string POST_NAME) {
                PostRow rowPostRow = ((PostRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        CRE_DATE,
                        CAT_NAME,
                        POST_NAME};
                rowPostRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPostRow);
                return rowPostRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PostRow FindByOID(string OID) {
                return ((PostRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PostDataTable cln = ((PostDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PostDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnCRE_DATE = base.Columns["CRE_DATE"];
                this.columnCAT_NAME = base.Columns["CAT_NAME"];
                this.columnPOST_NAME = base.Columns["POST_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnCRE_DATE = new global::System.Data.DataColumn("CRE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRE_DATE);
                this.columnCAT_NAME = new global::System.Data.DataColumn("CAT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAT_NAME);
                this.columnPOST_NAME = new global::System.Data.DataColumn("POST_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOST_NAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnCRE_DATE.AllowDBNull = false;
                this.columnCAT_NAME.AllowDBNull = false;
                this.columnCAT_NAME.MaxLength = 50;
                this.columnPOST_NAME.AllowDBNull = false;
                this.columnPOST_NAME.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PostRow NewPostRow() {
                return ((PostRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PostRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PostRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PostRowChanged != null)) {
                    this.PostRowChanged(this, new PostRowChangeEvent(((PostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PostRowChanging != null)) {
                    this.PostRowChanging(this, new PostRowChangeEvent(((PostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PostRowDeleted != null)) {
                    this.PostRowDeleted(this, new PostRowChangeEvent(((PostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PostRowDeleting != null)) {
                    this.PostRowDeleting(this, new PostRowChangeEvent(((PostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePostRow(PostRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PostDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrganizeDataTable : global::System.Data.TypedTableBase<OrganizeRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnCRE_DATE;
            
            private global::System.Data.DataColumn columnOG_NAME;
            
            private global::System.Data.DataColumn columnOG_LEVEL;
            
            private global::System.Data.DataColumn columnOG_ORDER;
            
            private global::System.Data.DataColumn columnPARENT_OID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizeDataTable() {
                this.TableName = "Organize";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrganizeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrganizeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRE_DATEColumn {
                get {
                    return this.columnCRE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OG_NAMEColumn {
                get {
                    return this.columnOG_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OG_LEVELColumn {
                get {
                    return this.columnOG_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OG_ORDERColumn {
                get {
                    return this.columnOG_ORDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARENT_OIDColumn {
                get {
                    return this.columnPARENT_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizeRow this[int index] {
                get {
                    return ((OrganizeRow)(this.Rows[index]));
                }
            }
            
            public event OrganizeRowChangeEventHandler OrganizeRowChanging;
            
            public event OrganizeRowChangeEventHandler OrganizeRowChanged;
            
            public event OrganizeRowChangeEventHandler OrganizeRowDeleting;
            
            public event OrganizeRowChangeEventHandler OrganizeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrganizeRow(OrganizeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizeRow AddOrganizeRow(string OID, System.DateTime CRE_DATE, string OG_NAME, int OG_LEVEL, int OG_ORDER, string PARENT_OID) {
                OrganizeRow rowOrganizeRow = ((OrganizeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        CRE_DATE,
                        OG_NAME,
                        OG_LEVEL,
                        OG_ORDER,
                        PARENT_OID};
                rowOrganizeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrganizeRow);
                return rowOrganizeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizeRow FindByOID(string OID) {
                return ((OrganizeRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OrganizeDataTable cln = ((OrganizeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrganizeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnCRE_DATE = base.Columns["CRE_DATE"];
                this.columnOG_NAME = base.Columns["OG_NAME"];
                this.columnOG_LEVEL = base.Columns["OG_LEVEL"];
                this.columnOG_ORDER = base.Columns["OG_ORDER"];
                this.columnPARENT_OID = base.Columns["PARENT_OID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnCRE_DATE = new global::System.Data.DataColumn("CRE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRE_DATE);
                this.columnOG_NAME = new global::System.Data.DataColumn("OG_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOG_NAME);
                this.columnOG_LEVEL = new global::System.Data.DataColumn("OG_LEVEL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOG_LEVEL);
                this.columnOG_ORDER = new global::System.Data.DataColumn("OG_ORDER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOG_ORDER);
                this.columnPARENT_OID = new global::System.Data.DataColumn("PARENT_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARENT_OID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnCRE_DATE.AllowDBNull = false;
                this.columnOG_NAME.AllowDBNull = false;
                this.columnOG_NAME.MaxLength = 50;
                this.columnOG_LEVEL.AllowDBNull = false;
                this.columnOG_ORDER.AllowDBNull = false;
                this.columnPARENT_OID.AllowDBNull = false;
                this.columnPARENT_OID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizeRow NewOrganizeRow() {
                return ((OrganizeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrganizeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OrganizeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrganizeRowChanged != null)) {
                    this.OrganizeRowChanged(this, new OrganizeRowChangeEvent(((OrganizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrganizeRowChanging != null)) {
                    this.OrganizeRowChanging(this, new OrganizeRowChangeEvent(((OrganizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrganizeRowDeleted != null)) {
                    this.OrganizeRowDeleted(this, new OrganizeRowChangeEvent(((OrganizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrganizeRowDeleting != null)) {
                    this.OrganizeRowDeleting(this, new OrganizeRowChangeEvent(((OrganizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrganizeRow(OrganizeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrganizeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StandardEnumDataTable : global::System.Data.TypedTableBase<StandardEnumRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnSE_TYPE;
            
            private global::System.Data.DataColumn columnSE_KEY;
            
            private global::System.Data.DataColumn columnSE_VALUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardEnumDataTable() {
                this.TableName = "StandardEnum";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StandardEnumDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StandardEnumDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SE_TYPEColumn {
                get {
                    return this.columnSE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SE_KEYColumn {
                get {
                    return this.columnSE_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SE_VALUEColumn {
                get {
                    return this.columnSE_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardEnumRow this[int index] {
                get {
                    return ((StandardEnumRow)(this.Rows[index]));
                }
            }
            
            public event StandardEnumRowChangeEventHandler StandardEnumRowChanging;
            
            public event StandardEnumRowChangeEventHandler StandardEnumRowChanged;
            
            public event StandardEnumRowChangeEventHandler StandardEnumRowDeleting;
            
            public event StandardEnumRowChangeEventHandler StandardEnumRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStandardEnumRow(StandardEnumRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardEnumRow AddStandardEnumRow(string OID, string SE_TYPE, string SE_KEY, string SE_VALUE) {
                StandardEnumRow rowStandardEnumRow = ((StandardEnumRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        SE_TYPE,
                        SE_KEY,
                        SE_VALUE};
                rowStandardEnumRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStandardEnumRow);
                return rowStandardEnumRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardEnumRow FindByOID(string OID) {
                return ((StandardEnumRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StandardEnumDataTable cln = ((StandardEnumDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StandardEnumDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnSE_TYPE = base.Columns["SE_TYPE"];
                this.columnSE_KEY = base.Columns["SE_KEY"];
                this.columnSE_VALUE = base.Columns["SE_VALUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnSE_TYPE = new global::System.Data.DataColumn("SE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSE_TYPE);
                this.columnSE_KEY = new global::System.Data.DataColumn("SE_KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSE_KEY);
                this.columnSE_VALUE = new global::System.Data.DataColumn("SE_VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSE_VALUE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnSE_TYPE.AllowDBNull = false;
                this.columnSE_TYPE.MaxLength = 50;
                this.columnSE_KEY.AllowDBNull = false;
                this.columnSE_KEY.MaxLength = 50;
                this.columnSE_VALUE.AllowDBNull = false;
                this.columnSE_VALUE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardEnumRow NewStandardEnumRow() {
                return ((StandardEnumRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StandardEnumRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StandardEnumRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StandardEnumRowChanged != null)) {
                    this.StandardEnumRowChanged(this, new StandardEnumRowChangeEvent(((StandardEnumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StandardEnumRowChanging != null)) {
                    this.StandardEnumRowChanging(this, new StandardEnumRowChangeEvent(((StandardEnumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StandardEnumRowDeleted != null)) {
                    this.StandardEnumRowDeleted(this, new StandardEnumRowChangeEvent(((StandardEnumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StandardEnumRowDeleting != null)) {
                    this.StandardEnumRowDeleting(this, new StandardEnumRowChangeEvent(((StandardEnumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStandardEnumRow(StandardEnumRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StandardEnumDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MemberChargeDataTable : global::System.Data.TypedTableBase<MemberChargeRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnYG_OID;
            
            private global::System.Data.DataColumn columnMC_CODE;
            
            private global::System.Data.DataColumn columnYG_MEMBER;
            
            private global::System.Data.DataColumn columnYG_PARTY;
            
            private global::System.Data.DataColumn columnYJ_1;
            
            private global::System.Data.DataColumn columnYJ_2;
            
            private global::System.Data.DataColumn columnYJ_3;
            
            private global::System.Data.DataColumn columnBJ_1;
            
            private global::System.Data.DataColumn columnBJ_2;
            
            private global::System.Data.DataColumn columnBJ_3;
            
            private global::System.Data.DataColumn columnHJ_NUM;
            
            private global::System.Data.DataColumn columnHJ_ZW;
            
            private global::System.Data.DataColumn columnMC_DATE;
            
            private global::System.Data.DataColumn columnMC_JKR;
            
            private global::System.Data.DataColumn columnMC_SKR;
            
            private global::System.Data.DataColumn columnCRE_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberChargeDataTable() {
                this.TableName = "MemberCharge";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MemberChargeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MemberChargeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YG_OIDColumn {
                get {
                    return this.columnYG_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MC_CODEColumn {
                get {
                    return this.columnMC_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YG_MEMBERColumn {
                get {
                    return this.columnYG_MEMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YG_PARTYColumn {
                get {
                    return this.columnYG_PARTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YJ_1Column {
                get {
                    return this.columnYJ_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YJ_2Column {
                get {
                    return this.columnYJ_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YJ_3Column {
                get {
                    return this.columnYJ_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BJ_1Column {
                get {
                    return this.columnBJ_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BJ_2Column {
                get {
                    return this.columnBJ_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BJ_3Column {
                get {
                    return this.columnBJ_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HJ_NUMColumn {
                get {
                    return this.columnHJ_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HJ_ZWColumn {
                get {
                    return this.columnHJ_ZW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MC_DATEColumn {
                get {
                    return this.columnMC_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MC_JKRColumn {
                get {
                    return this.columnMC_JKR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MC_SKRColumn {
                get {
                    return this.columnMC_SKR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRE_DATEColumn {
                get {
                    return this.columnCRE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberChargeRow this[int index] {
                get {
                    return ((MemberChargeRow)(this.Rows[index]));
                }
            }
            
            public event MemberChargeRowChangeEventHandler MemberChargeRowChanging;
            
            public event MemberChargeRowChangeEventHandler MemberChargeRowChanged;
            
            public event MemberChargeRowChangeEventHandler MemberChargeRowDeleting;
            
            public event MemberChargeRowChangeEventHandler MemberChargeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMemberChargeRow(MemberChargeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberChargeRow AddMemberChargeRow(
                        string OID, 
                        string YG_OID, 
                        string MC_CODE, 
                        int YG_MEMBER, 
                        int YG_PARTY, 
                        int YJ_1, 
                        int YJ_2, 
                        int YJ_3, 
                        int BJ_1, 
                        int BJ_2, 
                        int BJ_3, 
                        int HJ_NUM, 
                        string HJ_ZW, 
                        System.DateTime MC_DATE, 
                        string MC_JKR, 
                        string MC_SKR, 
                        System.DateTime CRE_DATE) {
                MemberChargeRow rowMemberChargeRow = ((MemberChargeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        YG_OID,
                        MC_CODE,
                        YG_MEMBER,
                        YG_PARTY,
                        YJ_1,
                        YJ_2,
                        YJ_3,
                        BJ_1,
                        BJ_2,
                        BJ_3,
                        HJ_NUM,
                        HJ_ZW,
                        MC_DATE,
                        MC_JKR,
                        MC_SKR,
                        CRE_DATE};
                rowMemberChargeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMemberChargeRow);
                return rowMemberChargeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberChargeRow FindByOID(string OID) {
                return ((MemberChargeRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MemberChargeDataTable cln = ((MemberChargeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MemberChargeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnYG_OID = base.Columns["YG_OID"];
                this.columnMC_CODE = base.Columns["MC_CODE"];
                this.columnYG_MEMBER = base.Columns["YG_MEMBER"];
                this.columnYG_PARTY = base.Columns["YG_PARTY"];
                this.columnYJ_1 = base.Columns["YJ_1"];
                this.columnYJ_2 = base.Columns["YJ_2"];
                this.columnYJ_3 = base.Columns["YJ_3"];
                this.columnBJ_1 = base.Columns["BJ_1"];
                this.columnBJ_2 = base.Columns["BJ_2"];
                this.columnBJ_3 = base.Columns["BJ_3"];
                this.columnHJ_NUM = base.Columns["HJ_NUM"];
                this.columnHJ_ZW = base.Columns["HJ_ZW"];
                this.columnMC_DATE = base.Columns["MC_DATE"];
                this.columnMC_JKR = base.Columns["MC_JKR"];
                this.columnMC_SKR = base.Columns["MC_SKR"];
                this.columnCRE_DATE = base.Columns["CRE_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnYG_OID = new global::System.Data.DataColumn("YG_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYG_OID);
                this.columnMC_CODE = new global::System.Data.DataColumn("MC_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMC_CODE);
                this.columnYG_MEMBER = new global::System.Data.DataColumn("YG_MEMBER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYG_MEMBER);
                this.columnYG_PARTY = new global::System.Data.DataColumn("YG_PARTY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYG_PARTY);
                this.columnYJ_1 = new global::System.Data.DataColumn("YJ_1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYJ_1);
                this.columnYJ_2 = new global::System.Data.DataColumn("YJ_2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYJ_2);
                this.columnYJ_3 = new global::System.Data.DataColumn("YJ_3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYJ_3);
                this.columnBJ_1 = new global::System.Data.DataColumn("BJ_1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBJ_1);
                this.columnBJ_2 = new global::System.Data.DataColumn("BJ_2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBJ_2);
                this.columnBJ_3 = new global::System.Data.DataColumn("BJ_3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBJ_3);
                this.columnHJ_NUM = new global::System.Data.DataColumn("HJ_NUM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHJ_NUM);
                this.columnHJ_ZW = new global::System.Data.DataColumn("HJ_ZW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHJ_ZW);
                this.columnMC_DATE = new global::System.Data.DataColumn("MC_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMC_DATE);
                this.columnMC_JKR = new global::System.Data.DataColumn("MC_JKR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMC_JKR);
                this.columnMC_SKR = new global::System.Data.DataColumn("MC_SKR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMC_SKR);
                this.columnCRE_DATE = new global::System.Data.DataColumn("CRE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRE_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnYG_OID.AllowDBNull = false;
                this.columnYG_OID.MaxLength = 50;
                this.columnMC_CODE.AllowDBNull = false;
                this.columnMC_CODE.MaxLength = 50;
                this.columnYG_MEMBER.AllowDBNull = false;
                this.columnYG_PARTY.AllowDBNull = false;
                this.columnYJ_1.AllowDBNull = false;
                this.columnYJ_2.AllowDBNull = false;
                this.columnYJ_3.AllowDBNull = false;
                this.columnBJ_1.AllowDBNull = false;
                this.columnBJ_2.AllowDBNull = false;
                this.columnBJ_3.AllowDBNull = false;
                this.columnHJ_NUM.AllowDBNull = false;
                this.columnHJ_ZW.AllowDBNull = false;
                this.columnHJ_ZW.MaxLength = 50;
                this.columnMC_DATE.AllowDBNull = false;
                this.columnMC_JKR.AllowDBNull = false;
                this.columnMC_JKR.MaxLength = 50;
                this.columnMC_SKR.AllowDBNull = false;
                this.columnMC_SKR.MaxLength = 50;
                this.columnCRE_DATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberChargeRow NewMemberChargeRow() {
                return ((MemberChargeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MemberChargeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MemberChargeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MemberChargeRowChanged != null)) {
                    this.MemberChargeRowChanged(this, new MemberChargeRowChangeEvent(((MemberChargeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MemberChargeRowChanging != null)) {
                    this.MemberChargeRowChanging(this, new MemberChargeRowChangeEvent(((MemberChargeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MemberChargeRowDeleted != null)) {
                    this.MemberChargeRowDeleted(this, new MemberChargeRowChangeEvent(((MemberChargeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MemberChargeRowDeleting != null)) {
                    this.MemberChargeRowDeleting(this, new MemberChargeRowChangeEvent(((MemberChargeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMemberChargeRow(MemberChargeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MemberChargeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PriseDataTable : global::System.Data.TypedTableBase<PriseRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnFK_Member;
            
            private global::System.Data.DataColumn columnPR_NAME;
            
            private global::System.Data.DataColumn columnPR_UNIT;
            
            private global::System.Data.DataColumn columnPR_DATE;
            
            private global::System.Data.DataColumn columnPR_VALUE;
            
            private global::System.Data.DataColumn columnEX_TEXT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriseDataTable() {
                this.TableName = "Prise";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PriseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PriseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_MemberColumn {
                get {
                    return this.columnFK_Member;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PR_NAMEColumn {
                get {
                    return this.columnPR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PR_UNITColumn {
                get {
                    return this.columnPR_UNIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PR_DATEColumn {
                get {
                    return this.columnPR_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PR_VALUEColumn {
                get {
                    return this.columnPR_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EX_TEXTColumn {
                get {
                    return this.columnEX_TEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriseRow this[int index] {
                get {
                    return ((PriseRow)(this.Rows[index]));
                }
            }
            
            public event PriseRowChangeEventHandler PriseRowChanging;
            
            public event PriseRowChangeEventHandler PriseRowChanged;
            
            public event PriseRowChangeEventHandler PriseRowDeleting;
            
            public event PriseRowChangeEventHandler PriseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPriseRow(PriseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriseRow AddPriseRow(string OID, string FK_Member, string PR_NAME, string PR_UNIT, System.DateTime PR_DATE, decimal PR_VALUE, string EX_TEXT) {
                PriseRow rowPriseRow = ((PriseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        FK_Member,
                        PR_NAME,
                        PR_UNIT,
                        PR_DATE,
                        PR_VALUE,
                        EX_TEXT};
                rowPriseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPriseRow);
                return rowPriseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriseRow FindByOID(string OID) {
                return ((PriseRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PriseDataTable cln = ((PriseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PriseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnFK_Member = base.Columns["FK_Member"];
                this.columnPR_NAME = base.Columns["PR_NAME"];
                this.columnPR_UNIT = base.Columns["PR_UNIT"];
                this.columnPR_DATE = base.Columns["PR_DATE"];
                this.columnPR_VALUE = base.Columns["PR_VALUE"];
                this.columnEX_TEXT = base.Columns["EX_TEXT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnFK_Member = new global::System.Data.DataColumn("FK_Member", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_Member);
                this.columnPR_NAME = new global::System.Data.DataColumn("PR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPR_NAME);
                this.columnPR_UNIT = new global::System.Data.DataColumn("PR_UNIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPR_UNIT);
                this.columnPR_DATE = new global::System.Data.DataColumn("PR_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPR_DATE);
                this.columnPR_VALUE = new global::System.Data.DataColumn("PR_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPR_VALUE);
                this.columnEX_TEXT = new global::System.Data.DataColumn("EX_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEX_TEXT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnFK_Member.AllowDBNull = false;
                this.columnFK_Member.MaxLength = 50;
                this.columnPR_NAME.AllowDBNull = false;
                this.columnPR_NAME.MaxLength = 100;
                this.columnPR_UNIT.AllowDBNull = false;
                this.columnPR_UNIT.MaxLength = 100;
                this.columnPR_DATE.AllowDBNull = false;
                this.columnPR_VALUE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriseRow NewPriseRow() {
                return ((PriseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PriseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PriseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PriseRowChanged != null)) {
                    this.PriseRowChanged(this, new PriseRowChangeEvent(((PriseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PriseRowChanging != null)) {
                    this.PriseRowChanging(this, new PriseRowChangeEvent(((PriseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PriseRowDeleted != null)) {
                    this.PriseRowDeleted(this, new PriseRowChangeEvent(((PriseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PriseRowDeleting != null)) {
                    this.PriseRowDeleting(this, new PriseRowChangeEvent(((PriseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePriseRow(PriseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PriseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MemberStaticDataTable : global::System.Data.TypedTableBase<MemberStaticRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnMS_YEAR;
            
            private global::System.Data.DataColumn columnMS_NUM;
            
            private global::System.Data.DataColumn columnYG_NAME;
            
            private global::System.Data.DataColumn columnMM_MALE;
            
            private global::System.Data.DataColumn columnMM_FEMALE;
            
            private global::System.Data.DataColumn columnMM_SUM;
            
            private global::System.Data.DataColumn columnMM_1428_MALE;
            
            private global::System.Data.DataColumn columnMM_1428_FEMALE;
            
            private global::System.Data.DataColumn columnMM_1428_SUM;
            
            private global::System.Data.DataColumn columnMM_35_MALE;
            
            private global::System.Data.DataColumn columnMM_35_FEMALE;
            
            private global::System.Data.DataColumn columnMM_35_SUM;
            
            private global::System.Data.DataColumn columnMM_NEW;
            
            private global::System.Data.DataColumn columnMM_PARTY;
            
            private global::System.Data.DataColumn columnPARTY_APP;
            
            private global::System.Data.DataColumn columnMM_PARTY_APP;
            
            private global::System.Data.DataColumn columnMM_CL;
            
            private global::System.Data.DataColumn columnMM_NT;
            
            private global::System.Data.DataColumn columnMS_REMARK;
            
            private global::System.Data.DataColumn columnCRE_DATE;
            
            private global::System.Data.DataColumn columnMS_35_PARTY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberStaticDataTable() {
                this.TableName = "MemberStatic";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MemberStaticDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MemberStaticDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MS_YEARColumn {
                get {
                    return this.columnMS_YEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MS_NUMColumn {
                get {
                    return this.columnMS_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YG_NAMEColumn {
                get {
                    return this.columnYG_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_MALEColumn {
                get {
                    return this.columnMM_MALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_FEMALEColumn {
                get {
                    return this.columnMM_FEMALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_SUMColumn {
                get {
                    return this.columnMM_SUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_1428_MALEColumn {
                get {
                    return this.columnMM_1428_MALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_1428_FEMALEColumn {
                get {
                    return this.columnMM_1428_FEMALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_1428_SUMColumn {
                get {
                    return this.columnMM_1428_SUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_35_MALEColumn {
                get {
                    return this.columnMM_35_MALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_35_FEMALEColumn {
                get {
                    return this.columnMM_35_FEMALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_35_SUMColumn {
                get {
                    return this.columnMM_35_SUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_NEWColumn {
                get {
                    return this.columnMM_NEW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_PARTYColumn {
                get {
                    return this.columnMM_PARTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARTY_APPColumn {
                get {
                    return this.columnPARTY_APP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_PARTY_APPColumn {
                get {
                    return this.columnMM_PARTY_APP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_CLColumn {
                get {
                    return this.columnMM_CL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_NTColumn {
                get {
                    return this.columnMM_NT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MS_REMARKColumn {
                get {
                    return this.columnMS_REMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRE_DATEColumn {
                get {
                    return this.columnCRE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MS_35_PARTYColumn {
                get {
                    return this.columnMS_35_PARTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberStaticRow this[int index] {
                get {
                    return ((MemberStaticRow)(this.Rows[index]));
                }
            }
            
            public event MemberStaticRowChangeEventHandler MemberStaticRowChanging;
            
            public event MemberStaticRowChangeEventHandler MemberStaticRowChanged;
            
            public event MemberStaticRowChangeEventHandler MemberStaticRowDeleting;
            
            public event MemberStaticRowChangeEventHandler MemberStaticRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMemberStaticRow(MemberStaticRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberStaticRow AddMemberStaticRow(
                        string OID, 
                        int MS_YEAR, 
                        int MS_NUM, 
                        string YG_NAME, 
                        int MM_MALE, 
                        int MM_FEMALE, 
                        int MM_SUM, 
                        int MM_1428_MALE, 
                        int MM_1428_FEMALE, 
                        int MM_1428_SUM, 
                        int MM_35_MALE, 
                        int MM_35_FEMALE, 
                        int MM_35_SUM, 
                        int MM_NEW, 
                        int MM_PARTY, 
                        int PARTY_APP, 
                        int MM_PARTY_APP, 
                        int MM_CL, 
                        int MM_NT, 
                        string MS_REMARK, 
                        System.DateTime CRE_DATE, 
                        int MS_35_PARTY) {
                MemberStaticRow rowMemberStaticRow = ((MemberStaticRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        MS_YEAR,
                        MS_NUM,
                        YG_NAME,
                        MM_MALE,
                        MM_FEMALE,
                        MM_SUM,
                        MM_1428_MALE,
                        MM_1428_FEMALE,
                        MM_1428_SUM,
                        MM_35_MALE,
                        MM_35_FEMALE,
                        MM_35_SUM,
                        MM_NEW,
                        MM_PARTY,
                        PARTY_APP,
                        MM_PARTY_APP,
                        MM_CL,
                        MM_NT,
                        MS_REMARK,
                        CRE_DATE,
                        MS_35_PARTY};
                rowMemberStaticRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMemberStaticRow);
                return rowMemberStaticRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberStaticRow FindByOID(string OID) {
                return ((MemberStaticRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MemberStaticDataTable cln = ((MemberStaticDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MemberStaticDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnMS_YEAR = base.Columns["MS_YEAR"];
                this.columnMS_NUM = base.Columns["MS_NUM"];
                this.columnYG_NAME = base.Columns["YG_NAME"];
                this.columnMM_MALE = base.Columns["MM_MALE"];
                this.columnMM_FEMALE = base.Columns["MM_FEMALE"];
                this.columnMM_SUM = base.Columns["MM_SUM"];
                this.columnMM_1428_MALE = base.Columns["MM_1428_MALE"];
                this.columnMM_1428_FEMALE = base.Columns["MM_1428_FEMALE"];
                this.columnMM_1428_SUM = base.Columns["MM_1428_SUM"];
                this.columnMM_35_MALE = base.Columns["MM_35_MALE"];
                this.columnMM_35_FEMALE = base.Columns["MM_35_FEMALE"];
                this.columnMM_35_SUM = base.Columns["MM_35_SUM"];
                this.columnMM_NEW = base.Columns["MM_NEW"];
                this.columnMM_PARTY = base.Columns["MM_PARTY"];
                this.columnPARTY_APP = base.Columns["PARTY_APP"];
                this.columnMM_PARTY_APP = base.Columns["MM_PARTY_APP"];
                this.columnMM_CL = base.Columns["MM_CL"];
                this.columnMM_NT = base.Columns["MM_NT"];
                this.columnMS_REMARK = base.Columns["MS_REMARK"];
                this.columnCRE_DATE = base.Columns["CRE_DATE"];
                this.columnMS_35_PARTY = base.Columns["MS_35_PARTY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnMS_YEAR = new global::System.Data.DataColumn("MS_YEAR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMS_YEAR);
                this.columnMS_NUM = new global::System.Data.DataColumn("MS_NUM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMS_NUM);
                this.columnYG_NAME = new global::System.Data.DataColumn("YG_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYG_NAME);
                this.columnMM_MALE = new global::System.Data.DataColumn("MM_MALE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_MALE);
                this.columnMM_FEMALE = new global::System.Data.DataColumn("MM_FEMALE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_FEMALE);
                this.columnMM_SUM = new global::System.Data.DataColumn("MM_SUM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_SUM);
                this.columnMM_1428_MALE = new global::System.Data.DataColumn("MM_1428_MALE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_1428_MALE);
                this.columnMM_1428_FEMALE = new global::System.Data.DataColumn("MM_1428_FEMALE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_1428_FEMALE);
                this.columnMM_1428_SUM = new global::System.Data.DataColumn("MM_1428_SUM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_1428_SUM);
                this.columnMM_35_MALE = new global::System.Data.DataColumn("MM_35_MALE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_35_MALE);
                this.columnMM_35_FEMALE = new global::System.Data.DataColumn("MM_35_FEMALE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_35_FEMALE);
                this.columnMM_35_SUM = new global::System.Data.DataColumn("MM_35_SUM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_35_SUM);
                this.columnMM_NEW = new global::System.Data.DataColumn("MM_NEW", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_NEW);
                this.columnMM_PARTY = new global::System.Data.DataColumn("MM_PARTY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_PARTY);
                this.columnPARTY_APP = new global::System.Data.DataColumn("PARTY_APP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTY_APP);
                this.columnMM_PARTY_APP = new global::System.Data.DataColumn("MM_PARTY_APP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_PARTY_APP);
                this.columnMM_CL = new global::System.Data.DataColumn("MM_CL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_CL);
                this.columnMM_NT = new global::System.Data.DataColumn("MM_NT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_NT);
                this.columnMS_REMARK = new global::System.Data.DataColumn("MS_REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMS_REMARK);
                this.columnCRE_DATE = new global::System.Data.DataColumn("CRE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRE_DATE);
                this.columnMS_35_PARTY = new global::System.Data.DataColumn("MS_35_PARTY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMS_35_PARTY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnMS_YEAR.AllowDBNull = false;
                this.columnMS_NUM.AllowDBNull = false;
                this.columnYG_NAME.AllowDBNull = false;
                this.columnYG_NAME.MaxLength = 50;
                this.columnMM_MALE.AllowDBNull = false;
                this.columnMM_FEMALE.AllowDBNull = false;
                this.columnMM_SUM.AllowDBNull = false;
                this.columnMM_1428_MALE.AllowDBNull = false;
                this.columnMM_1428_FEMALE.AllowDBNull = false;
                this.columnMM_1428_SUM.AllowDBNull = false;
                this.columnMM_35_MALE.AllowDBNull = false;
                this.columnMM_35_FEMALE.AllowDBNull = false;
                this.columnMM_35_SUM.AllowDBNull = false;
                this.columnMM_NEW.AllowDBNull = false;
                this.columnMM_PARTY.AllowDBNull = false;
                this.columnPARTY_APP.AllowDBNull = false;
                this.columnMM_PARTY_APP.AllowDBNull = false;
                this.columnMM_CL.AllowDBNull = false;
                this.columnMM_NT.AllowDBNull = false;
                this.columnMS_REMARK.AllowDBNull = false;
                this.columnMS_REMARK.MaxLength = 50;
                this.columnCRE_DATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberStaticRow NewMemberStaticRow() {
                return ((MemberStaticRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MemberStaticRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MemberStaticRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MemberStaticRowChanged != null)) {
                    this.MemberStaticRowChanged(this, new MemberStaticRowChangeEvent(((MemberStaticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MemberStaticRowChanging != null)) {
                    this.MemberStaticRowChanging(this, new MemberStaticRowChangeEvent(((MemberStaticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MemberStaticRowDeleted != null)) {
                    this.MemberStaticRowDeleted(this, new MemberStaticRowChangeEvent(((MemberStaticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MemberStaticRowDeleting != null)) {
                    this.MemberStaticRowDeleting(this, new MemberStaticRowChangeEvent(((MemberStaticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMemberStaticRow(MemberStaticRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MemberStaticDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NotificationDataTable : global::System.Data.TypedTableBase<NotificationRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnMM_OID;
            
            private global::System.Data.DataColumn columnMM_NAME;
            
            private global::System.Data.DataColumn columnMM_YG_OID;
            
            private global::System.Data.DataColumn columnMM_YG_NAME;
            
            private global::System.Data.DataColumn columnNF_NAME;
            
            private global::System.Data.DataColumn columnNF_YG_OID;
            
            private global::System.Data.DataColumn columnNF_CAT;
            
            private global::System.Data.DataColumn columnNF_STATUS;
            
            private global::System.Data.DataColumn columnOP_DATE;
            
            private global::System.Data.DataColumn columnOP_ADMIN;
            
            private global::System.Data.DataColumn columnCRE_DATE;
            
            private global::System.Data.DataColumn columnDept;
            
            private global::System.Data.DataColumn columnWorkGroup;
            
            private global::System.Data.DataColumn columnPost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotificationDataTable() {
                this.TableName = "Notification";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NotificationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NotificationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_OIDColumn {
                get {
                    return this.columnMM_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_NAMEColumn {
                get {
                    return this.columnMM_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_YG_OIDColumn {
                get {
                    return this.columnMM_YG_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MM_YG_NAMEColumn {
                get {
                    return this.columnMM_YG_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NF_NAMEColumn {
                get {
                    return this.columnNF_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NF_YG_OIDColumn {
                get {
                    return this.columnNF_YG_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NF_CATColumn {
                get {
                    return this.columnNF_CAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NF_STATUSColumn {
                get {
                    return this.columnNF_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OP_DATEColumn {
                get {
                    return this.columnOP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OP_ADMINColumn {
                get {
                    return this.columnOP_ADMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRE_DATEColumn {
                get {
                    return this.columnCRE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptColumn {
                get {
                    return this.columnDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkGroupColumn {
                get {
                    return this.columnWorkGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostColumn {
                get {
                    return this.columnPost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotificationRow this[int index] {
                get {
                    return ((NotificationRow)(this.Rows[index]));
                }
            }
            
            public event NotificationRowChangeEventHandler NotificationRowChanging;
            
            public event NotificationRowChangeEventHandler NotificationRowChanged;
            
            public event NotificationRowChangeEventHandler NotificationRowDeleting;
            
            public event NotificationRowChangeEventHandler NotificationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNotificationRow(NotificationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotificationRow AddNotificationRow(string OID, string MM_OID, string MM_NAME, string MM_YG_OID, string MM_YG_NAME, string NF_NAME, string NF_YG_OID, string NF_CAT, int NF_STATUS, System.DateTime OP_DATE, string OP_ADMIN, System.DateTime CRE_DATE, string Dept, string WorkGroup, string Post) {
                NotificationRow rowNotificationRow = ((NotificationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        MM_OID,
                        MM_NAME,
                        MM_YG_OID,
                        MM_YG_NAME,
                        NF_NAME,
                        NF_YG_OID,
                        NF_CAT,
                        NF_STATUS,
                        OP_DATE,
                        OP_ADMIN,
                        CRE_DATE,
                        Dept,
                        WorkGroup,
                        Post};
                rowNotificationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNotificationRow);
                return rowNotificationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotificationRow FindByOID(string OID) {
                return ((NotificationRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                NotificationDataTable cln = ((NotificationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NotificationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnMM_OID = base.Columns["MM_OID"];
                this.columnMM_NAME = base.Columns["MM_NAME"];
                this.columnMM_YG_OID = base.Columns["MM_YG_OID"];
                this.columnMM_YG_NAME = base.Columns["MM_YG_NAME"];
                this.columnNF_NAME = base.Columns["NF_NAME"];
                this.columnNF_YG_OID = base.Columns["NF_YG_OID"];
                this.columnNF_CAT = base.Columns["NF_CAT"];
                this.columnNF_STATUS = base.Columns["NF_STATUS"];
                this.columnOP_DATE = base.Columns["OP_DATE"];
                this.columnOP_ADMIN = base.Columns["OP_ADMIN"];
                this.columnCRE_DATE = base.Columns["CRE_DATE"];
                this.columnDept = base.Columns["Dept"];
                this.columnWorkGroup = base.Columns["WorkGroup"];
                this.columnPost = base.Columns["Post"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnMM_OID = new global::System.Data.DataColumn("MM_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_OID);
                this.columnMM_NAME = new global::System.Data.DataColumn("MM_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_NAME);
                this.columnMM_YG_OID = new global::System.Data.DataColumn("MM_YG_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_YG_OID);
                this.columnMM_YG_NAME = new global::System.Data.DataColumn("MM_YG_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM_YG_NAME);
                this.columnNF_NAME = new global::System.Data.DataColumn("NF_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNF_NAME);
                this.columnNF_YG_OID = new global::System.Data.DataColumn("NF_YG_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNF_YG_OID);
                this.columnNF_CAT = new global::System.Data.DataColumn("NF_CAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNF_CAT);
                this.columnNF_STATUS = new global::System.Data.DataColumn("NF_STATUS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNF_STATUS);
                this.columnOP_DATE = new global::System.Data.DataColumn("OP_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP_DATE);
                this.columnOP_ADMIN = new global::System.Data.DataColumn("OP_ADMIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP_ADMIN);
                this.columnCRE_DATE = new global::System.Data.DataColumn("CRE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRE_DATE);
                this.columnDept = new global::System.Data.DataColumn("Dept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept);
                this.columnWorkGroup = new global::System.Data.DataColumn("WorkGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkGroup);
                this.columnPost = new global::System.Data.DataColumn("Post", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnMM_OID.AllowDBNull = false;
                this.columnMM_OID.MaxLength = 50;
                this.columnMM_NAME.AllowDBNull = false;
                this.columnMM_NAME.MaxLength = 50;
                this.columnMM_YG_OID.AllowDBNull = false;
                this.columnMM_YG_OID.MaxLength = 50;
                this.columnMM_YG_NAME.AllowDBNull = false;
                this.columnMM_YG_NAME.MaxLength = 50;
                this.columnNF_NAME.AllowDBNull = false;
                this.columnNF_NAME.MaxLength = 200;
                this.columnNF_YG_OID.AllowDBNull = false;
                this.columnNF_YG_OID.MaxLength = 50;
                this.columnNF_CAT.AllowDBNull = false;
                this.columnNF_CAT.MaxLength = 50;
                this.columnNF_STATUS.AllowDBNull = false;
                this.columnOP_DATE.AllowDBNull = false;
                this.columnOP_ADMIN.AllowDBNull = false;
                this.columnOP_ADMIN.MaxLength = 50;
                this.columnCRE_DATE.AllowDBNull = false;
                this.columnDept.MaxLength = 50;
                this.columnWorkGroup.MaxLength = 50;
                this.columnPost.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotificationRow NewNotificationRow() {
                return ((NotificationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NotificationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(NotificationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NotificationRowChanged != null)) {
                    this.NotificationRowChanged(this, new NotificationRowChangeEvent(((NotificationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NotificationRowChanging != null)) {
                    this.NotificationRowChanging(this, new NotificationRowChangeEvent(((NotificationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NotificationRowDeleted != null)) {
                    this.NotificationRowDeleted(this, new NotificationRowChangeEvent(((NotificationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NotificationRowDeleting != null)) {
                    this.NotificationRowDeleting(this, new NotificationRowChangeEvent(((NotificationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNotificationRow(NotificationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NotificationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OutlayPublishDataTable : global::System.Data.TypedTableBase<OutlayPublishRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnOP_ADMIN;
            
            private global::System.Data.DataColumn columnYG_OID;
            
            private global::System.Data.DataColumn columnOL_NUM;
            
            private global::System.Data.DataColumn columnOL_STATUS;
            
            private global::System.Data.DataColumn columnOL_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayPublishDataTable() {
                this.TableName = "OutlayPublish";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OutlayPublishDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OutlayPublishDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OP_ADMINColumn {
                get {
                    return this.columnOP_ADMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YG_OIDColumn {
                get {
                    return this.columnYG_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OL_NUMColumn {
                get {
                    return this.columnOL_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OL_STATUSColumn {
                get {
                    return this.columnOL_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OL_DATEColumn {
                get {
                    return this.columnOL_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayPublishRow this[int index] {
                get {
                    return ((OutlayPublishRow)(this.Rows[index]));
                }
            }
            
            public event OutlayPublishRowChangeEventHandler OutlayPublishRowChanging;
            
            public event OutlayPublishRowChangeEventHandler OutlayPublishRowChanged;
            
            public event OutlayPublishRowChangeEventHandler OutlayPublishRowDeleting;
            
            public event OutlayPublishRowChangeEventHandler OutlayPublishRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOutlayPublishRow(OutlayPublishRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayPublishRow AddOutlayPublishRow(string OID, string OP_ADMIN, string YG_OID, decimal OL_NUM, string OL_STATUS, System.DateTime OL_DATE) {
                OutlayPublishRow rowOutlayPublishRow = ((OutlayPublishRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        OP_ADMIN,
                        YG_OID,
                        OL_NUM,
                        OL_STATUS,
                        OL_DATE};
                rowOutlayPublishRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOutlayPublishRow);
                return rowOutlayPublishRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayPublishRow FindByOID(string OID) {
                return ((OutlayPublishRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OutlayPublishDataTable cln = ((OutlayPublishDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OutlayPublishDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnOP_ADMIN = base.Columns["OP_ADMIN"];
                this.columnYG_OID = base.Columns["YG_OID"];
                this.columnOL_NUM = base.Columns["OL_NUM"];
                this.columnOL_STATUS = base.Columns["OL_STATUS"];
                this.columnOL_DATE = base.Columns["OL_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnOP_ADMIN = new global::System.Data.DataColumn("OP_ADMIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP_ADMIN);
                this.columnYG_OID = new global::System.Data.DataColumn("YG_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYG_OID);
                this.columnOL_NUM = new global::System.Data.DataColumn("OL_NUM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOL_NUM);
                this.columnOL_STATUS = new global::System.Data.DataColumn("OL_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOL_STATUS);
                this.columnOL_DATE = new global::System.Data.DataColumn("OL_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOL_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnOP_ADMIN.AllowDBNull = false;
                this.columnOP_ADMIN.MaxLength = 50;
                this.columnYG_OID.AllowDBNull = false;
                this.columnYG_OID.MaxLength = 50;
                this.columnOL_NUM.AllowDBNull = false;
                this.columnOL_STATUS.AllowDBNull = false;
                this.columnOL_STATUS.MaxLength = 10;
                this.columnOL_DATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayPublishRow NewOutlayPublishRow() {
                return ((OutlayPublishRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OutlayPublishRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OutlayPublishRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OutlayPublishRowChanged != null)) {
                    this.OutlayPublishRowChanged(this, new OutlayPublishRowChangeEvent(((OutlayPublishRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OutlayPublishRowChanging != null)) {
                    this.OutlayPublishRowChanging(this, new OutlayPublishRowChangeEvent(((OutlayPublishRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OutlayPublishRowDeleted != null)) {
                    this.OutlayPublishRowDeleted(this, new OutlayPublishRowChangeEvent(((OutlayPublishRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OutlayPublishRowDeleting != null)) {
                    this.OutlayPublishRowDeleting(this, new OutlayPublishRowChangeEvent(((OutlayPublishRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOutlayPublishRow(OutlayPublishRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OutlayPublishDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OutlayUseDataTable : global::System.Data.TypedTableBase<OutlayUseRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnYG_OID;
            
            private global::System.Data.DataColumn columnOU_TYPE;
            
            private global::System.Data.DataColumn columnOU_ZC;
            
            private global::System.Data.DataColumn columnOU_SL;
            
            private global::System.Data.DataColumn columnOU_JY;
            
            private global::System.Data.DataColumn columnOU_DESC;
            
            private global::System.Data.DataColumn columnOU_DATE;
            
            private global::System.Data.DataColumn columnOU_ADMIN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayUseDataTable() {
                this.TableName = "OutlayUse";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OutlayUseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OutlayUseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YG_OIDColumn {
                get {
                    return this.columnYG_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OU_TYPEColumn {
                get {
                    return this.columnOU_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OU_ZCColumn {
                get {
                    return this.columnOU_ZC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OU_SLColumn {
                get {
                    return this.columnOU_SL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OU_JYColumn {
                get {
                    return this.columnOU_JY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OU_DESCColumn {
                get {
                    return this.columnOU_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OU_DATEColumn {
                get {
                    return this.columnOU_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OU_ADMINColumn {
                get {
                    return this.columnOU_ADMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayUseRow this[int index] {
                get {
                    return ((OutlayUseRow)(this.Rows[index]));
                }
            }
            
            public event OutlayUseRowChangeEventHandler OutlayUseRowChanging;
            
            public event OutlayUseRowChangeEventHandler OutlayUseRowChanged;
            
            public event OutlayUseRowChangeEventHandler OutlayUseRowDeleting;
            
            public event OutlayUseRowChangeEventHandler OutlayUseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOutlayUseRow(OutlayUseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayUseRow AddOutlayUseRow(string OID, string YG_OID, string OU_TYPE, decimal OU_ZC, decimal OU_SL, decimal OU_JY, string OU_DESC, System.DateTime OU_DATE, string OU_ADMIN) {
                OutlayUseRow rowOutlayUseRow = ((OutlayUseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        YG_OID,
                        OU_TYPE,
                        OU_ZC,
                        OU_SL,
                        OU_JY,
                        OU_DESC,
                        OU_DATE,
                        OU_ADMIN};
                rowOutlayUseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOutlayUseRow);
                return rowOutlayUseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayUseRow FindByOID(string OID) {
                return ((OutlayUseRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OutlayUseDataTable cln = ((OutlayUseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OutlayUseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnYG_OID = base.Columns["YG_OID"];
                this.columnOU_TYPE = base.Columns["OU_TYPE"];
                this.columnOU_ZC = base.Columns["OU_ZC"];
                this.columnOU_SL = base.Columns["OU_SL"];
                this.columnOU_JY = base.Columns["OU_JY"];
                this.columnOU_DESC = base.Columns["OU_DESC"];
                this.columnOU_DATE = base.Columns["OU_DATE"];
                this.columnOU_ADMIN = base.Columns["OU_ADMIN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnYG_OID = new global::System.Data.DataColumn("YG_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYG_OID);
                this.columnOU_TYPE = new global::System.Data.DataColumn("OU_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOU_TYPE);
                this.columnOU_ZC = new global::System.Data.DataColumn("OU_ZC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOU_ZC);
                this.columnOU_SL = new global::System.Data.DataColumn("OU_SL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOU_SL);
                this.columnOU_JY = new global::System.Data.DataColumn("OU_JY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOU_JY);
                this.columnOU_DESC = new global::System.Data.DataColumn("OU_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOU_DESC);
                this.columnOU_DATE = new global::System.Data.DataColumn("OU_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOU_DATE);
                this.columnOU_ADMIN = new global::System.Data.DataColumn("OU_ADMIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOU_ADMIN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnYG_OID.AllowDBNull = false;
                this.columnYG_OID.MaxLength = 50;
                this.columnOU_TYPE.AllowDBNull = false;
                this.columnOU_TYPE.MaxLength = 5;
                this.columnOU_ZC.AllowDBNull = false;
                this.columnOU_SL.AllowDBNull = false;
                this.columnOU_JY.AllowDBNull = false;
                this.columnOU_DESC.AllowDBNull = false;
                this.columnOU_DESC.MaxLength = 50;
                this.columnOU_DATE.AllowDBNull = false;
                this.columnOU_ADMIN.AllowDBNull = false;
                this.columnOU_ADMIN.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayUseRow NewOutlayUseRow() {
                return ((OutlayUseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OutlayUseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OutlayUseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OutlayUseRowChanged != null)) {
                    this.OutlayUseRowChanged(this, new OutlayUseRowChangeEvent(((OutlayUseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OutlayUseRowChanging != null)) {
                    this.OutlayUseRowChanging(this, new OutlayUseRowChangeEvent(((OutlayUseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OutlayUseRowDeleted != null)) {
                    this.OutlayUseRowDeleted(this, new OutlayUseRowChangeEvent(((OutlayUseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OutlayUseRowDeleting != null)) {
                    this.OutlayUseRowDeleting(this, new OutlayUseRowChangeEvent(((OutlayUseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOutlayUseRow(OutlayUseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OutlayUseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MemberImportDataTable : global::System.Data.TypedTableBase<MemberImportRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnExcelNum;
            
            private global::System.Data.DataColumn columnErrorDesc;
            
            private global::System.Data.DataColumn columnFK_YouthGroup;
            
            private global::System.Data.DataColumn columnFK_YouthGroup_FZ;
            
            private global::System.Data.DataColumn columnDept;
            
            private global::System.Data.DataColumn columnWorkGroup;
            
            private global::System.Data.DataColumn columnPost;
            
            private global::System.Data.DataColumn columnHrCode;
            
            private global::System.Data.DataColumn columnHrType;
            
            private global::System.Data.DataColumn columnHrStatus;
            
            private global::System.Data.DataColumn columnEmpName;
            
            private global::System.Data.DataColumn columnEmpID;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnParttimeName;
            
            private global::System.Data.DataColumn columnJobDateTime;
            
            private global::System.Data.DataColumn columnComDateTime;
            
            private global::System.Data.DataColumn columnWedding;
            
            private global::System.Data.DataColumn columnNativePlace;
            
            private global::System.Data.DataColumn columnPolitics;
            
            private global::System.Data.DataColumn columnPartyDate;
            
            private global::System.Data.DataColumn columnNation;
            
            private global::System.Data.DataColumn columnHouse;
            
            private global::System.Data.DataColumn columnSkillLevel;
            
            private global::System.Data.DataColumn columnFstSchoolExp;
            
            private global::System.Data.DataColumn columnFstDegree;
            
            private global::System.Data.DataColumn columnLstSchoolExp;
            
            private global::System.Data.DataColumn columnLstDegree;
            
            private global::System.Data.DataColumn columnFstSchool;
            
            private global::System.Data.DataColumn columnFstProfession;
            
            private global::System.Data.DataColumn columnFstGraduateDate;
            
            private global::System.Data.DataColumn columnLstSchool;
            
            private global::System.Data.DataColumn columnLstProfession;
            
            private global::System.Data.DataColumn columnLstGraduateDate;
            
            private global::System.Data.DataColumn columnApplyParty;
            
            private global::System.Data.DataColumn columnApplyPartyDate;
            
            private global::System.Data.DataColumn columnVolunteerInfo;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnSpecialSkill;
            
            private global::System.Data.DataColumn columnYouthChargeStd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberImportDataTable() {
                this.TableName = "MemberImport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MemberImportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MemberImportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExcelNumColumn {
                get {
                    return this.columnExcelNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ErrorDescColumn {
                get {
                    return this.columnErrorDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_YouthGroupColumn {
                get {
                    return this.columnFK_YouthGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_YouthGroup_FZColumn {
                get {
                    return this.columnFK_YouthGroup_FZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptColumn {
                get {
                    return this.columnDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkGroupColumn {
                get {
                    return this.columnWorkGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostColumn {
                get {
                    return this.columnPost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HrCodeColumn {
                get {
                    return this.columnHrCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HrTypeColumn {
                get {
                    return this.columnHrType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HrStatusColumn {
                get {
                    return this.columnHrStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpIDColumn {
                get {
                    return this.columnEmpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParttimeNameColumn {
                get {
                    return this.columnParttimeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobDateTimeColumn {
                get {
                    return this.columnJobDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComDateTimeColumn {
                get {
                    return this.columnComDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeddingColumn {
                get {
                    return this.columnWedding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NativePlaceColumn {
                get {
                    return this.columnNativePlace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoliticsColumn {
                get {
                    return this.columnPolitics;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartyDateColumn {
                get {
                    return this.columnPartyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NationColumn {
                get {
                    return this.columnNation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HouseColumn {
                get {
                    return this.columnHouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SkillLevelColumn {
                get {
                    return this.columnSkillLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FstSchoolExpColumn {
                get {
                    return this.columnFstSchoolExp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FstDegreeColumn {
                get {
                    return this.columnFstDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LstSchoolExpColumn {
                get {
                    return this.columnLstSchoolExp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LstDegreeColumn {
                get {
                    return this.columnLstDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FstSchoolColumn {
                get {
                    return this.columnFstSchool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FstProfessionColumn {
                get {
                    return this.columnFstProfession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FstGraduateDateColumn {
                get {
                    return this.columnFstGraduateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LstSchoolColumn {
                get {
                    return this.columnLstSchool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LstProfessionColumn {
                get {
                    return this.columnLstProfession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LstGraduateDateColumn {
                get {
                    return this.columnLstGraduateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyPartyColumn {
                get {
                    return this.columnApplyParty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyPartyDateColumn {
                get {
                    return this.columnApplyPartyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VolunteerInfoColumn {
                get {
                    return this.columnVolunteerInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialSkillColumn {
                get {
                    return this.columnSpecialSkill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YouthChargeStdColumn {
                get {
                    return this.columnYouthChargeStd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberImportRow this[int index] {
                get {
                    return ((MemberImportRow)(this.Rows[index]));
                }
            }
            
            public event MemberImportRowChangeEventHandler MemberImportRowChanging;
            
            public event MemberImportRowChangeEventHandler MemberImportRowChanged;
            
            public event MemberImportRowChangeEventHandler MemberImportRowDeleting;
            
            public event MemberImportRowChangeEventHandler MemberImportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMemberImportRow(MemberImportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberImportRow AddMemberImportRow(
                        string OID, 
                        int ExcelNum, 
                        string ErrorDesc, 
                        string FK_YouthGroup, 
                        string FK_YouthGroup_FZ, 
                        string Dept, 
                        string WorkGroup, 
                        string Post, 
                        string HrCode, 
                        string HrType, 
                        string HrStatus, 
                        string EmpName, 
                        string EmpID, 
                        string Sex, 
                        System.DateTime Birthday, 
                        int Age, 
                        string ParttimeName, 
                        System.DateTime JobDateTime, 
                        System.DateTime ComDateTime, 
                        string Wedding, 
                        string NativePlace, 
                        string Politics, 
                        System.DateTime PartyDate, 
                        string Nation, 
                        string House, 
                        string SkillLevel, 
                        string FstSchoolExp, 
                        string FstDegree, 
                        string LstSchoolExp, 
                        string LstDegree, 
                        string FstSchool, 
                        string FstProfession, 
                        System.DateTime FstGraduateDate, 
                        string LstSchool, 
                        string LstProfession, 
                        System.DateTime LstGraduateDate, 
                        string ApplyParty, 
                        System.DateTime ApplyPartyDate, 
                        string VolunteerInfo, 
                        string Mobile, 
                        string Email, 
                        string SpecialSkill, 
                        int YouthChargeStd) {
                MemberImportRow rowMemberImportRow = ((MemberImportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        ExcelNum,
                        ErrorDesc,
                        FK_YouthGroup,
                        FK_YouthGroup_FZ,
                        Dept,
                        WorkGroup,
                        Post,
                        HrCode,
                        HrType,
                        HrStatus,
                        EmpName,
                        EmpID,
                        Sex,
                        Birthday,
                        Age,
                        ParttimeName,
                        JobDateTime,
                        ComDateTime,
                        Wedding,
                        NativePlace,
                        Politics,
                        PartyDate,
                        Nation,
                        House,
                        SkillLevel,
                        FstSchoolExp,
                        FstDegree,
                        LstSchoolExp,
                        LstDegree,
                        FstSchool,
                        FstProfession,
                        FstGraduateDate,
                        LstSchool,
                        LstProfession,
                        LstGraduateDate,
                        ApplyParty,
                        ApplyPartyDate,
                        VolunteerInfo,
                        Mobile,
                        Email,
                        SpecialSkill,
                        YouthChargeStd};
                rowMemberImportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMemberImportRow);
                return rowMemberImportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberImportRow FindByOID(string OID) {
                return ((MemberImportRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MemberImportDataTable cln = ((MemberImportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MemberImportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnExcelNum = base.Columns["ExcelNum"];
                this.columnErrorDesc = base.Columns["ErrorDesc"];
                this.columnFK_YouthGroup = base.Columns["FK_YouthGroup"];
                this.columnFK_YouthGroup_FZ = base.Columns["FK_YouthGroup_FZ"];
                this.columnDept = base.Columns["Dept"];
                this.columnWorkGroup = base.Columns["WorkGroup"];
                this.columnPost = base.Columns["Post"];
                this.columnHrCode = base.Columns["HrCode"];
                this.columnHrType = base.Columns["HrType"];
                this.columnHrStatus = base.Columns["HrStatus"];
                this.columnEmpName = base.Columns["EmpName"];
                this.columnEmpID = base.Columns["EmpID"];
                this.columnSex = base.Columns["Sex"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnAge = base.Columns["Age"];
                this.columnParttimeName = base.Columns["ParttimeName"];
                this.columnJobDateTime = base.Columns["JobDateTime"];
                this.columnComDateTime = base.Columns["ComDateTime"];
                this.columnWedding = base.Columns["Wedding"];
                this.columnNativePlace = base.Columns["NativePlace"];
                this.columnPolitics = base.Columns["Politics"];
                this.columnPartyDate = base.Columns["PartyDate"];
                this.columnNation = base.Columns["Nation"];
                this.columnHouse = base.Columns["House"];
                this.columnSkillLevel = base.Columns["SkillLevel"];
                this.columnFstSchoolExp = base.Columns["FstSchoolExp"];
                this.columnFstDegree = base.Columns["FstDegree"];
                this.columnLstSchoolExp = base.Columns["LstSchoolExp"];
                this.columnLstDegree = base.Columns["LstDegree"];
                this.columnFstSchool = base.Columns["FstSchool"];
                this.columnFstProfession = base.Columns["FstProfession"];
                this.columnFstGraduateDate = base.Columns["FstGraduateDate"];
                this.columnLstSchool = base.Columns["LstSchool"];
                this.columnLstProfession = base.Columns["LstProfession"];
                this.columnLstGraduateDate = base.Columns["LstGraduateDate"];
                this.columnApplyParty = base.Columns["ApplyParty"];
                this.columnApplyPartyDate = base.Columns["ApplyPartyDate"];
                this.columnVolunteerInfo = base.Columns["VolunteerInfo"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnEmail = base.Columns["Email"];
                this.columnSpecialSkill = base.Columns["SpecialSkill"];
                this.columnYouthChargeStd = base.Columns["YouthChargeStd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnExcelNum = new global::System.Data.DataColumn("ExcelNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcelNum);
                this.columnErrorDesc = new global::System.Data.DataColumn("ErrorDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorDesc);
                this.columnFK_YouthGroup = new global::System.Data.DataColumn("FK_YouthGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_YouthGroup);
                this.columnFK_YouthGroup_FZ = new global::System.Data.DataColumn("FK_YouthGroup_FZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_YouthGroup_FZ);
                this.columnDept = new global::System.Data.DataColumn("Dept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept);
                this.columnWorkGroup = new global::System.Data.DataColumn("WorkGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkGroup);
                this.columnPost = new global::System.Data.DataColumn("Post", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost);
                this.columnHrCode = new global::System.Data.DataColumn("HrCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHrCode);
                this.columnHrType = new global::System.Data.DataColumn("HrType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHrType);
                this.columnHrStatus = new global::System.Data.DataColumn("HrStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHrStatus);
                this.columnEmpName = new global::System.Data.DataColumn("EmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpName);
                this.columnEmpID = new global::System.Data.DataColumn("EmpID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpID);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnParttimeName = new global::System.Data.DataColumn("ParttimeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParttimeName);
                this.columnJobDateTime = new global::System.Data.DataColumn("JobDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobDateTime);
                this.columnComDateTime = new global::System.Data.DataColumn("ComDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComDateTime);
                this.columnWedding = new global::System.Data.DataColumn("Wedding", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWedding);
                this.columnNativePlace = new global::System.Data.DataColumn("NativePlace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNativePlace);
                this.columnPolitics = new global::System.Data.DataColumn("Politics", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPolitics);
                this.columnPartyDate = new global::System.Data.DataColumn("PartyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartyDate);
                this.columnNation = new global::System.Data.DataColumn("Nation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNation);
                this.columnHouse = new global::System.Data.DataColumn("House", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouse);
                this.columnSkillLevel = new global::System.Data.DataColumn("SkillLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkillLevel);
                this.columnFstSchoolExp = new global::System.Data.DataColumn("FstSchoolExp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFstSchoolExp);
                this.columnFstDegree = new global::System.Data.DataColumn("FstDegree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFstDegree);
                this.columnLstSchoolExp = new global::System.Data.DataColumn("LstSchoolExp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLstSchoolExp);
                this.columnLstDegree = new global::System.Data.DataColumn("LstDegree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLstDegree);
                this.columnFstSchool = new global::System.Data.DataColumn("FstSchool", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFstSchool);
                this.columnFstProfession = new global::System.Data.DataColumn("FstProfession", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFstProfession);
                this.columnFstGraduateDate = new global::System.Data.DataColumn("FstGraduateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFstGraduateDate);
                this.columnLstSchool = new global::System.Data.DataColumn("LstSchool", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLstSchool);
                this.columnLstProfession = new global::System.Data.DataColumn("LstProfession", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLstProfession);
                this.columnLstGraduateDate = new global::System.Data.DataColumn("LstGraduateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLstGraduateDate);
                this.columnApplyParty = new global::System.Data.DataColumn("ApplyParty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyParty);
                this.columnApplyPartyDate = new global::System.Data.DataColumn("ApplyPartyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyPartyDate);
                this.columnVolunteerInfo = new global::System.Data.DataColumn("VolunteerInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolunteerInfo);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnSpecialSkill = new global::System.Data.DataColumn("SpecialSkill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialSkill);
                this.columnYouthChargeStd = new global::System.Data.DataColumn("YouthChargeStd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYouthChargeStd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnExcelNum.AllowDBNull = false;
                this.columnErrorDesc.AllowDBNull = false;
                this.columnErrorDesc.MaxLength = 500;
                this.columnFK_YouthGroup.AllowDBNull = false;
                this.columnFK_YouthGroup.MaxLength = 50;
                this.columnFK_YouthGroup_FZ.AllowDBNull = false;
                this.columnFK_YouthGroup_FZ.MaxLength = 50;
                this.columnDept.AllowDBNull = false;
                this.columnDept.MaxLength = 50;
                this.columnWorkGroup.AllowDBNull = false;
                this.columnWorkGroup.MaxLength = 50;
                this.columnPost.AllowDBNull = false;
                this.columnPost.MaxLength = 50;
                this.columnHrCode.AllowDBNull = false;
                this.columnHrCode.MaxLength = 20;
                this.columnHrType.AllowDBNull = false;
                this.columnHrType.MaxLength = 20;
                this.columnHrStatus.AllowDBNull = false;
                this.columnHrStatus.MaxLength = 20;
                this.columnEmpName.AllowDBNull = false;
                this.columnEmpName.MaxLength = 20;
                this.columnEmpID.AllowDBNull = false;
                this.columnEmpID.MaxLength = 30;
                this.columnSex.AllowDBNull = false;
                this.columnSex.MaxLength = 2;
                this.columnBirthday.AllowDBNull = false;
                this.columnAge.AllowDBNull = false;
                this.columnParttimeName.AllowDBNull = false;
                this.columnParttimeName.MaxLength = 20;
                this.columnJobDateTime.AllowDBNull = false;
                this.columnComDateTime.AllowDBNull = false;
                this.columnWedding.AllowDBNull = false;
                this.columnWedding.MaxLength = 10;
                this.columnNativePlace.AllowDBNull = false;
                this.columnNativePlace.MaxLength = 20;
                this.columnPolitics.AllowDBNull = false;
                this.columnPolitics.MaxLength = 20;
                this.columnPartyDate.AllowDBNull = false;
                this.columnNation.AllowDBNull = false;
                this.columnNation.MaxLength = 20;
                this.columnHouse.AllowDBNull = false;
                this.columnHouse.MaxLength = 20;
                this.columnSkillLevel.AllowDBNull = false;
                this.columnSkillLevel.MaxLength = 20;
                this.columnFstSchoolExp.AllowDBNull = false;
                this.columnFstSchoolExp.MaxLength = 20;
                this.columnFstDegree.AllowDBNull = false;
                this.columnFstDegree.MaxLength = 20;
                this.columnLstSchoolExp.AllowDBNull = false;
                this.columnLstSchoolExp.MaxLength = 20;
                this.columnLstDegree.AllowDBNull = false;
                this.columnLstDegree.MaxLength = 50;
                this.columnFstSchool.AllowDBNull = false;
                this.columnFstSchool.MaxLength = 50;
                this.columnFstProfession.AllowDBNull = false;
                this.columnFstProfession.MaxLength = 50;
                this.columnFstGraduateDate.AllowDBNull = false;
                this.columnLstSchool.AllowDBNull = false;
                this.columnLstSchool.MaxLength = 50;
                this.columnLstProfession.AllowDBNull = false;
                this.columnLstProfession.MaxLength = 50;
                this.columnLstGraduateDate.AllowDBNull = false;
                this.columnApplyParty.AllowDBNull = false;
                this.columnApplyParty.MaxLength = 2;
                this.columnApplyPartyDate.AllowDBNull = false;
                this.columnVolunteerInfo.AllowDBNull = false;
                this.columnVolunteerInfo.MaxLength = 100;
                this.columnMobile.AllowDBNull = false;
                this.columnMobile.MaxLength = 20;
                this.columnEmail.AllowDBNull = false;
                this.columnEmail.MaxLength = 50;
                this.columnSpecialSkill.AllowDBNull = false;
                this.columnSpecialSkill.MaxLength = 200;
                this.columnYouthChargeStd.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberImportRow NewMemberImportRow() {
                return ((MemberImportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MemberImportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MemberImportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MemberImportRowChanged != null)) {
                    this.MemberImportRowChanged(this, new MemberImportRowChangeEvent(((MemberImportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MemberImportRowChanging != null)) {
                    this.MemberImportRowChanging(this, new MemberImportRowChangeEvent(((MemberImportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MemberImportRowDeleted != null)) {
                    this.MemberImportRowDeleted(this, new MemberImportRowChangeEvent(((MemberImportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MemberImportRowDeleting != null)) {
                    this.MemberImportRowDeleting(this, new MemberImportRowChangeEvent(((MemberImportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMemberImportRow(MemberImportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MemberImportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MemberDataTable : global::System.Data.TypedTableBase<MemberRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnFK_YouthGroup;
            
            private global::System.Data.DataColumn columnFK_YouthGroup_FZ;
            
            private global::System.Data.DataColumn columnDept;
            
            private global::System.Data.DataColumn columnWorkGroup;
            
            private global::System.Data.DataColumn columnPost;
            
            private global::System.Data.DataColumn columnHrCode;
            
            private global::System.Data.DataColumn columnHrType;
            
            private global::System.Data.DataColumn columnHrStatus;
            
            private global::System.Data.DataColumn columnEmpName;
            
            private global::System.Data.DataColumn columnEmpID;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnParttimeName;
            
            private global::System.Data.DataColumn columnJobDateTime;
            
            private global::System.Data.DataColumn columnComDateTime;
            
            private global::System.Data.DataColumn columnWedding;
            
            private global::System.Data.DataColumn columnNativePlace;
            
            private global::System.Data.DataColumn columnPolitics;
            
            private global::System.Data.DataColumn columnPartyDate;
            
            private global::System.Data.DataColumn columnNation;
            
            private global::System.Data.DataColumn columnHouse;
            
            private global::System.Data.DataColumn columnSkillLevel;
            
            private global::System.Data.DataColumn columnFstSchoolExp;
            
            private global::System.Data.DataColumn columnFstDegree;
            
            private global::System.Data.DataColumn columnLstSchoolExp;
            
            private global::System.Data.DataColumn columnLstDegree;
            
            private global::System.Data.DataColumn columnFstSchool;
            
            private global::System.Data.DataColumn columnFstProfession;
            
            private global::System.Data.DataColumn columnFstGraduateDate;
            
            private global::System.Data.DataColumn columnLstSchool;
            
            private global::System.Data.DataColumn columnLstProfession;
            
            private global::System.Data.DataColumn columnLstGraduateDate;
            
            private global::System.Data.DataColumn columnApplyParty;
            
            private global::System.Data.DataColumn columnApplyPartyDate;
            
            private global::System.Data.DataColumn columnVolunteerInfo;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnSpecialSkill;
            
            private global::System.Data.DataColumn columnYouthChargeStd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberDataTable() {
                this.TableName = "Member";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MemberDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MemberDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_YouthGroupColumn {
                get {
                    return this.columnFK_YouthGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_YouthGroup_FZColumn {
                get {
                    return this.columnFK_YouthGroup_FZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptColumn {
                get {
                    return this.columnDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkGroupColumn {
                get {
                    return this.columnWorkGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostColumn {
                get {
                    return this.columnPost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HrCodeColumn {
                get {
                    return this.columnHrCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HrTypeColumn {
                get {
                    return this.columnHrType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HrStatusColumn {
                get {
                    return this.columnHrStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpIDColumn {
                get {
                    return this.columnEmpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParttimeNameColumn {
                get {
                    return this.columnParttimeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobDateTimeColumn {
                get {
                    return this.columnJobDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComDateTimeColumn {
                get {
                    return this.columnComDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeddingColumn {
                get {
                    return this.columnWedding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NativePlaceColumn {
                get {
                    return this.columnNativePlace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoliticsColumn {
                get {
                    return this.columnPolitics;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartyDateColumn {
                get {
                    return this.columnPartyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NationColumn {
                get {
                    return this.columnNation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HouseColumn {
                get {
                    return this.columnHouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SkillLevelColumn {
                get {
                    return this.columnSkillLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FstSchoolExpColumn {
                get {
                    return this.columnFstSchoolExp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FstDegreeColumn {
                get {
                    return this.columnFstDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LstSchoolExpColumn {
                get {
                    return this.columnLstSchoolExp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LstDegreeColumn {
                get {
                    return this.columnLstDegree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FstSchoolColumn {
                get {
                    return this.columnFstSchool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FstProfessionColumn {
                get {
                    return this.columnFstProfession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FstGraduateDateColumn {
                get {
                    return this.columnFstGraduateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LstSchoolColumn {
                get {
                    return this.columnLstSchool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LstProfessionColumn {
                get {
                    return this.columnLstProfession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LstGraduateDateColumn {
                get {
                    return this.columnLstGraduateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyPartyColumn {
                get {
                    return this.columnApplyParty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyPartyDateColumn {
                get {
                    return this.columnApplyPartyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VolunteerInfoColumn {
                get {
                    return this.columnVolunteerInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialSkillColumn {
                get {
                    return this.columnSpecialSkill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YouthChargeStdColumn {
                get {
                    return this.columnYouthChargeStd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberRow this[int index] {
                get {
                    return ((MemberRow)(this.Rows[index]));
                }
            }
            
            public event MemberRowChangeEventHandler MemberRowChanging;
            
            public event MemberRowChangeEventHandler MemberRowChanged;
            
            public event MemberRowChangeEventHandler MemberRowDeleting;
            
            public event MemberRowChangeEventHandler MemberRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMemberRow(MemberRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberRow AddMemberRow(
                        string OID, 
                        string FK_YouthGroup, 
                        string FK_YouthGroup_FZ, 
                        string Dept, 
                        string WorkGroup, 
                        string Post, 
                        string HrCode, 
                        string HrType, 
                        string HrStatus, 
                        string EmpName, 
                        string EmpID, 
                        string Sex, 
                        System.DateTime Birthday, 
                        int Age, 
                        string ParttimeName, 
                        System.DateTime JobDateTime, 
                        System.DateTime ComDateTime, 
                        string Wedding, 
                        string NativePlace, 
                        string Politics, 
                        System.DateTime PartyDate, 
                        string Nation, 
                        string House, 
                        string SkillLevel, 
                        string FstSchoolExp, 
                        string FstDegree, 
                        string LstSchoolExp, 
                        string LstDegree, 
                        string FstSchool, 
                        string FstProfession, 
                        System.DateTime FstGraduateDate, 
                        string LstSchool, 
                        string LstProfession, 
                        System.DateTime LstGraduateDate, 
                        string ApplyParty, 
                        System.DateTime ApplyPartyDate, 
                        string VolunteerInfo, 
                        string Mobile, 
                        string Email, 
                        string SpecialSkill, 
                        int YouthChargeStd) {
                MemberRow rowMemberRow = ((MemberRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        FK_YouthGroup,
                        FK_YouthGroup_FZ,
                        Dept,
                        WorkGroup,
                        Post,
                        HrCode,
                        HrType,
                        HrStatus,
                        EmpName,
                        EmpID,
                        Sex,
                        Birthday,
                        Age,
                        ParttimeName,
                        JobDateTime,
                        ComDateTime,
                        Wedding,
                        NativePlace,
                        Politics,
                        PartyDate,
                        Nation,
                        House,
                        SkillLevel,
                        FstSchoolExp,
                        FstDegree,
                        LstSchoolExp,
                        LstDegree,
                        FstSchool,
                        FstProfession,
                        FstGraduateDate,
                        LstSchool,
                        LstProfession,
                        LstGraduateDate,
                        ApplyParty,
                        ApplyPartyDate,
                        VolunteerInfo,
                        Mobile,
                        Email,
                        SpecialSkill,
                        YouthChargeStd};
                rowMemberRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMemberRow);
                return rowMemberRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberRow FindByOID(string OID) {
                return ((MemberRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MemberDataTable cln = ((MemberDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MemberDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnFK_YouthGroup = base.Columns["FK_YouthGroup"];
                this.columnFK_YouthGroup_FZ = base.Columns["FK_YouthGroup_FZ"];
                this.columnDept = base.Columns["Dept"];
                this.columnWorkGroup = base.Columns["WorkGroup"];
                this.columnPost = base.Columns["Post"];
                this.columnHrCode = base.Columns["HrCode"];
                this.columnHrType = base.Columns["HrType"];
                this.columnHrStatus = base.Columns["HrStatus"];
                this.columnEmpName = base.Columns["EmpName"];
                this.columnEmpID = base.Columns["EmpID"];
                this.columnSex = base.Columns["Sex"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnAge = base.Columns["Age"];
                this.columnParttimeName = base.Columns["ParttimeName"];
                this.columnJobDateTime = base.Columns["JobDateTime"];
                this.columnComDateTime = base.Columns["ComDateTime"];
                this.columnWedding = base.Columns["Wedding"];
                this.columnNativePlace = base.Columns["NativePlace"];
                this.columnPolitics = base.Columns["Politics"];
                this.columnPartyDate = base.Columns["PartyDate"];
                this.columnNation = base.Columns["Nation"];
                this.columnHouse = base.Columns["House"];
                this.columnSkillLevel = base.Columns["SkillLevel"];
                this.columnFstSchoolExp = base.Columns["FstSchoolExp"];
                this.columnFstDegree = base.Columns["FstDegree"];
                this.columnLstSchoolExp = base.Columns["LstSchoolExp"];
                this.columnLstDegree = base.Columns["LstDegree"];
                this.columnFstSchool = base.Columns["FstSchool"];
                this.columnFstProfession = base.Columns["FstProfession"];
                this.columnFstGraduateDate = base.Columns["FstGraduateDate"];
                this.columnLstSchool = base.Columns["LstSchool"];
                this.columnLstProfession = base.Columns["LstProfession"];
                this.columnLstGraduateDate = base.Columns["LstGraduateDate"];
                this.columnApplyParty = base.Columns["ApplyParty"];
                this.columnApplyPartyDate = base.Columns["ApplyPartyDate"];
                this.columnVolunteerInfo = base.Columns["VolunteerInfo"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnEmail = base.Columns["Email"];
                this.columnSpecialSkill = base.Columns["SpecialSkill"];
                this.columnYouthChargeStd = base.Columns["YouthChargeStd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnFK_YouthGroup = new global::System.Data.DataColumn("FK_YouthGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_YouthGroup);
                this.columnFK_YouthGroup_FZ = new global::System.Data.DataColumn("FK_YouthGroup_FZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_YouthGroup_FZ);
                this.columnDept = new global::System.Data.DataColumn("Dept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept);
                this.columnWorkGroup = new global::System.Data.DataColumn("WorkGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkGroup);
                this.columnPost = new global::System.Data.DataColumn("Post", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost);
                this.columnHrCode = new global::System.Data.DataColumn("HrCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHrCode);
                this.columnHrType = new global::System.Data.DataColumn("HrType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHrType);
                this.columnHrStatus = new global::System.Data.DataColumn("HrStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHrStatus);
                this.columnEmpName = new global::System.Data.DataColumn("EmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpName);
                this.columnEmpID = new global::System.Data.DataColumn("EmpID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpID);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnParttimeName = new global::System.Data.DataColumn("ParttimeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParttimeName);
                this.columnJobDateTime = new global::System.Data.DataColumn("JobDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobDateTime);
                this.columnComDateTime = new global::System.Data.DataColumn("ComDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComDateTime);
                this.columnWedding = new global::System.Data.DataColumn("Wedding", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWedding);
                this.columnNativePlace = new global::System.Data.DataColumn("NativePlace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNativePlace);
                this.columnPolitics = new global::System.Data.DataColumn("Politics", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPolitics);
                this.columnPartyDate = new global::System.Data.DataColumn("PartyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartyDate);
                this.columnNation = new global::System.Data.DataColumn("Nation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNation);
                this.columnHouse = new global::System.Data.DataColumn("House", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouse);
                this.columnSkillLevel = new global::System.Data.DataColumn("SkillLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkillLevel);
                this.columnFstSchoolExp = new global::System.Data.DataColumn("FstSchoolExp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFstSchoolExp);
                this.columnFstDegree = new global::System.Data.DataColumn("FstDegree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFstDegree);
                this.columnLstSchoolExp = new global::System.Data.DataColumn("LstSchoolExp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLstSchoolExp);
                this.columnLstDegree = new global::System.Data.DataColumn("LstDegree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLstDegree);
                this.columnFstSchool = new global::System.Data.DataColumn("FstSchool", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFstSchool);
                this.columnFstProfession = new global::System.Data.DataColumn("FstProfession", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFstProfession);
                this.columnFstGraduateDate = new global::System.Data.DataColumn("FstGraduateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFstGraduateDate);
                this.columnLstSchool = new global::System.Data.DataColumn("LstSchool", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLstSchool);
                this.columnLstProfession = new global::System.Data.DataColumn("LstProfession", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLstProfession);
                this.columnLstGraduateDate = new global::System.Data.DataColumn("LstGraduateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLstGraduateDate);
                this.columnApplyParty = new global::System.Data.DataColumn("ApplyParty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyParty);
                this.columnApplyPartyDate = new global::System.Data.DataColumn("ApplyPartyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyPartyDate);
                this.columnVolunteerInfo = new global::System.Data.DataColumn("VolunteerInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolunteerInfo);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnSpecialSkill = new global::System.Data.DataColumn("SpecialSkill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialSkill);
                this.columnYouthChargeStd = new global::System.Data.DataColumn("YouthChargeStd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYouthChargeStd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnFK_YouthGroup.AllowDBNull = false;
                this.columnFK_YouthGroup.MaxLength = 50;
                this.columnFK_YouthGroup_FZ.AllowDBNull = false;
                this.columnFK_YouthGroup_FZ.MaxLength = 50;
                this.columnDept.AllowDBNull = false;
                this.columnDept.MaxLength = 50;
                this.columnWorkGroup.AllowDBNull = false;
                this.columnWorkGroup.MaxLength = 50;
                this.columnPost.AllowDBNull = false;
                this.columnPost.MaxLength = 50;
                this.columnHrCode.AllowDBNull = false;
                this.columnHrCode.MaxLength = 20;
                this.columnHrType.AllowDBNull = false;
                this.columnHrType.MaxLength = 20;
                this.columnHrStatus.AllowDBNull = false;
                this.columnHrStatus.MaxLength = 20;
                this.columnEmpName.AllowDBNull = false;
                this.columnEmpName.MaxLength = 20;
                this.columnEmpID.AllowDBNull = false;
                this.columnEmpID.MaxLength = 30;
                this.columnSex.AllowDBNull = false;
                this.columnSex.MaxLength = 2;
                this.columnBirthday.AllowDBNull = false;
                this.columnAge.AllowDBNull = false;
                this.columnParttimeName.AllowDBNull = false;
                this.columnParttimeName.MaxLength = 20;
                this.columnJobDateTime.AllowDBNull = false;
                this.columnComDateTime.AllowDBNull = false;
                this.columnWedding.AllowDBNull = false;
                this.columnWedding.MaxLength = 10;
                this.columnNativePlace.AllowDBNull = false;
                this.columnNativePlace.MaxLength = 20;
                this.columnPolitics.AllowDBNull = false;
                this.columnPolitics.MaxLength = 20;
                this.columnPartyDate.AllowDBNull = false;
                this.columnNation.AllowDBNull = false;
                this.columnNation.MaxLength = 20;
                this.columnHouse.AllowDBNull = false;
                this.columnHouse.MaxLength = 20;
                this.columnSkillLevel.AllowDBNull = false;
                this.columnSkillLevel.MaxLength = 20;
                this.columnFstSchoolExp.AllowDBNull = false;
                this.columnFstSchoolExp.MaxLength = 20;
                this.columnFstDegree.AllowDBNull = false;
                this.columnFstDegree.MaxLength = 20;
                this.columnLstSchoolExp.AllowDBNull = false;
                this.columnLstSchoolExp.MaxLength = 20;
                this.columnLstDegree.AllowDBNull = false;
                this.columnLstDegree.MaxLength = 50;
                this.columnFstSchool.AllowDBNull = false;
                this.columnFstSchool.MaxLength = 50;
                this.columnFstProfession.AllowDBNull = false;
                this.columnFstProfession.MaxLength = 50;
                this.columnFstGraduateDate.AllowDBNull = false;
                this.columnLstSchool.AllowDBNull = false;
                this.columnLstSchool.MaxLength = 50;
                this.columnLstProfession.AllowDBNull = false;
                this.columnLstProfession.MaxLength = 50;
                this.columnLstGraduateDate.AllowDBNull = false;
                this.columnApplyParty.AllowDBNull = false;
                this.columnApplyParty.MaxLength = 2;
                this.columnApplyPartyDate.AllowDBNull = false;
                this.columnVolunteerInfo.AllowDBNull = false;
                this.columnVolunteerInfo.MaxLength = 100;
                this.columnMobile.AllowDBNull = false;
                this.columnMobile.MaxLength = 20;
                this.columnEmail.AllowDBNull = false;
                this.columnEmail.MaxLength = 50;
                this.columnSpecialSkill.AllowDBNull = false;
                this.columnSpecialSkill.MaxLength = 200;
                this.columnYouthChargeStd.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberRow NewMemberRow() {
                return ((MemberRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MemberRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MemberRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MemberRowChanged != null)) {
                    this.MemberRowChanged(this, new MemberRowChangeEvent(((MemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MemberRowChanging != null)) {
                    this.MemberRowChanging(this, new MemberRowChangeEvent(((MemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MemberRowDeleted != null)) {
                    this.MemberRowDeleted(this, new MemberRowChangeEvent(((MemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MemberRowDeleting != null)) {
                    this.MemberRowDeleting(this, new MemberRowChangeEvent(((MemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMemberRow(MemberRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MemberDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BudgetApplyDataTable : global::System.Data.TypedTableBase<BudgetApplyRow> {
            
            private global::System.Data.DataColumn columnOID;
            
            private global::System.Data.DataColumn columnYG_OID;
            
            private global::System.Data.DataColumn columnCRE_DATE;
            
            private global::System.Data.DataColumn columnBA_NUM;
            
            private global::System.Data.DataColumn columnBA_DESC;
            
            private global::System.Data.DataColumn columnBA_STATUS;
            
            private global::System.Data.DataColumn columnBA_ADMIN;
            
            private global::System.Data.DataColumn columnSP_ADMIN;
            
            private global::System.Data.DataColumn columnSP_DATE;
            
            private global::System.Data.DataColumn columnYJ_MONTH;
            
            private global::System.Data.DataColumn columnSP_REASON;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetApplyDataTable() {
                this.TableName = "BudgetApply";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BudgetApplyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BudgetApplyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OIDColumn {
                get {
                    return this.columnOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YG_OIDColumn {
                get {
                    return this.columnYG_OID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRE_DATEColumn {
                get {
                    return this.columnCRE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BA_NUMColumn {
                get {
                    return this.columnBA_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BA_DESCColumn {
                get {
                    return this.columnBA_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BA_STATUSColumn {
                get {
                    return this.columnBA_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BA_ADMINColumn {
                get {
                    return this.columnBA_ADMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SP_ADMINColumn {
                get {
                    return this.columnSP_ADMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SP_DATEColumn {
                get {
                    return this.columnSP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YJ_MONTHColumn {
                get {
                    return this.columnYJ_MONTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SP_REASONColumn {
                get {
                    return this.columnSP_REASON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetApplyRow this[int index] {
                get {
                    return ((BudgetApplyRow)(this.Rows[index]));
                }
            }
            
            public event BudgetApplyRowChangeEventHandler BudgetApplyRowChanging;
            
            public event BudgetApplyRowChangeEventHandler BudgetApplyRowChanged;
            
            public event BudgetApplyRowChangeEventHandler BudgetApplyRowDeleting;
            
            public event BudgetApplyRowChangeEventHandler BudgetApplyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBudgetApplyRow(BudgetApplyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetApplyRow AddBudgetApplyRow(string OID, string YG_OID, System.DateTime CRE_DATE, decimal BA_NUM, string BA_DESC, string BA_STATUS, string BA_ADMIN, string SP_ADMIN, System.DateTime SP_DATE, string YJ_MONTH, string SP_REASON) {
                BudgetApplyRow rowBudgetApplyRow = ((BudgetApplyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OID,
                        YG_OID,
                        CRE_DATE,
                        BA_NUM,
                        BA_DESC,
                        BA_STATUS,
                        BA_ADMIN,
                        SP_ADMIN,
                        SP_DATE,
                        YJ_MONTH,
                        SP_REASON};
                rowBudgetApplyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBudgetApplyRow);
                return rowBudgetApplyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetApplyRow FindByOID(string OID) {
                return ((BudgetApplyRow)(this.Rows.Find(new object[] {
                            OID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BudgetApplyDataTable cln = ((BudgetApplyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BudgetApplyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOID = base.Columns["OID"];
                this.columnYG_OID = base.Columns["YG_OID"];
                this.columnCRE_DATE = base.Columns["CRE_DATE"];
                this.columnBA_NUM = base.Columns["BA_NUM"];
                this.columnBA_DESC = base.Columns["BA_DESC"];
                this.columnBA_STATUS = base.Columns["BA_STATUS"];
                this.columnBA_ADMIN = base.Columns["BA_ADMIN"];
                this.columnSP_ADMIN = base.Columns["SP_ADMIN"];
                this.columnSP_DATE = base.Columns["SP_DATE"];
                this.columnYJ_MONTH = base.Columns["YJ_MONTH"];
                this.columnSP_REASON = base.Columns["SP_REASON"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOID = new global::System.Data.DataColumn("OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOID);
                this.columnYG_OID = new global::System.Data.DataColumn("YG_OID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYG_OID);
                this.columnCRE_DATE = new global::System.Data.DataColumn("CRE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRE_DATE);
                this.columnBA_NUM = new global::System.Data.DataColumn("BA_NUM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBA_NUM);
                this.columnBA_DESC = new global::System.Data.DataColumn("BA_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBA_DESC);
                this.columnBA_STATUS = new global::System.Data.DataColumn("BA_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBA_STATUS);
                this.columnBA_ADMIN = new global::System.Data.DataColumn("BA_ADMIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBA_ADMIN);
                this.columnSP_ADMIN = new global::System.Data.DataColumn("SP_ADMIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSP_ADMIN);
                this.columnSP_DATE = new global::System.Data.DataColumn("SP_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSP_DATE);
                this.columnYJ_MONTH = new global::System.Data.DataColumn("YJ_MONTH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYJ_MONTH);
                this.columnSP_REASON = new global::System.Data.DataColumn("SP_REASON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSP_REASON);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOID}, true));
                this.columnOID.AllowDBNull = false;
                this.columnOID.Unique = true;
                this.columnOID.MaxLength = 50;
                this.columnYG_OID.AllowDBNull = false;
                this.columnYG_OID.MaxLength = 50;
                this.columnCRE_DATE.AllowDBNull = false;
                this.columnBA_NUM.AllowDBNull = false;
                this.columnBA_DESC.AllowDBNull = false;
                this.columnBA_DESC.MaxLength = 50;
                this.columnBA_STATUS.AllowDBNull = false;
                this.columnBA_STATUS.MaxLength = 50;
                this.columnBA_ADMIN.AllowDBNull = false;
                this.columnBA_ADMIN.MaxLength = 50;
                this.columnSP_ADMIN.AllowDBNull = false;
                this.columnSP_ADMIN.MaxLength = 50;
                this.columnSP_DATE.AllowDBNull = false;
                this.columnYJ_MONTH.AllowDBNull = false;
                this.columnYJ_MONTH.MaxLength = 5;
                this.columnSP_REASON.AllowDBNull = false;
                this.columnSP_REASON.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetApplyRow NewBudgetApplyRow() {
                return ((BudgetApplyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BudgetApplyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BudgetApplyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BudgetApplyRowChanged != null)) {
                    this.BudgetApplyRowChanged(this, new BudgetApplyRowChangeEvent(((BudgetApplyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BudgetApplyRowChanging != null)) {
                    this.BudgetApplyRowChanging(this, new BudgetApplyRowChangeEvent(((BudgetApplyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BudgetApplyRowDeleted != null)) {
                    this.BudgetApplyRowDeleted(this, new BudgetApplyRowChangeEvent(((BudgetApplyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BudgetApplyRowDeleting != null)) {
                    this.BudgetApplyRowDeleting(this, new BudgetApplyRowChangeEvent(((BudgetApplyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBudgetApplyRow(BudgetApplyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                YouthOneDS ds = new YouthOneDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BudgetApplyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class YouthGroupRow : global::System.Data.DataRow {
            
            private YouthGroupDataTable tableYouthGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal YouthGroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableYouthGroup = ((YouthGroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableYouthGroup.OIDColumn]));
                }
                set {
                    this[this.tableYouthGroup.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YG_NAME {
                get {
                    return ((string)(this[this.tableYouthGroup.YG_NAMEColumn]));
                }
                set {
                    this[this.tableYouthGroup.YG_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YG_LEVEL {
                get {
                    return ((int)(this[this.tableYouthGroup.YG_LEVELColumn]));
                }
                set {
                    this[this.tableYouthGroup.YG_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARENT_OID {
                get {
                    return ((string)(this[this.tableYouthGroup.PARENT_OIDColumn]));
                }
                set {
                    this[this.tableYouthGroup.PARENT_OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CRE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableYouthGroup.CRE_DATEColumn]));
                }
                set {
                    this[this.tableYouthGroup.CRE_DATEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SystemAdminRow : global::System.Data.DataRow {
            
            private SystemAdminDataTable tableSystemAdmin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SystemAdminRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSystemAdmin = ((SystemAdminDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableSystemAdmin.OIDColumn]));
                }
                set {
                    this[this.tableSystemAdmin.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOG_NAME {
                get {
                    return ((string)(this[this.tableSystemAdmin.LOG_NAMEColumn]));
                }
                set {
                    this[this.tableSystemAdmin.LOG_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAS_WORD {
                get {
                    return ((string)(this[this.tableSystemAdmin.PAS_WORDColumn]));
                }
                set {
                    this[this.tableSystemAdmin.PAS_WORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ROL_NAME {
                get {
                    return ((string)(this[this.tableSystemAdmin.ROL_NAMEColumn]));
                }
                set {
                    this[this.tableSystemAdmin.ROL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CRE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSystemAdmin.CRE_DATEColumn]));
                }
                set {
                    this[this.tableSystemAdmin.CRE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YG_OID {
                get {
                    return ((string)(this[this.tableSystemAdmin.YG_OIDColumn]));
                }
                set {
                    this[this.tableSystemAdmin.YG_OIDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SystemLogRow : global::System.Data.DataRow {
            
            private SystemLogDataTable tableSystemLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SystemLogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSystemLog = ((SystemLogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableSystemLog.OIDColumn]));
                }
                set {
                    this[this.tableSystemLog.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SA_OID {
                get {
                    return ((string)(this[this.tableSystemLog.SA_OIDColumn]));
                }
                set {
                    this[this.tableSystemLog.SA_OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SA_NAME {
                get {
                    return ((string)(this[this.tableSystemLog.SA_NAMEColumn]));
                }
                set {
                    this[this.tableSystemLog.SA_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OP_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSystemLog.OP_DATEColumn]));
                }
                set {
                    this[this.tableSystemLog.OP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OP_TYPE {
                get {
                    return ((string)(this[this.tableSystemLog.OP_TYPEColumn]));
                }
                set {
                    this[this.tableSystemLog.OP_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OP_NAME {
                get {
                    return ((string)(this[this.tableSystemLog.OP_NAMEColumn]));
                }
                set {
                    this[this.tableSystemLog.OP_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OP_DESC {
                get {
                    return ((string)(this[this.tableSystemLog.OP_DESCColumn]));
                }
                set {
                    this[this.tableSystemLog.OP_DESCColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PostRow : global::System.Data.DataRow {
            
            private PostDataTable tablePost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PostRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePost = ((PostDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tablePost.OIDColumn]));
                }
                set {
                    this[this.tablePost.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CRE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tablePost.CRE_DATEColumn]));
                }
                set {
                    this[this.tablePost.CRE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CAT_NAME {
                get {
                    return ((string)(this[this.tablePost.CAT_NAMEColumn]));
                }
                set {
                    this[this.tablePost.CAT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POST_NAME {
                get {
                    return ((string)(this[this.tablePost.POST_NAMEColumn]));
                }
                set {
                    this[this.tablePost.POST_NAMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrganizeRow : global::System.Data.DataRow {
            
            private OrganizeDataTable tableOrganize;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrganizeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrganize = ((OrganizeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableOrganize.OIDColumn]));
                }
                set {
                    this[this.tableOrganize.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CRE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableOrganize.CRE_DATEColumn]));
                }
                set {
                    this[this.tableOrganize.CRE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OG_NAME {
                get {
                    return ((string)(this[this.tableOrganize.OG_NAMEColumn]));
                }
                set {
                    this[this.tableOrganize.OG_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OG_LEVEL {
                get {
                    return ((int)(this[this.tableOrganize.OG_LEVELColumn]));
                }
                set {
                    this[this.tableOrganize.OG_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OG_ORDER {
                get {
                    return ((int)(this[this.tableOrganize.OG_ORDERColumn]));
                }
                set {
                    this[this.tableOrganize.OG_ORDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARENT_OID {
                get {
                    return ((string)(this[this.tableOrganize.PARENT_OIDColumn]));
                }
                set {
                    this[this.tableOrganize.PARENT_OIDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StandardEnumRow : global::System.Data.DataRow {
            
            private StandardEnumDataTable tableStandardEnum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StandardEnumRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStandardEnum = ((StandardEnumDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableStandardEnum.OIDColumn]));
                }
                set {
                    this[this.tableStandardEnum.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SE_TYPE {
                get {
                    return ((string)(this[this.tableStandardEnum.SE_TYPEColumn]));
                }
                set {
                    this[this.tableStandardEnum.SE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SE_KEY {
                get {
                    return ((string)(this[this.tableStandardEnum.SE_KEYColumn]));
                }
                set {
                    this[this.tableStandardEnum.SE_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SE_VALUE {
                get {
                    return ((string)(this[this.tableStandardEnum.SE_VALUEColumn]));
                }
                set {
                    this[this.tableStandardEnum.SE_VALUEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MemberChargeRow : global::System.Data.DataRow {
            
            private MemberChargeDataTable tableMemberCharge;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MemberChargeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMemberCharge = ((MemberChargeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableMemberCharge.OIDColumn]));
                }
                set {
                    this[this.tableMemberCharge.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YG_OID {
                get {
                    return ((string)(this[this.tableMemberCharge.YG_OIDColumn]));
                }
                set {
                    this[this.tableMemberCharge.YG_OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MC_CODE {
                get {
                    return ((string)(this[this.tableMemberCharge.MC_CODEColumn]));
                }
                set {
                    this[this.tableMemberCharge.MC_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YG_MEMBER {
                get {
                    return ((int)(this[this.tableMemberCharge.YG_MEMBERColumn]));
                }
                set {
                    this[this.tableMemberCharge.YG_MEMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YG_PARTY {
                get {
                    return ((int)(this[this.tableMemberCharge.YG_PARTYColumn]));
                }
                set {
                    this[this.tableMemberCharge.YG_PARTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YJ_1 {
                get {
                    return ((int)(this[this.tableMemberCharge.YJ_1Column]));
                }
                set {
                    this[this.tableMemberCharge.YJ_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YJ_2 {
                get {
                    return ((int)(this[this.tableMemberCharge.YJ_2Column]));
                }
                set {
                    this[this.tableMemberCharge.YJ_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YJ_3 {
                get {
                    return ((int)(this[this.tableMemberCharge.YJ_3Column]));
                }
                set {
                    this[this.tableMemberCharge.YJ_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BJ_1 {
                get {
                    return ((int)(this[this.tableMemberCharge.BJ_1Column]));
                }
                set {
                    this[this.tableMemberCharge.BJ_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BJ_2 {
                get {
                    return ((int)(this[this.tableMemberCharge.BJ_2Column]));
                }
                set {
                    this[this.tableMemberCharge.BJ_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BJ_3 {
                get {
                    return ((int)(this[this.tableMemberCharge.BJ_3Column]));
                }
                set {
                    this[this.tableMemberCharge.BJ_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HJ_NUM {
                get {
                    return ((int)(this[this.tableMemberCharge.HJ_NUMColumn]));
                }
                set {
                    this[this.tableMemberCharge.HJ_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HJ_ZW {
                get {
                    return ((string)(this[this.tableMemberCharge.HJ_ZWColumn]));
                }
                set {
                    this[this.tableMemberCharge.HJ_ZWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MC_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableMemberCharge.MC_DATEColumn]));
                }
                set {
                    this[this.tableMemberCharge.MC_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MC_JKR {
                get {
                    return ((string)(this[this.tableMemberCharge.MC_JKRColumn]));
                }
                set {
                    this[this.tableMemberCharge.MC_JKRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MC_SKR {
                get {
                    return ((string)(this[this.tableMemberCharge.MC_SKRColumn]));
                }
                set {
                    this[this.tableMemberCharge.MC_SKRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CRE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableMemberCharge.CRE_DATEColumn]));
                }
                set {
                    this[this.tableMemberCharge.CRE_DATEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PriseRow : global::System.Data.DataRow {
            
            private PriseDataTable tablePrise;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PriseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePrise = ((PriseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tablePrise.OIDColumn]));
                }
                set {
                    this[this.tablePrise.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_Member {
                get {
                    return ((string)(this[this.tablePrise.FK_MemberColumn]));
                }
                set {
                    this[this.tablePrise.FK_MemberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PR_NAME {
                get {
                    return ((string)(this[this.tablePrise.PR_NAMEColumn]));
                }
                set {
                    this[this.tablePrise.PR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PR_UNIT {
                get {
                    return ((string)(this[this.tablePrise.PR_UNITColumn]));
                }
                set {
                    this[this.tablePrise.PR_UNITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PR_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tablePrise.PR_DATEColumn]));
                }
                set {
                    this[this.tablePrise.PR_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PR_VALUE {
                get {
                    return ((decimal)(this[this.tablePrise.PR_VALUEColumn]));
                }
                set {
                    this[this.tablePrise.PR_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EX_TEXT {
                get {
                    try {
                        return ((string)(this[this.tablePrise.EX_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Prise”中列“EX_TEXT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePrise.EX_TEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEX_TEXTNull() {
                return this.IsNull(this.tablePrise.EX_TEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEX_TEXTNull() {
                this[this.tablePrise.EX_TEXTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MemberStaticRow : global::System.Data.DataRow {
            
            private MemberStaticDataTable tableMemberStatic;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MemberStaticRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMemberStatic = ((MemberStaticDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableMemberStatic.OIDColumn]));
                }
                set {
                    this[this.tableMemberStatic.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MS_YEAR {
                get {
                    return ((int)(this[this.tableMemberStatic.MS_YEARColumn]));
                }
                set {
                    this[this.tableMemberStatic.MS_YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MS_NUM {
                get {
                    return ((int)(this[this.tableMemberStatic.MS_NUMColumn]));
                }
                set {
                    this[this.tableMemberStatic.MS_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YG_NAME {
                get {
                    return ((string)(this[this.tableMemberStatic.YG_NAMEColumn]));
                }
                set {
                    this[this.tableMemberStatic.YG_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_MALE {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_MALEColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_MALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_FEMALE {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_FEMALEColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_FEMALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_SUM {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_SUMColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_SUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_1428_MALE {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_1428_MALEColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_1428_MALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_1428_FEMALE {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_1428_FEMALEColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_1428_FEMALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_1428_SUM {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_1428_SUMColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_1428_SUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_35_MALE {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_35_MALEColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_35_MALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_35_FEMALE {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_35_FEMALEColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_35_FEMALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_35_SUM {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_35_SUMColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_35_SUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_NEW {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_NEWColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_NEWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_PARTY {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_PARTYColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_PARTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PARTY_APP {
                get {
                    return ((int)(this[this.tableMemberStatic.PARTY_APPColumn]));
                }
                set {
                    this[this.tableMemberStatic.PARTY_APPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_PARTY_APP {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_PARTY_APPColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_PARTY_APPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_CL {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_CLColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_CLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MM_NT {
                get {
                    return ((int)(this[this.tableMemberStatic.MM_NTColumn]));
                }
                set {
                    this[this.tableMemberStatic.MM_NTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MS_REMARK {
                get {
                    return ((string)(this[this.tableMemberStatic.MS_REMARKColumn]));
                }
                set {
                    this[this.tableMemberStatic.MS_REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CRE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableMemberStatic.CRE_DATEColumn]));
                }
                set {
                    this[this.tableMemberStatic.CRE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MS_35_PARTY {
                get {
                    try {
                        return ((int)(this[this.tableMemberStatic.MS_35_PARTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MemberStatic”中列“MS_35_PARTY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMemberStatic.MS_35_PARTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMS_35_PARTYNull() {
                return this.IsNull(this.tableMemberStatic.MS_35_PARTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMS_35_PARTYNull() {
                this[this.tableMemberStatic.MS_35_PARTYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NotificationRow : global::System.Data.DataRow {
            
            private NotificationDataTable tableNotification;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NotificationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNotification = ((NotificationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableNotification.OIDColumn]));
                }
                set {
                    this[this.tableNotification.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MM_OID {
                get {
                    return ((string)(this[this.tableNotification.MM_OIDColumn]));
                }
                set {
                    this[this.tableNotification.MM_OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MM_NAME {
                get {
                    return ((string)(this[this.tableNotification.MM_NAMEColumn]));
                }
                set {
                    this[this.tableNotification.MM_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MM_YG_OID {
                get {
                    return ((string)(this[this.tableNotification.MM_YG_OIDColumn]));
                }
                set {
                    this[this.tableNotification.MM_YG_OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MM_YG_NAME {
                get {
                    return ((string)(this[this.tableNotification.MM_YG_NAMEColumn]));
                }
                set {
                    this[this.tableNotification.MM_YG_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NF_NAME {
                get {
                    return ((string)(this[this.tableNotification.NF_NAMEColumn]));
                }
                set {
                    this[this.tableNotification.NF_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NF_YG_OID {
                get {
                    return ((string)(this[this.tableNotification.NF_YG_OIDColumn]));
                }
                set {
                    this[this.tableNotification.NF_YG_OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NF_CAT {
                get {
                    return ((string)(this[this.tableNotification.NF_CATColumn]));
                }
                set {
                    this[this.tableNotification.NF_CATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NF_STATUS {
                get {
                    return ((int)(this[this.tableNotification.NF_STATUSColumn]));
                }
                set {
                    this[this.tableNotification.NF_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OP_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableNotification.OP_DATEColumn]));
                }
                set {
                    this[this.tableNotification.OP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OP_ADMIN {
                get {
                    return ((string)(this[this.tableNotification.OP_ADMINColumn]));
                }
                set {
                    this[this.tableNotification.OP_ADMINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CRE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableNotification.CRE_DATEColumn]));
                }
                set {
                    this[this.tableNotification.CRE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept {
                get {
                    try {
                        return ((string)(this[this.tableNotification.DeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Notification”中列“Dept”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNotification.DeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkGroup {
                get {
                    try {
                        return ((string)(this[this.tableNotification.WorkGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Notification”中列“WorkGroup”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNotification.WorkGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post {
                get {
                    try {
                        return ((string)(this[this.tableNotification.PostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Notification”中列“Post”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNotification.PostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptNull() {
                return this.IsNull(this.tableNotification.DeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptNull() {
                this[this.tableNotification.DeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkGroupNull() {
                return this.IsNull(this.tableNotification.WorkGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkGroupNull() {
                this[this.tableNotification.WorkGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostNull() {
                return this.IsNull(this.tableNotification.PostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostNull() {
                this[this.tableNotification.PostColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OutlayPublishRow : global::System.Data.DataRow {
            
            private OutlayPublishDataTable tableOutlayPublish;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OutlayPublishRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOutlayPublish = ((OutlayPublishDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableOutlayPublish.OIDColumn]));
                }
                set {
                    this[this.tableOutlayPublish.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OP_ADMIN {
                get {
                    return ((string)(this[this.tableOutlayPublish.OP_ADMINColumn]));
                }
                set {
                    this[this.tableOutlayPublish.OP_ADMINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YG_OID {
                get {
                    return ((string)(this[this.tableOutlayPublish.YG_OIDColumn]));
                }
                set {
                    this[this.tableOutlayPublish.YG_OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OL_NUM {
                get {
                    return ((decimal)(this[this.tableOutlayPublish.OL_NUMColumn]));
                }
                set {
                    this[this.tableOutlayPublish.OL_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OL_STATUS {
                get {
                    return ((string)(this[this.tableOutlayPublish.OL_STATUSColumn]));
                }
                set {
                    this[this.tableOutlayPublish.OL_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OL_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableOutlayPublish.OL_DATEColumn]));
                }
                set {
                    this[this.tableOutlayPublish.OL_DATEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OutlayUseRow : global::System.Data.DataRow {
            
            private OutlayUseDataTable tableOutlayUse;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OutlayUseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOutlayUse = ((OutlayUseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableOutlayUse.OIDColumn]));
                }
                set {
                    this[this.tableOutlayUse.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YG_OID {
                get {
                    return ((string)(this[this.tableOutlayUse.YG_OIDColumn]));
                }
                set {
                    this[this.tableOutlayUse.YG_OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OU_TYPE {
                get {
                    return ((string)(this[this.tableOutlayUse.OU_TYPEColumn]));
                }
                set {
                    this[this.tableOutlayUse.OU_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OU_ZC {
                get {
                    return ((decimal)(this[this.tableOutlayUse.OU_ZCColumn]));
                }
                set {
                    this[this.tableOutlayUse.OU_ZCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OU_SL {
                get {
                    return ((decimal)(this[this.tableOutlayUse.OU_SLColumn]));
                }
                set {
                    this[this.tableOutlayUse.OU_SLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OU_JY {
                get {
                    return ((decimal)(this[this.tableOutlayUse.OU_JYColumn]));
                }
                set {
                    this[this.tableOutlayUse.OU_JYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OU_DESC {
                get {
                    return ((string)(this[this.tableOutlayUse.OU_DESCColumn]));
                }
                set {
                    this[this.tableOutlayUse.OU_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OU_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableOutlayUse.OU_DATEColumn]));
                }
                set {
                    this[this.tableOutlayUse.OU_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OU_ADMIN {
                get {
                    return ((string)(this[this.tableOutlayUse.OU_ADMINColumn]));
                }
                set {
                    this[this.tableOutlayUse.OU_ADMINColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MemberImportRow : global::System.Data.DataRow {
            
            private MemberImportDataTable tableMemberImport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MemberImportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMemberImport = ((MemberImportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableMemberImport.OIDColumn]));
                }
                set {
                    this[this.tableMemberImport.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExcelNum {
                get {
                    return ((int)(this[this.tableMemberImport.ExcelNumColumn]));
                }
                set {
                    this[this.tableMemberImport.ExcelNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ErrorDesc {
                get {
                    return ((string)(this[this.tableMemberImport.ErrorDescColumn]));
                }
                set {
                    this[this.tableMemberImport.ErrorDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_YouthGroup {
                get {
                    return ((string)(this[this.tableMemberImport.FK_YouthGroupColumn]));
                }
                set {
                    this[this.tableMemberImport.FK_YouthGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_YouthGroup_FZ {
                get {
                    return ((string)(this[this.tableMemberImport.FK_YouthGroup_FZColumn]));
                }
                set {
                    this[this.tableMemberImport.FK_YouthGroup_FZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept {
                get {
                    return ((string)(this[this.tableMemberImport.DeptColumn]));
                }
                set {
                    this[this.tableMemberImport.DeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkGroup {
                get {
                    return ((string)(this[this.tableMemberImport.WorkGroupColumn]));
                }
                set {
                    this[this.tableMemberImport.WorkGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post {
                get {
                    return ((string)(this[this.tableMemberImport.PostColumn]));
                }
                set {
                    this[this.tableMemberImport.PostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HrCode {
                get {
                    return ((string)(this[this.tableMemberImport.HrCodeColumn]));
                }
                set {
                    this[this.tableMemberImport.HrCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HrType {
                get {
                    return ((string)(this[this.tableMemberImport.HrTypeColumn]));
                }
                set {
                    this[this.tableMemberImport.HrTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HrStatus {
                get {
                    return ((string)(this[this.tableMemberImport.HrStatusColumn]));
                }
                set {
                    this[this.tableMemberImport.HrStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpName {
                get {
                    return ((string)(this[this.tableMemberImport.EmpNameColumn]));
                }
                set {
                    this[this.tableMemberImport.EmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpID {
                get {
                    return ((string)(this[this.tableMemberImport.EmpIDColumn]));
                }
                set {
                    this[this.tableMemberImport.EmpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    return ((string)(this[this.tableMemberImport.SexColumn]));
                }
                set {
                    this[this.tableMemberImport.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Birthday {
                get {
                    return ((global::System.DateTime)(this[this.tableMemberImport.BirthdayColumn]));
                }
                set {
                    this[this.tableMemberImport.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Age {
                get {
                    return ((int)(this[this.tableMemberImport.AgeColumn]));
                }
                set {
                    this[this.tableMemberImport.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParttimeName {
                get {
                    return ((string)(this[this.tableMemberImport.ParttimeNameColumn]));
                }
                set {
                    this[this.tableMemberImport.ParttimeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JobDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableMemberImport.JobDateTimeColumn]));
                }
                set {
                    this[this.tableMemberImport.JobDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ComDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableMemberImport.ComDateTimeColumn]));
                }
                set {
                    this[this.tableMemberImport.ComDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Wedding {
                get {
                    return ((string)(this[this.tableMemberImport.WeddingColumn]));
                }
                set {
                    this[this.tableMemberImport.WeddingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NativePlace {
                get {
                    return ((string)(this[this.tableMemberImport.NativePlaceColumn]));
                }
                set {
                    this[this.tableMemberImport.NativePlaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Politics {
                get {
                    return ((string)(this[this.tableMemberImport.PoliticsColumn]));
                }
                set {
                    this[this.tableMemberImport.PoliticsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PartyDate {
                get {
                    return ((global::System.DateTime)(this[this.tableMemberImport.PartyDateColumn]));
                }
                set {
                    this[this.tableMemberImport.PartyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nation {
                get {
                    return ((string)(this[this.tableMemberImport.NationColumn]));
                }
                set {
                    this[this.tableMemberImport.NationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string House {
                get {
                    return ((string)(this[this.tableMemberImport.HouseColumn]));
                }
                set {
                    this[this.tableMemberImport.HouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SkillLevel {
                get {
                    return ((string)(this[this.tableMemberImport.SkillLevelColumn]));
                }
                set {
                    this[this.tableMemberImport.SkillLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FstSchoolExp {
                get {
                    return ((string)(this[this.tableMemberImport.FstSchoolExpColumn]));
                }
                set {
                    this[this.tableMemberImport.FstSchoolExpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FstDegree {
                get {
                    return ((string)(this[this.tableMemberImport.FstDegreeColumn]));
                }
                set {
                    this[this.tableMemberImport.FstDegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LstSchoolExp {
                get {
                    return ((string)(this[this.tableMemberImport.LstSchoolExpColumn]));
                }
                set {
                    this[this.tableMemberImport.LstSchoolExpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LstDegree {
                get {
                    return ((string)(this[this.tableMemberImport.LstDegreeColumn]));
                }
                set {
                    this[this.tableMemberImport.LstDegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FstSchool {
                get {
                    return ((string)(this[this.tableMemberImport.FstSchoolColumn]));
                }
                set {
                    this[this.tableMemberImport.FstSchoolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FstProfession {
                get {
                    return ((string)(this[this.tableMemberImport.FstProfessionColumn]));
                }
                set {
                    this[this.tableMemberImport.FstProfessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FstGraduateDate {
                get {
                    return ((global::System.DateTime)(this[this.tableMemberImport.FstGraduateDateColumn]));
                }
                set {
                    this[this.tableMemberImport.FstGraduateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LstSchool {
                get {
                    return ((string)(this[this.tableMemberImport.LstSchoolColumn]));
                }
                set {
                    this[this.tableMemberImport.LstSchoolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LstProfession {
                get {
                    return ((string)(this[this.tableMemberImport.LstProfessionColumn]));
                }
                set {
                    this[this.tableMemberImport.LstProfessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LstGraduateDate {
                get {
                    return ((global::System.DateTime)(this[this.tableMemberImport.LstGraduateDateColumn]));
                }
                set {
                    this[this.tableMemberImport.LstGraduateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplyParty {
                get {
                    return ((string)(this[this.tableMemberImport.ApplyPartyColumn]));
                }
                set {
                    this[this.tableMemberImport.ApplyPartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ApplyPartyDate {
                get {
                    return ((global::System.DateTime)(this[this.tableMemberImport.ApplyPartyDateColumn]));
                }
                set {
                    this[this.tableMemberImport.ApplyPartyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VolunteerInfo {
                get {
                    return ((string)(this[this.tableMemberImport.VolunteerInfoColumn]));
                }
                set {
                    this[this.tableMemberImport.VolunteerInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    return ((string)(this[this.tableMemberImport.MobileColumn]));
                }
                set {
                    this[this.tableMemberImport.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    return ((string)(this[this.tableMemberImport.EmailColumn]));
                }
                set {
                    this[this.tableMemberImport.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpecialSkill {
                get {
                    return ((string)(this[this.tableMemberImport.SpecialSkillColumn]));
                }
                set {
                    this[this.tableMemberImport.SpecialSkillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YouthChargeStd {
                get {
                    return ((int)(this[this.tableMemberImport.YouthChargeStdColumn]));
                }
                set {
                    this[this.tableMemberImport.YouthChargeStdColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MemberRow : global::System.Data.DataRow {
            
            private MemberDataTable tableMember;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MemberRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMember = ((MemberDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableMember.OIDColumn]));
                }
                set {
                    this[this.tableMember.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_YouthGroup {
                get {
                    return ((string)(this[this.tableMember.FK_YouthGroupColumn]));
                }
                set {
                    this[this.tableMember.FK_YouthGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_YouthGroup_FZ {
                get {
                    return ((string)(this[this.tableMember.FK_YouthGroup_FZColumn]));
                }
                set {
                    this[this.tableMember.FK_YouthGroup_FZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept {
                get {
                    return ((string)(this[this.tableMember.DeptColumn]));
                }
                set {
                    this[this.tableMember.DeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkGroup {
                get {
                    return ((string)(this[this.tableMember.WorkGroupColumn]));
                }
                set {
                    this[this.tableMember.WorkGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Post {
                get {
                    return ((string)(this[this.tableMember.PostColumn]));
                }
                set {
                    this[this.tableMember.PostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HrCode {
                get {
                    return ((string)(this[this.tableMember.HrCodeColumn]));
                }
                set {
                    this[this.tableMember.HrCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HrType {
                get {
                    return ((string)(this[this.tableMember.HrTypeColumn]));
                }
                set {
                    this[this.tableMember.HrTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HrStatus {
                get {
                    return ((string)(this[this.tableMember.HrStatusColumn]));
                }
                set {
                    this[this.tableMember.HrStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpName {
                get {
                    return ((string)(this[this.tableMember.EmpNameColumn]));
                }
                set {
                    this[this.tableMember.EmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpID {
                get {
                    return ((string)(this[this.tableMember.EmpIDColumn]));
                }
                set {
                    this[this.tableMember.EmpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    return ((string)(this[this.tableMember.SexColumn]));
                }
                set {
                    this[this.tableMember.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Birthday {
                get {
                    return ((global::System.DateTime)(this[this.tableMember.BirthdayColumn]));
                }
                set {
                    this[this.tableMember.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Age {
                get {
                    return ((int)(this[this.tableMember.AgeColumn]));
                }
                set {
                    this[this.tableMember.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParttimeName {
                get {
                    return ((string)(this[this.tableMember.ParttimeNameColumn]));
                }
                set {
                    this[this.tableMember.ParttimeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JobDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableMember.JobDateTimeColumn]));
                }
                set {
                    this[this.tableMember.JobDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ComDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableMember.ComDateTimeColumn]));
                }
                set {
                    this[this.tableMember.ComDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Wedding {
                get {
                    return ((string)(this[this.tableMember.WeddingColumn]));
                }
                set {
                    this[this.tableMember.WeddingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NativePlace {
                get {
                    return ((string)(this[this.tableMember.NativePlaceColumn]));
                }
                set {
                    this[this.tableMember.NativePlaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Politics {
                get {
                    return ((string)(this[this.tableMember.PoliticsColumn]));
                }
                set {
                    this[this.tableMember.PoliticsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PartyDate {
                get {
                    return ((global::System.DateTime)(this[this.tableMember.PartyDateColumn]));
                }
                set {
                    this[this.tableMember.PartyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nation {
                get {
                    return ((string)(this[this.tableMember.NationColumn]));
                }
                set {
                    this[this.tableMember.NationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string House {
                get {
                    return ((string)(this[this.tableMember.HouseColumn]));
                }
                set {
                    this[this.tableMember.HouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SkillLevel {
                get {
                    return ((string)(this[this.tableMember.SkillLevelColumn]));
                }
                set {
                    this[this.tableMember.SkillLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FstSchoolExp {
                get {
                    return ((string)(this[this.tableMember.FstSchoolExpColumn]));
                }
                set {
                    this[this.tableMember.FstSchoolExpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FstDegree {
                get {
                    return ((string)(this[this.tableMember.FstDegreeColumn]));
                }
                set {
                    this[this.tableMember.FstDegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LstSchoolExp {
                get {
                    return ((string)(this[this.tableMember.LstSchoolExpColumn]));
                }
                set {
                    this[this.tableMember.LstSchoolExpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LstDegree {
                get {
                    return ((string)(this[this.tableMember.LstDegreeColumn]));
                }
                set {
                    this[this.tableMember.LstDegreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FstSchool {
                get {
                    return ((string)(this[this.tableMember.FstSchoolColumn]));
                }
                set {
                    this[this.tableMember.FstSchoolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FstProfession {
                get {
                    return ((string)(this[this.tableMember.FstProfessionColumn]));
                }
                set {
                    this[this.tableMember.FstProfessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FstGraduateDate {
                get {
                    return ((global::System.DateTime)(this[this.tableMember.FstGraduateDateColumn]));
                }
                set {
                    this[this.tableMember.FstGraduateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LstSchool {
                get {
                    return ((string)(this[this.tableMember.LstSchoolColumn]));
                }
                set {
                    this[this.tableMember.LstSchoolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LstProfession {
                get {
                    return ((string)(this[this.tableMember.LstProfessionColumn]));
                }
                set {
                    this[this.tableMember.LstProfessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LstGraduateDate {
                get {
                    return ((global::System.DateTime)(this[this.tableMember.LstGraduateDateColumn]));
                }
                set {
                    this[this.tableMember.LstGraduateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplyParty {
                get {
                    return ((string)(this[this.tableMember.ApplyPartyColumn]));
                }
                set {
                    this[this.tableMember.ApplyPartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ApplyPartyDate {
                get {
                    return ((global::System.DateTime)(this[this.tableMember.ApplyPartyDateColumn]));
                }
                set {
                    this[this.tableMember.ApplyPartyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VolunteerInfo {
                get {
                    return ((string)(this[this.tableMember.VolunteerInfoColumn]));
                }
                set {
                    this[this.tableMember.VolunteerInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    return ((string)(this[this.tableMember.MobileColumn]));
                }
                set {
                    this[this.tableMember.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    return ((string)(this[this.tableMember.EmailColumn]));
                }
                set {
                    this[this.tableMember.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpecialSkill {
                get {
                    return ((string)(this[this.tableMember.SpecialSkillColumn]));
                }
                set {
                    this[this.tableMember.SpecialSkillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YouthChargeStd {
                get {
                    return ((int)(this[this.tableMember.YouthChargeStdColumn]));
                }
                set {
                    this[this.tableMember.YouthChargeStdColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BudgetApplyRow : global::System.Data.DataRow {
            
            private BudgetApplyDataTable tableBudgetApply;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BudgetApplyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBudgetApply = ((BudgetApplyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OID {
                get {
                    return ((string)(this[this.tableBudgetApply.OIDColumn]));
                }
                set {
                    this[this.tableBudgetApply.OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YG_OID {
                get {
                    return ((string)(this[this.tableBudgetApply.YG_OIDColumn]));
                }
                set {
                    this[this.tableBudgetApply.YG_OIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CRE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableBudgetApply.CRE_DATEColumn]));
                }
                set {
                    this[this.tableBudgetApply.CRE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BA_NUM {
                get {
                    return ((decimal)(this[this.tableBudgetApply.BA_NUMColumn]));
                }
                set {
                    this[this.tableBudgetApply.BA_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BA_DESC {
                get {
                    return ((string)(this[this.tableBudgetApply.BA_DESCColumn]));
                }
                set {
                    this[this.tableBudgetApply.BA_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BA_STATUS {
                get {
                    return ((string)(this[this.tableBudgetApply.BA_STATUSColumn]));
                }
                set {
                    this[this.tableBudgetApply.BA_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BA_ADMIN {
                get {
                    return ((string)(this[this.tableBudgetApply.BA_ADMINColumn]));
                }
                set {
                    this[this.tableBudgetApply.BA_ADMINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SP_ADMIN {
                get {
                    return ((string)(this[this.tableBudgetApply.SP_ADMINColumn]));
                }
                set {
                    this[this.tableBudgetApply.SP_ADMINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SP_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableBudgetApply.SP_DATEColumn]));
                }
                set {
                    this[this.tableBudgetApply.SP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YJ_MONTH {
                get {
                    return ((string)(this[this.tableBudgetApply.YJ_MONTHColumn]));
                }
                set {
                    this[this.tableBudgetApply.YJ_MONTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SP_REASON {
                get {
                    return ((string)(this[this.tableBudgetApply.SP_REASONColumn]));
                }
                set {
                    this[this.tableBudgetApply.SP_REASONColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class YouthGroupRowChangeEvent : global::System.EventArgs {
            
            private YouthGroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public YouthGroupRowChangeEvent(YouthGroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public YouthGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SystemAdminRowChangeEvent : global::System.EventArgs {
            
            private SystemAdminRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemAdminRowChangeEvent(SystemAdminRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemAdminRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SystemLogRowChangeEvent : global::System.EventArgs {
            
            private SystemLogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemLogRowChangeEvent(SystemLogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SystemLogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PostRowChangeEvent : global::System.EventArgs {
            
            private PostRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PostRowChangeEvent(PostRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PostRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrganizeRowChangeEvent : global::System.EventArgs {
            
            private OrganizeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizeRowChangeEvent(OrganizeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StandardEnumRowChangeEvent : global::System.EventArgs {
            
            private StandardEnumRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardEnumRowChangeEvent(StandardEnumRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StandardEnumRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MemberChargeRowChangeEvent : global::System.EventArgs {
            
            private MemberChargeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberChargeRowChangeEvent(MemberChargeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberChargeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PriseRowChangeEvent : global::System.EventArgs {
            
            private PriseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriseRowChangeEvent(PriseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PriseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MemberStaticRowChangeEvent : global::System.EventArgs {
            
            private MemberStaticRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberStaticRowChangeEvent(MemberStaticRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberStaticRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NotificationRowChangeEvent : global::System.EventArgs {
            
            private NotificationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotificationRowChangeEvent(NotificationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NotificationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OutlayPublishRowChangeEvent : global::System.EventArgs {
            
            private OutlayPublishRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayPublishRowChangeEvent(OutlayPublishRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayPublishRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OutlayUseRowChangeEvent : global::System.EventArgs {
            
            private OutlayUseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayUseRowChangeEvent(OutlayUseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OutlayUseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MemberImportRowChangeEvent : global::System.EventArgs {
            
            private MemberImportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberImportRowChangeEvent(MemberImportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberImportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MemberRowChangeEvent : global::System.EventArgs {
            
            private MemberRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberRowChangeEvent(MemberRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MemberRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BudgetApplyRowChangeEvent : global::System.EventArgs {
            
            private BudgetApplyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetApplyRowChangeEvent(BudgetApplyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetApplyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace YouthOne.Component.YouthOneDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class YouthGroupTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public YouthGroupTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "YouthGroup";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("YG_NAME", "YG_NAME");
            tableMapping.ColumnMappings.Add("YG_LEVEL", "YG_LEVEL");
            tableMapping.ColumnMappings.Add("PARENT_OID", "PARENT_OID");
            tableMapping.ColumnMappings.Add("CRE_DATE", "CRE_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[YouthGroup] WHERE (([OID] = @Original_OID) AND ([YG_NAME] = @O" +
                "riginal_YG_NAME) AND ([YG_LEVEL] = @Original_YG_LEVEL) AND ([PARENT_OID] = @Orig" +
                "inal_PARENT_OID) AND ([CRE_DATE] = @Original_CRE_DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARENT_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARENT_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[YouthGroup] ([OID], [YG_NAME], [YG_LEVEL], [PARENT_OID], [CRE_" +
                "DATE]) VALUES (@OID, @YG_NAME, @YG_LEVEL, @PARENT_OID, @CRE_DATE);\r\nSELECT OID, " +
                "YG_NAME, YG_LEVEL, PARENT_OID, CRE_DATE FROM YouthGroup WHERE (OID = @OID) ORDER" +
                " BY YG_ORDER";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARENT_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARENT_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[YouthGroup] SET [OID] = @OID, [YG_NAME] = @YG_NAME, [YG_LEVEL] = @YG_LEVEL, [PARENT_OID] = @PARENT_OID, [CRE_DATE] = @CRE_DATE WHERE (([OID] = @Original_OID) AND ([YG_NAME] = @Original_YG_NAME) AND ([YG_LEVEL] = @Original_YG_LEVEL) AND ([PARENT_OID] = @Original_PARENT_OID) AND ([CRE_DATE] = @Original_CRE_DATE));
SELECT OID, YG_NAME, YG_LEVEL, PARENT_OID, CRE_DATE FROM YouthGroup WHERE (OID = @OID) ORDER BY YG_ORDER";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARENT_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARENT_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARENT_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARENT_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, YG_NAME, YG_LEVEL, PARENT_OID, CRE_DATE FROM dbo.YouthGroup\r\nORDER BY" +
                " YG_ORDER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.YouthGroupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.YouthGroupDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.YouthGroupDataTable dataTable = new YouthOneDS.YouthGroupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.YouthGroupDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "YouthGroup");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OID, string Original_YG_NAME, int Original_YG_LEVEL, string Original_PARENT_OID, System.DateTime Original_CRE_DATE) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            if ((Original_YG_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_YG_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_YG_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_YG_LEVEL));
            if ((Original_PARENT_OID == null)) {
                throw new global::System.ArgumentNullException("Original_PARENT_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_PARENT_OID));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OID, string YG_NAME, int YG_LEVEL, string PARENT_OID, System.DateTime CRE_DATE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((YG_NAME == null)) {
                throw new global::System.ArgumentNullException("YG_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(YG_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(YG_LEVEL));
            if ((PARENT_OID == null)) {
                throw new global::System.ArgumentNullException("PARENT_OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PARENT_OID));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OID, string YG_NAME, int YG_LEVEL, string PARENT_OID, System.DateTime CRE_DATE, string Original_OID, string Original_YG_NAME, int Original_YG_LEVEL, string Original_PARENT_OID, System.DateTime Original_CRE_DATE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((YG_NAME == null)) {
                throw new global::System.ArgumentNullException("YG_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(YG_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(YG_LEVEL));
            if ((PARENT_OID == null)) {
                throw new global::System.ArgumentNullException("PARENT_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PARENT_OID));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(CRE_DATE));
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_OID));
            }
            if ((Original_YG_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_YG_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_YG_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_YG_LEVEL));
            if ((Original_PARENT_OID == null)) {
                throw new global::System.ArgumentNullException("Original_PARENT_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_PARENT_OID));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string YG_NAME, int YG_LEVEL, string PARENT_OID, System.DateTime CRE_DATE, string Original_OID, string Original_YG_NAME, int Original_YG_LEVEL, string Original_PARENT_OID, System.DateTime Original_CRE_DATE) {
            return this.Update(Original_OID, YG_NAME, YG_LEVEL, PARENT_OID, CRE_DATE, Original_OID, Original_YG_NAME, Original_YG_LEVEL, Original_PARENT_OID, Original_CRE_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SystemAdminTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SystemAdminTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SystemAdmin";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("LOG_NAME", "LOG_NAME");
            tableMapping.ColumnMappings.Add("PAS_WORD", "PAS_WORD");
            tableMapping.ColumnMappings.Add("ROL_NAME", "ROL_NAME");
            tableMapping.ColumnMappings.Add("CRE_DATE", "CRE_DATE");
            tableMapping.ColumnMappings.Add("YG_OID", "YG_OID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SystemAdmin] WHERE (([OID] = @Original_OID) AND ([LOG_NAME] = " +
                "@Original_LOG_NAME) AND ([PAS_WORD] = @Original_PAS_WORD) AND ([ROL_NAME] = @Ori" +
                "ginal_ROL_NAME) AND ([CRE_DATE] = @Original_CRE_DATE) AND ([YG_OID] = @Original_" +
                "YG_OID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAS_WORD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAS_WORD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SystemAdmin] ([OID], [LOG_NAME], [PAS_WORD], [ROL_NAME], [CRE_DATE], [YG_OID]) VALUES (@OID, @LOG_NAME, @PAS_WORD, @ROL_NAME, @CRE_DATE, @YG_OID);
SELECT OID, LOG_NAME, PAS_WORD, ROL_NAME, CRE_DATE, YG_OID FROM SystemAdmin WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAS_WORD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAS_WORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SystemAdmin] SET [OID] = @OID, [LOG_NAME] = @LOG_NAME, [PAS_WORD] = @PAS_WORD, [ROL_NAME] = @ROL_NAME, [CRE_DATE] = @CRE_DATE, [YG_OID] = @YG_OID WHERE (([OID] = @Original_OID) AND ([LOG_NAME] = @Original_LOG_NAME) AND ([PAS_WORD] = @Original_PAS_WORD) AND ([ROL_NAME] = @Original_ROL_NAME) AND ([CRE_DATE] = @Original_CRE_DATE) AND ([YG_OID] = @Original_YG_OID));
SELECT OID, LOG_NAME, PAS_WORD, ROL_NAME, CRE_DATE, YG_OID FROM SystemAdmin WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAS_WORD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAS_WORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOG_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAS_WORD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAS_WORD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, LOG_NAME, PAS_WORD, ROL_NAME, CRE_DATE, YG_OID FROM dbo.SystemAdmin";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.SystemAdminDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.SystemAdminDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.SystemAdminDataTable dataTable = new YouthOneDS.SystemAdminDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.SystemAdminDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "SystemAdmin");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OID, string Original_LOG_NAME, string Original_PAS_WORD, string Original_ROL_NAME, System.DateTime Original_CRE_DATE, string Original_YG_OID) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            if ((Original_LOG_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_LOG_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_LOG_NAME));
            }
            if ((Original_PAS_WORD == null)) {
                throw new global::System.ArgumentNullException("Original_PAS_WORD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PAS_WORD));
            }
            if ((Original_ROL_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_ROL_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ROL_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_CRE_DATE));
            if ((Original_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_YG_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_YG_OID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OID, string LOG_NAME, string PAS_WORD, string ROL_NAME, System.DateTime CRE_DATE, string YG_OID) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((LOG_NAME == null)) {
                throw new global::System.ArgumentNullException("LOG_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LOG_NAME));
            }
            if ((PAS_WORD == null)) {
                throw new global::System.ArgumentNullException("PAS_WORD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PAS_WORD));
            }
            if ((ROL_NAME == null)) {
                throw new global::System.ArgumentNullException("ROL_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ROL_NAME));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(CRE_DATE));
            if ((YG_OID == null)) {
                throw new global::System.ArgumentNullException("YG_OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(YG_OID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OID, string LOG_NAME, string PAS_WORD, string ROL_NAME, System.DateTime CRE_DATE, string YG_OID, string Original_OID, string Original_LOG_NAME, string Original_PAS_WORD, string Original_ROL_NAME, System.DateTime Original_CRE_DATE, string Original_YG_OID) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((LOG_NAME == null)) {
                throw new global::System.ArgumentNullException("LOG_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LOG_NAME));
            }
            if ((PAS_WORD == null)) {
                throw new global::System.ArgumentNullException("PAS_WORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PAS_WORD));
            }
            if ((ROL_NAME == null)) {
                throw new global::System.ArgumentNullException("ROL_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ROL_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(CRE_DATE));
            if ((YG_OID == null)) {
                throw new global::System.ArgumentNullException("YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(YG_OID));
            }
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_OID));
            }
            if ((Original_LOG_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_LOG_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_LOG_NAME));
            }
            if ((Original_PAS_WORD == null)) {
                throw new global::System.ArgumentNullException("Original_PAS_WORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_PAS_WORD));
            }
            if ((Original_ROL_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_ROL_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ROL_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_CRE_DATE));
            if ((Original_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_YG_OID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string LOG_NAME, string PAS_WORD, string ROL_NAME, System.DateTime CRE_DATE, string YG_OID, string Original_OID, string Original_LOG_NAME, string Original_PAS_WORD, string Original_ROL_NAME, System.DateTime Original_CRE_DATE, string Original_YG_OID) {
            return this.Update(Original_OID, LOG_NAME, PAS_WORD, ROL_NAME, CRE_DATE, YG_OID, Original_OID, Original_LOG_NAME, Original_PAS_WORD, Original_ROL_NAME, Original_CRE_DATE, Original_YG_OID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SystemLogTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SystemLogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SystemLog";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("SA_OID", "SA_OID");
            tableMapping.ColumnMappings.Add("SA_NAME", "SA_NAME");
            tableMapping.ColumnMappings.Add("OP_DATE", "OP_DATE");
            tableMapping.ColumnMappings.Add("OP_TYPE", "OP_TYPE");
            tableMapping.ColumnMappings.Add("OP_NAME", "OP_NAME");
            tableMapping.ColumnMappings.Add("OP_DESC", "OP_DESC");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SystemLog] WHERE (([OID] = @Original_OID) AND ([SA_OID] = @Original_SA_OID) AND ([SA_NAME] = @Original_SA_NAME) AND ([OP_DATE] = @Original_OP_DATE) AND ([OP_TYPE] = @Original_OP_TYPE) AND ([OP_NAME] = @Original_OP_NAME) AND ([OP_DESC] = @Original_OP_DESC))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DESC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SystemLog] ([OID], [SA_OID], [SA_NAME], [OP_DATE], [OP_TYPE], [OP_NAME], [OP_DESC]) VALUES (@OID, @SA_OID, @SA_NAME, @OP_DATE, @OP_TYPE, @OP_NAME, @OP_DESC);
SELECT OID, SA_OID, SA_NAME, OP_DATE, OP_TYPE, OP_NAME, OP_DESC FROM SystemLog WHERE (OID = @OID) ORDER BY OP_DATE DESC";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SystemLog] SET [OID] = @OID, [SA_OID] = @SA_OID, [SA_NAME] = @SA_NAME, [OP_DATE] = @OP_DATE, [OP_TYPE] = @OP_TYPE, [OP_NAME] = @OP_NAME, [OP_DESC] = @OP_DESC WHERE (([OID] = @Original_OID) AND ([SA_OID] = @Original_SA_OID) AND ([SA_NAME] = @Original_SA_NAME) AND ([OP_DATE] = @Original_OP_DATE) AND ([OP_TYPE] = @Original_OP_TYPE) AND ([OP_NAME] = @Original_OP_NAME) AND ([OP_DESC] = @Original_OP_DESC));
SELECT OID, SA_OID, SA_NAME, OP_DATE, OP_TYPE, OP_NAME, OP_DESC FROM SystemLog WHERE (OID = @OID) ORDER BY OP_DATE DESC";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SA_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DESC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, SA_OID, SA_NAME, OP_DATE, OP_TYPE, OP_NAME, OP_DESC\r\nFROM SystemLog\r\n" +
                "ORDER BY OP_DATE DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.SystemLogDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.SystemLogDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.SystemLogDataTable dataTable = new YouthOneDS.SystemLogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.SystemLogDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "SystemLog");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OID, string Original_SA_OID, string Original_SA_NAME, System.DateTime Original_OP_DATE, string Original_OP_TYPE, string Original_OP_NAME, string Original_OP_DESC) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            if ((Original_SA_OID == null)) {
                throw new global::System.ArgumentNullException("Original_SA_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SA_OID));
            }
            if ((Original_SA_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_SA_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SA_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_OP_DATE));
            if ((Original_OP_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_OP_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_OP_TYPE));
            }
            if ((Original_OP_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_OP_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_OP_NAME));
            }
            if ((Original_OP_DESC == null)) {
                throw new global::System.ArgumentNullException("Original_OP_DESC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_OP_DESC));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OID, string SA_OID, string SA_NAME, System.DateTime OP_DATE, string OP_TYPE, string OP_NAME, string OP_DESC) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((SA_OID == null)) {
                throw new global::System.ArgumentNullException("SA_OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SA_OID));
            }
            if ((SA_NAME == null)) {
                throw new global::System.ArgumentNullException("SA_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SA_NAME));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(OP_DATE));
            if ((OP_TYPE == null)) {
                throw new global::System.ArgumentNullException("OP_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(OP_TYPE));
            }
            if ((OP_NAME == null)) {
                throw new global::System.ArgumentNullException("OP_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(OP_NAME));
            }
            if ((OP_DESC == null)) {
                throw new global::System.ArgumentNullException("OP_DESC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(OP_DESC));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OID, string SA_OID, string SA_NAME, System.DateTime OP_DATE, string OP_TYPE, string OP_NAME, string OP_DESC, string Original_OID, string Original_SA_OID, string Original_SA_NAME, System.DateTime Original_OP_DATE, string Original_OP_TYPE, string Original_OP_NAME, string Original_OP_DESC) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((SA_OID == null)) {
                throw new global::System.ArgumentNullException("SA_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SA_OID));
            }
            if ((SA_NAME == null)) {
                throw new global::System.ArgumentNullException("SA_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SA_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(OP_DATE));
            if ((OP_TYPE == null)) {
                throw new global::System.ArgumentNullException("OP_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(OP_TYPE));
            }
            if ((OP_NAME == null)) {
                throw new global::System.ArgumentNullException("OP_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(OP_NAME));
            }
            if ((OP_DESC == null)) {
                throw new global::System.ArgumentNullException("OP_DESC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(OP_DESC));
            }
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_OID));
            }
            if ((Original_SA_OID == null)) {
                throw new global::System.ArgumentNullException("Original_SA_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_SA_OID));
            }
            if ((Original_SA_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_SA_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_SA_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_OP_DATE));
            if ((Original_OP_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_OP_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_OP_TYPE));
            }
            if ((Original_OP_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_OP_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_OP_NAME));
            }
            if ((Original_OP_DESC == null)) {
                throw new global::System.ArgumentNullException("Original_OP_DESC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_OP_DESC));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SA_OID, string SA_NAME, System.DateTime OP_DATE, string OP_TYPE, string OP_NAME, string OP_DESC, string Original_OID, string Original_SA_OID, string Original_SA_NAME, System.DateTime Original_OP_DATE, string Original_OP_TYPE, string Original_OP_NAME, string Original_OP_DESC) {
            return this.Update(Original_OID, SA_OID, SA_NAME, OP_DATE, OP_TYPE, OP_NAME, OP_DESC, Original_OID, Original_SA_OID, Original_SA_NAME, Original_OP_DATE, Original_OP_TYPE, Original_OP_NAME, Original_OP_DESC);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PostTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PostTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Post";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("CRE_DATE", "CRE_DATE");
            tableMapping.ColumnMappings.Add("CAT_NAME", "CAT_NAME");
            tableMapping.ColumnMappings.Add("POST_NAME", "POST_NAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Post] WHERE (([OID] = @Original_OID) AND ([CRE_DATE] = @Origin" +
                "al_CRE_DATE) AND ([CAT_NAME] = @Original_CAT_NAME) AND ([POST_NAME] = @Original_" +
                "POST_NAME))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAT_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAT_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POST_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POST_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Post] ([OID], [CRE_DATE], [CAT_NAME], [POST_NAME]) VALUES (@OI" +
                "D, @CRE_DATE, @CAT_NAME, @POST_NAME);\r\nSELECT OID, CRE_DATE, CAT_NAME, POST_NAME" +
                " FROM Post WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAT_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAT_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POST_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POST_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Post] SET [OID] = @OID, [CRE_DATE] = @CRE_DATE, [CAT_NAME] = @CAT_NAME, [POST_NAME] = @POST_NAME WHERE (([OID] = @Original_OID) AND ([CRE_DATE] = @Original_CRE_DATE) AND ([CAT_NAME] = @Original_CAT_NAME) AND ([POST_NAME] = @Original_POST_NAME));
SELECT OID, CRE_DATE, CAT_NAME, POST_NAME FROM Post WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAT_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAT_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POST_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POST_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAT_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAT_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POST_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POST_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, CRE_DATE, CAT_NAME, POST_NAME FROM dbo.Post";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.PostDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.PostDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.PostDataTable dataTable = new YouthOneDS.PostDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.PostDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "Post");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OID, System.DateTime Original_CRE_DATE, string Original_CAT_NAME, string Original_POST_NAME) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_CRE_DATE));
            if ((Original_CAT_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_CAT_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CAT_NAME));
            }
            if ((Original_POST_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_POST_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_POST_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OID, System.DateTime CRE_DATE, string CAT_NAME, string POST_NAME) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(CRE_DATE));
            if ((CAT_NAME == null)) {
                throw new global::System.ArgumentNullException("CAT_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CAT_NAME));
            }
            if ((POST_NAME == null)) {
                throw new global::System.ArgumentNullException("POST_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(POST_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OID, System.DateTime CRE_DATE, string CAT_NAME, string POST_NAME, string Original_OID, System.DateTime Original_CRE_DATE, string Original_CAT_NAME, string Original_POST_NAME) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(CRE_DATE));
            if ((CAT_NAME == null)) {
                throw new global::System.ArgumentNullException("CAT_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CAT_NAME));
            }
            if ((POST_NAME == null)) {
                throw new global::System.ArgumentNullException("POST_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(POST_NAME));
            }
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_OID));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_CRE_DATE));
            if ((Original_CAT_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_CAT_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_CAT_NAME));
            }
            if ((Original_POST_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_POST_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_POST_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime CRE_DATE, string CAT_NAME, string POST_NAME, string Original_OID, System.DateTime Original_CRE_DATE, string Original_CAT_NAME, string Original_POST_NAME) {
            return this.Update(Original_OID, CRE_DATE, CAT_NAME, POST_NAME, Original_OID, Original_CRE_DATE, Original_CAT_NAME, Original_POST_NAME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OrganizeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OrganizeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Organize";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("CRE_DATE", "CRE_DATE");
            tableMapping.ColumnMappings.Add("OG_NAME", "OG_NAME");
            tableMapping.ColumnMappings.Add("OG_LEVEL", "OG_LEVEL");
            tableMapping.ColumnMappings.Add("OG_ORDER", "OG_ORDER");
            tableMapping.ColumnMappings.Add("PARENT_OID", "PARENT_OID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Organize] WHERE (([OID] = @Original_OID) AND ([CRE_DATE] = @Or" +
                "iginal_CRE_DATE) AND ([OG_NAME] = @Original_OG_NAME) AND ([OG_LEVEL] = @Original" +
                "_OG_LEVEL) AND ([OG_ORDER] = @Original_OG_ORDER) AND ([PARENT_OID] = @Original_P" +
                "ARENT_OID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OG_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OG_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_ORDER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARENT_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARENT_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Organize] ([OID], [CRE_DATE], [OG_NAME], [OG_LEVEL], [OG_ORDER], [PARENT_OID]) VALUES (@OID, @CRE_DATE, @OG_NAME, @OG_LEVEL, @OG_ORDER, @PARENT_OID);
SELECT OID, CRE_DATE, OG_NAME, OG_LEVEL, OG_ORDER, PARENT_OID FROM Organize WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OG_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OG_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_ORDER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARENT_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARENT_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Organize] SET [OID] = @OID, [CRE_DATE] = @CRE_DATE, [OG_NAME] = @OG_NAME, [OG_LEVEL] = @OG_LEVEL, [OG_ORDER] = @OG_ORDER, [PARENT_OID] = @PARENT_OID WHERE (([OID] = @Original_OID) AND ([CRE_DATE] = @Original_CRE_DATE) AND ([OG_NAME] = @Original_OG_NAME) AND ([OG_LEVEL] = @Original_OG_LEVEL) AND ([OG_ORDER] = @Original_OG_ORDER) AND ([PARENT_OID] = @Original_PARENT_OID));
SELECT OID, CRE_DATE, OG_NAME, OG_LEVEL, OG_ORDER, PARENT_OID FROM Organize WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OG_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OG_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_ORDER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARENT_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARENT_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OG_LEVEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_LEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OG_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG_ORDER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARENT_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARENT_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, CRE_DATE, OG_NAME, OG_LEVEL, OG_ORDER, PARENT_OID FROM dbo.Organize";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.OrganizeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.OrganizeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.OrganizeDataTable dataTable = new YouthOneDS.OrganizeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.OrganizeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "Organize");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OID, System.DateTime Original_CRE_DATE, string Original_OG_NAME, int Original_OG_LEVEL, int Original_OG_ORDER, string Original_PARENT_OID) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_CRE_DATE));
            if ((Original_OG_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_OG_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_OG_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_OG_LEVEL));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_OG_ORDER));
            if ((Original_PARENT_OID == null)) {
                throw new global::System.ArgumentNullException("Original_PARENT_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PARENT_OID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OID, System.DateTime CRE_DATE, string OG_NAME, int OG_LEVEL, int OG_ORDER, string PARENT_OID) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(CRE_DATE));
            if ((OG_NAME == null)) {
                throw new global::System.ArgumentNullException("OG_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(OG_NAME));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(OG_LEVEL));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(OG_ORDER));
            if ((PARENT_OID == null)) {
                throw new global::System.ArgumentNullException("PARENT_OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PARENT_OID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OID, System.DateTime CRE_DATE, string OG_NAME, int OG_LEVEL, int OG_ORDER, string PARENT_OID, string Original_OID, System.DateTime Original_CRE_DATE, string Original_OG_NAME, int Original_OG_LEVEL, int Original_OG_ORDER, string Original_PARENT_OID) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(CRE_DATE));
            if ((OG_NAME == null)) {
                throw new global::System.ArgumentNullException("OG_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(OG_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(OG_LEVEL));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(OG_ORDER));
            if ((PARENT_OID == null)) {
                throw new global::System.ArgumentNullException("PARENT_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PARENT_OID));
            }
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_OID));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_CRE_DATE));
            if ((Original_OG_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_OG_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_OG_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_OG_LEVEL));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_OG_ORDER));
            if ((Original_PARENT_OID == null)) {
                throw new global::System.ArgumentNullException("Original_PARENT_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_PARENT_OID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime CRE_DATE, string OG_NAME, int OG_LEVEL, int OG_ORDER, string PARENT_OID, string Original_OID, System.DateTime Original_CRE_DATE, string Original_OG_NAME, int Original_OG_LEVEL, int Original_OG_ORDER, string Original_PARENT_OID) {
            return this.Update(Original_OID, CRE_DATE, OG_NAME, OG_LEVEL, OG_ORDER, PARENT_OID, Original_OID, Original_CRE_DATE, Original_OG_NAME, Original_OG_LEVEL, Original_OG_ORDER, Original_PARENT_OID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StandardEnumTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StandardEnumTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StandardEnum";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("SE_TYPE", "SE_TYPE");
            tableMapping.ColumnMappings.Add("SE_KEY", "SE_KEY");
            tableMapping.ColumnMappings.Add("SE_VALUE", "SE_VALUE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[StandardEnum] WHERE (([OID] = @Original_OID) AND ([SE_TYPE] = " +
                "@Original_SE_TYPE) AND ([SE_KEY] = @Original_SE_KEY) AND ([SE_VALUE] = @Original" +
                "_SE_VALUE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SE_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SE_KEY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_KEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SE_VALUE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_VALUE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[StandardEnum] ([OID], [SE_TYPE], [SE_KEY], [SE_VALUE]) VALUES " +
                "(@OID, @SE_TYPE, @SE_KEY, @SE_VALUE);\r\nSELECT OID, SE_TYPE, SE_KEY, SE_VALUE FRO" +
                "M StandardEnum WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SE_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SE_KEY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_KEY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SE_VALUE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_VALUE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[StandardEnum] SET [OID] = @OID, [SE_TYPE] = @SE_TYPE, [SE_KEY] = @SE_KEY, [SE_VALUE] = @SE_VALUE WHERE (([OID] = @Original_OID) AND ([SE_TYPE] = @Original_SE_TYPE) AND ([SE_KEY] = @Original_SE_KEY) AND ([SE_VALUE] = @Original_SE_VALUE));
SELECT OID, SE_TYPE, SE_KEY, SE_VALUE FROM StandardEnum WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SE_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SE_KEY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_KEY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SE_VALUE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_VALUE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SE_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SE_KEY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_KEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SE_VALUE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SE_VALUE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, SE_TYPE, SE_KEY, SE_VALUE FROM dbo.StandardEnum";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.StandardEnumDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.StandardEnumDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.StandardEnumDataTable dataTable = new YouthOneDS.StandardEnumDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.StandardEnumDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "StandardEnum");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OID, string Original_SE_TYPE, string Original_SE_KEY, string Original_SE_VALUE) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            if ((Original_SE_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_SE_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SE_TYPE));
            }
            if ((Original_SE_KEY == null)) {
                throw new global::System.ArgumentNullException("Original_SE_KEY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SE_KEY));
            }
            if ((Original_SE_VALUE == null)) {
                throw new global::System.ArgumentNullException("Original_SE_VALUE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_SE_VALUE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OID, string SE_TYPE, string SE_KEY, string SE_VALUE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((SE_TYPE == null)) {
                throw new global::System.ArgumentNullException("SE_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SE_TYPE));
            }
            if ((SE_KEY == null)) {
                throw new global::System.ArgumentNullException("SE_KEY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SE_KEY));
            }
            if ((SE_VALUE == null)) {
                throw new global::System.ArgumentNullException("SE_VALUE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SE_VALUE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OID, string SE_TYPE, string SE_KEY, string SE_VALUE, string Original_OID, string Original_SE_TYPE, string Original_SE_KEY, string Original_SE_VALUE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((SE_TYPE == null)) {
                throw new global::System.ArgumentNullException("SE_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SE_TYPE));
            }
            if ((SE_KEY == null)) {
                throw new global::System.ArgumentNullException("SE_KEY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SE_KEY));
            }
            if ((SE_VALUE == null)) {
                throw new global::System.ArgumentNullException("SE_VALUE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SE_VALUE));
            }
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_OID));
            }
            if ((Original_SE_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_SE_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SE_TYPE));
            }
            if ((Original_SE_KEY == null)) {
                throw new global::System.ArgumentNullException("Original_SE_KEY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_SE_KEY));
            }
            if ((Original_SE_VALUE == null)) {
                throw new global::System.ArgumentNullException("Original_SE_VALUE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_SE_VALUE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SE_TYPE, string SE_KEY, string SE_VALUE, string Original_OID, string Original_SE_TYPE, string Original_SE_KEY, string Original_SE_VALUE) {
            return this.Update(Original_OID, SE_TYPE, SE_KEY, SE_VALUE, Original_OID, Original_SE_TYPE, Original_SE_KEY, Original_SE_VALUE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MemberChargeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MemberChargeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MemberCharge";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("YG_OID", "YG_OID");
            tableMapping.ColumnMappings.Add("MC_CODE", "MC_CODE");
            tableMapping.ColumnMappings.Add("YG_MEMBER", "YG_MEMBER");
            tableMapping.ColumnMappings.Add("YG_PARTY", "YG_PARTY");
            tableMapping.ColumnMappings.Add("YJ_1", "YJ_1");
            tableMapping.ColumnMappings.Add("YJ_2", "YJ_2");
            tableMapping.ColumnMappings.Add("YJ_3", "YJ_3");
            tableMapping.ColumnMappings.Add("BJ_1", "BJ_1");
            tableMapping.ColumnMappings.Add("BJ_2", "BJ_2");
            tableMapping.ColumnMappings.Add("BJ_3", "BJ_3");
            tableMapping.ColumnMappings.Add("HJ_NUM", "HJ_NUM");
            tableMapping.ColumnMappings.Add("HJ_ZW", "HJ_ZW");
            tableMapping.ColumnMappings.Add("MC_DATE", "MC_DATE");
            tableMapping.ColumnMappings.Add("MC_JKR", "MC_JKR");
            tableMapping.ColumnMappings.Add("MC_SKR", "MC_SKR");
            tableMapping.ColumnMappings.Add("CRE_DATE", "CRE_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MemberCharge] WHERE (([OID] = @Original_OID) AND ([YG_OID] = @Original_YG_OID) AND ([MC_CODE] = @Original_MC_CODE) AND ([YG_MEMBER] = @Original_YG_MEMBER) AND ([YG_PARTY] = @Original_YG_PARTY) AND ([YJ_1] = @Original_YJ_1) AND ([YJ_2] = @Original_YJ_2) AND ([YJ_3] = @Original_YJ_3) AND ([BJ_1] = @Original_BJ_1) AND ([BJ_2] = @Original_BJ_2) AND ([BJ_3] = @Original_BJ_3) AND ([HJ_NUM] = @Original_HJ_NUM) AND ([HJ_ZW] = @Original_HJ_ZW) AND ([MC_DATE] = @Original_MC_DATE) AND ([MC_JKR] = @Original_MC_JKR) AND ([MC_SKR] = @Original_MC_SKR) AND ([CRE_DATE] = @Original_CRE_DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MC_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_MEMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_MEMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_PARTY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_PARTY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YJ_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YJ_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YJ_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BJ_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BJ_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BJ_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HJ_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HJ_NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HJ_ZW", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HJ_ZW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MC_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MC_JKR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_JKR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MC_SKR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_SKR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MemberCharge] ([OID], [YG_OID], [MC_CODE], [YG_MEMBER], [YG_PARTY], [YJ_1], [YJ_2], [YJ_3], [BJ_1], [BJ_2], [BJ_3], [HJ_NUM], [HJ_ZW], [MC_DATE], [MC_JKR], [MC_SKR], [CRE_DATE]) VALUES (@OID, @YG_OID, @MC_CODE, @YG_MEMBER, @YG_PARTY, @YJ_1, @YJ_2, @YJ_3, @BJ_1, @BJ_2, @BJ_3, @HJ_NUM, @HJ_ZW, @MC_DATE, @MC_JKR, @MC_SKR, @CRE_DATE);
SELECT OID, YG_OID, MC_CODE, YG_MEMBER, YG_PARTY, YJ_1, YJ_2, YJ_3, BJ_1, BJ_2, BJ_3, HJ_NUM, HJ_ZW, MC_DATE, MC_JKR, MC_SKR, CRE_DATE FROM MemberCharge WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MC_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_MEMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_MEMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_PARTY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_PARTY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YJ_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YJ_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YJ_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BJ_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BJ_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BJ_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HJ_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HJ_NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HJ_ZW", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HJ_ZW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MC_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MC_JKR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_JKR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MC_SKR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_SKR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MemberCharge] SET [OID] = @OID, [YG_OID] = @YG_OID, [MC_CODE] = @MC_CODE, [YG_MEMBER] = @YG_MEMBER, [YG_PARTY] = @YG_PARTY, [YJ_1] = @YJ_1, [YJ_2] = @YJ_2, [YJ_3] = @YJ_3, [BJ_1] = @BJ_1, [BJ_2] = @BJ_2, [BJ_3] = @BJ_3, [HJ_NUM] = @HJ_NUM, [HJ_ZW] = @HJ_ZW, [MC_DATE] = @MC_DATE, [MC_JKR] = @MC_JKR, [MC_SKR] = @MC_SKR, [CRE_DATE] = @CRE_DATE WHERE (([OID] = @Original_OID) AND ([YG_OID] = @Original_YG_OID) AND ([MC_CODE] = @Original_MC_CODE) AND ([YG_MEMBER] = @Original_YG_MEMBER) AND ([YG_PARTY] = @Original_YG_PARTY) AND ([YJ_1] = @Original_YJ_1) AND ([YJ_2] = @Original_YJ_2) AND ([YJ_3] = @Original_YJ_3) AND ([BJ_1] = @Original_BJ_1) AND ([BJ_2] = @Original_BJ_2) AND ([BJ_3] = @Original_BJ_3) AND ([HJ_NUM] = @Original_HJ_NUM) AND ([HJ_ZW] = @Original_HJ_ZW) AND ([MC_DATE] = @Original_MC_DATE) AND ([MC_JKR] = @Original_MC_JKR) AND ([MC_SKR] = @Original_MC_SKR) AND ([CRE_DATE] = @Original_CRE_DATE));
SELECT OID, YG_OID, MC_CODE, YG_MEMBER, YG_PARTY, YJ_1, YJ_2, YJ_3, BJ_1, BJ_2, BJ_3, HJ_NUM, HJ_ZW, MC_DATE, MC_JKR, MC_SKR, CRE_DATE FROM MemberCharge WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MC_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_MEMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_MEMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_PARTY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_PARTY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YJ_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YJ_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YJ_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BJ_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BJ_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BJ_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HJ_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HJ_NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HJ_ZW", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HJ_ZW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MC_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MC_JKR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_JKR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MC_SKR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_SKR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MC_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_MEMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_MEMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_PARTY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_PARTY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YJ_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YJ_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YJ_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BJ_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BJ_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BJ_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BJ_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HJ_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HJ_NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HJ_ZW", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HJ_ZW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MC_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MC_JKR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_JKR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MC_SKR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MC_SKR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, YG_OID, MC_CODE, YG_MEMBER, YG_PARTY, YJ_1, YJ_2, YJ_3, BJ_1, BJ_2, B" +
                "J_3, HJ_NUM, HJ_ZW, MC_DATE, MC_JKR, MC_SKR, CRE_DATE FROM dbo.MemberCharge";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.MemberChargeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.MemberChargeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.MemberChargeDataTable dataTable = new YouthOneDS.MemberChargeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.MemberChargeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "MemberCharge");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_OID, 
                    string Original_YG_OID, 
                    string Original_MC_CODE, 
                    int Original_YG_MEMBER, 
                    int Original_YG_PARTY, 
                    int Original_YJ_1, 
                    int Original_YJ_2, 
                    int Original_YJ_3, 
                    int Original_BJ_1, 
                    int Original_BJ_2, 
                    int Original_BJ_3, 
                    int Original_HJ_NUM, 
                    string Original_HJ_ZW, 
                    System.DateTime Original_MC_DATE, 
                    string Original_MC_JKR, 
                    string Original_MC_SKR, 
                    System.DateTime Original_CRE_DATE) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            if ((Original_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_YG_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_YG_OID));
            }
            if ((Original_MC_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_MC_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MC_CODE));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_YG_MEMBER));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_YG_PARTY));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_YJ_1));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_YJ_2));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_YJ_3));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_BJ_1));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_BJ_2));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_BJ_3));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_HJ_NUM));
            if ((Original_HJ_ZW == null)) {
                throw new global::System.ArgumentNullException("Original_HJ_ZW");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_HJ_ZW));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_MC_DATE));
            if ((Original_MC_JKR == null)) {
                throw new global::System.ArgumentNullException("Original_MC_JKR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_MC_JKR));
            }
            if ((Original_MC_SKR == null)) {
                throw new global::System.ArgumentNullException("Original_MC_SKR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_MC_SKR));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string OID, 
                    string YG_OID, 
                    string MC_CODE, 
                    int YG_MEMBER, 
                    int YG_PARTY, 
                    int YJ_1, 
                    int YJ_2, 
                    int YJ_3, 
                    int BJ_1, 
                    int BJ_2, 
                    int BJ_3, 
                    int HJ_NUM, 
                    string HJ_ZW, 
                    System.DateTime MC_DATE, 
                    string MC_JKR, 
                    string MC_SKR, 
                    System.DateTime CRE_DATE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((YG_OID == null)) {
                throw new global::System.ArgumentNullException("YG_OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(YG_OID));
            }
            if ((MC_CODE == null)) {
                throw new global::System.ArgumentNullException("MC_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MC_CODE));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(YG_MEMBER));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(YG_PARTY));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(YJ_1));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(YJ_2));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(YJ_3));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(BJ_1));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(BJ_2));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(BJ_3));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(HJ_NUM));
            if ((HJ_ZW == null)) {
                throw new global::System.ArgumentNullException("HJ_ZW");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(HJ_ZW));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(MC_DATE));
            if ((MC_JKR == null)) {
                throw new global::System.ArgumentNullException("MC_JKR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(MC_JKR));
            }
            if ((MC_SKR == null)) {
                throw new global::System.ArgumentNullException("MC_SKR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(MC_SKR));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string OID, 
                    string YG_OID, 
                    string MC_CODE, 
                    int YG_MEMBER, 
                    int YG_PARTY, 
                    int YJ_1, 
                    int YJ_2, 
                    int YJ_3, 
                    int BJ_1, 
                    int BJ_2, 
                    int BJ_3, 
                    int HJ_NUM, 
                    string HJ_ZW, 
                    System.DateTime MC_DATE, 
                    string MC_JKR, 
                    string MC_SKR, 
                    System.DateTime CRE_DATE, 
                    string Original_OID, 
                    string Original_YG_OID, 
                    string Original_MC_CODE, 
                    int Original_YG_MEMBER, 
                    int Original_YG_PARTY, 
                    int Original_YJ_1, 
                    int Original_YJ_2, 
                    int Original_YJ_3, 
                    int Original_BJ_1, 
                    int Original_BJ_2, 
                    int Original_BJ_3, 
                    int Original_HJ_NUM, 
                    string Original_HJ_ZW, 
                    System.DateTime Original_MC_DATE, 
                    string Original_MC_JKR, 
                    string Original_MC_SKR, 
                    System.DateTime Original_CRE_DATE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((YG_OID == null)) {
                throw new global::System.ArgumentNullException("YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(YG_OID));
            }
            if ((MC_CODE == null)) {
                throw new global::System.ArgumentNullException("MC_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MC_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(YG_MEMBER));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(YG_PARTY));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(YJ_1));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(YJ_2));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(YJ_3));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(BJ_1));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(BJ_2));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(BJ_3));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(HJ_NUM));
            if ((HJ_ZW == null)) {
                throw new global::System.ArgumentNullException("HJ_ZW");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(HJ_ZW));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(MC_DATE));
            if ((MC_JKR == null)) {
                throw new global::System.ArgumentNullException("MC_JKR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(MC_JKR));
            }
            if ((MC_SKR == null)) {
                throw new global::System.ArgumentNullException("MC_SKR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(MC_SKR));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(CRE_DATE));
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_OID));
            }
            if ((Original_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_YG_OID));
            }
            if ((Original_MC_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_MC_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_MC_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_YG_MEMBER));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_YG_PARTY));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_YJ_1));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_YJ_2));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_YJ_3));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_BJ_1));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_BJ_2));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_BJ_3));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_HJ_NUM));
            if ((Original_HJ_ZW == null)) {
                throw new global::System.ArgumentNullException("Original_HJ_ZW");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_HJ_ZW));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_MC_DATE));
            if ((Original_MC_JKR == null)) {
                throw new global::System.ArgumentNullException("Original_MC_JKR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_MC_JKR));
            }
            if ((Original_MC_SKR == null)) {
                throw new global::System.ArgumentNullException("Original_MC_SKR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_MC_SKR));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string YG_OID, 
                    string MC_CODE, 
                    int YG_MEMBER, 
                    int YG_PARTY, 
                    int YJ_1, 
                    int YJ_2, 
                    int YJ_3, 
                    int BJ_1, 
                    int BJ_2, 
                    int BJ_3, 
                    int HJ_NUM, 
                    string HJ_ZW, 
                    System.DateTime MC_DATE, 
                    string MC_JKR, 
                    string MC_SKR, 
                    System.DateTime CRE_DATE, 
                    string Original_OID, 
                    string Original_YG_OID, 
                    string Original_MC_CODE, 
                    int Original_YG_MEMBER, 
                    int Original_YG_PARTY, 
                    int Original_YJ_1, 
                    int Original_YJ_2, 
                    int Original_YJ_3, 
                    int Original_BJ_1, 
                    int Original_BJ_2, 
                    int Original_BJ_3, 
                    int Original_HJ_NUM, 
                    string Original_HJ_ZW, 
                    System.DateTime Original_MC_DATE, 
                    string Original_MC_JKR, 
                    string Original_MC_SKR, 
                    System.DateTime Original_CRE_DATE) {
            return this.Update(Original_OID, YG_OID, MC_CODE, YG_MEMBER, YG_PARTY, YJ_1, YJ_2, YJ_3, BJ_1, BJ_2, BJ_3, HJ_NUM, HJ_ZW, MC_DATE, MC_JKR, MC_SKR, CRE_DATE, Original_OID, Original_YG_OID, Original_MC_CODE, Original_YG_MEMBER, Original_YG_PARTY, Original_YJ_1, Original_YJ_2, Original_YJ_3, Original_BJ_1, Original_BJ_2, Original_BJ_3, Original_HJ_NUM, Original_HJ_ZW, Original_MC_DATE, Original_MC_JKR, Original_MC_SKR, Original_CRE_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PriseTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PriseTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Prise";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("FK_Member", "FK_Member");
            tableMapping.ColumnMappings.Add("PR_NAME", "PR_NAME");
            tableMapping.ColumnMappings.Add("PR_UNIT", "PR_UNIT");
            tableMapping.ColumnMappings.Add("PR_DATE", "PR_DATE");
            tableMapping.ColumnMappings.Add("PR_VALUE", "PR_VALUE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Prise] WHERE (([OID] = @Original_OID) AND ([FK_Member] = @Orig" +
                "inal_FK_Member) AND ([PR_NAME] = @Original_PR_NAME) AND ([PR_UNIT] = @Original_P" +
                "R_UNIT) AND ([PR_DATE] = @Original_PR_DATE) AND ([PR_VALUE] = @Original_PR_VALUE" +
                "))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FK_Member", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_Member", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PR_UNIT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_UNIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PR_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PR_VALUE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PR_VALUE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Prise] ([OID], [FK_Member], [PR_NAME], [PR_UNIT], [PR_DATE], [" +
                "PR_VALUE]) VALUES (@OID, @FK_Member, @PR_NAME, @PR_UNIT, @PR_DATE, @PR_VALUE);\r\n" +
                "SELECT OID, FK_Member, PR_NAME, PR_UNIT, PR_DATE, PR_VALUE FROM Prise WHERE (OID" +
                " = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FK_Member", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_Member", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PR_UNIT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_UNIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PR_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PR_VALUE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PR_VALUE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Prise] SET [OID] = @OID, [FK_Member] = @FK_Member, [PR_NAME] = @PR_NAME, [PR_UNIT] = @PR_UNIT, [PR_DATE] = @PR_DATE, [PR_VALUE] = @PR_VALUE WHERE (([OID] = @Original_OID) AND ([FK_Member] = @Original_FK_Member) AND ([PR_NAME] = @Original_PR_NAME) AND ([PR_UNIT] = @Original_PR_UNIT) AND ([PR_DATE] = @Original_PR_DATE) AND ([PR_VALUE] = @Original_PR_VALUE));
SELECT OID, FK_Member, PR_NAME, PR_UNIT, PR_DATE, PR_VALUE FROM Prise WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FK_Member", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_Member", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PR_UNIT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_UNIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PR_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PR_VALUE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PR_VALUE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FK_Member", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_Member", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PR_UNIT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_UNIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PR_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PR_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PR_VALUE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PR_VALUE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, FK_Member, PR_NAME, PR_UNIT, PR_DATE, PR_VALUE FROM dbo.Prise";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.PriseDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.PriseDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.PriseDataTable dataTable = new YouthOneDS.PriseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.PriseDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "Prise");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OID, string Original_FK_Member, string Original_PR_NAME, string Original_PR_UNIT, System.DateTime Original_PR_DATE, decimal Original_PR_VALUE) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            if ((Original_FK_Member == null)) {
                throw new global::System.ArgumentNullException("Original_FK_Member");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FK_Member));
            }
            if ((Original_PR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PR_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PR_NAME));
            }
            if ((Original_PR_UNIT == null)) {
                throw new global::System.ArgumentNullException("Original_PR_UNIT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_PR_UNIT));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_PR_DATE));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_PR_VALUE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OID, string FK_Member, string PR_NAME, string PR_UNIT, System.DateTime PR_DATE, decimal PR_VALUE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((FK_Member == null)) {
                throw new global::System.ArgumentNullException("FK_Member");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FK_Member));
            }
            if ((PR_NAME == null)) {
                throw new global::System.ArgumentNullException("PR_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PR_NAME));
            }
            if ((PR_UNIT == null)) {
                throw new global::System.ArgumentNullException("PR_UNIT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PR_UNIT));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(PR_DATE));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(PR_VALUE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OID, string FK_Member, string PR_NAME, string PR_UNIT, System.DateTime PR_DATE, decimal PR_VALUE, string Original_OID, string Original_FK_Member, string Original_PR_NAME, string Original_PR_UNIT, System.DateTime Original_PR_DATE, decimal Original_PR_VALUE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((FK_Member == null)) {
                throw new global::System.ArgumentNullException("FK_Member");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FK_Member));
            }
            if ((PR_NAME == null)) {
                throw new global::System.ArgumentNullException("PR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PR_NAME));
            }
            if ((PR_UNIT == null)) {
                throw new global::System.ArgumentNullException("PR_UNIT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PR_UNIT));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(PR_DATE));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(PR_VALUE));
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_OID));
            }
            if ((Original_FK_Member == null)) {
                throw new global::System.ArgumentNullException("Original_FK_Member");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_FK_Member));
            }
            if ((Original_PR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_PR_NAME));
            }
            if ((Original_PR_UNIT == null)) {
                throw new global::System.ArgumentNullException("Original_PR_UNIT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PR_UNIT));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_PR_DATE));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_PR_VALUE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FK_Member, string PR_NAME, string PR_UNIT, System.DateTime PR_DATE, decimal PR_VALUE, string Original_OID, string Original_FK_Member, string Original_PR_NAME, string Original_PR_UNIT, System.DateTime Original_PR_DATE, decimal Original_PR_VALUE) {
            return this.Update(Original_OID, FK_Member, PR_NAME, PR_UNIT, PR_DATE, PR_VALUE, Original_OID, Original_FK_Member, Original_PR_NAME, Original_PR_UNIT, Original_PR_DATE, Original_PR_VALUE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MemberStaticTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MemberStaticTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MemberStatic";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("MS_YEAR", "MS_YEAR");
            tableMapping.ColumnMappings.Add("MS_NUM", "MS_NUM");
            tableMapping.ColumnMappings.Add("YG_NAME", "YG_NAME");
            tableMapping.ColumnMappings.Add("MM_MALE", "MM_MALE");
            tableMapping.ColumnMappings.Add("MM_FEMALE", "MM_FEMALE");
            tableMapping.ColumnMappings.Add("MM_SUM", "MM_SUM");
            tableMapping.ColumnMappings.Add("MM_1428_MALE", "MM_1428_MALE");
            tableMapping.ColumnMappings.Add("MM_1428_FEMALE", "MM_1428_FEMALE");
            tableMapping.ColumnMappings.Add("MM_1428_SUM", "MM_1428_SUM");
            tableMapping.ColumnMappings.Add("MM_35_MALE", "MM_35_MALE");
            tableMapping.ColumnMappings.Add("MM_35_FEMALE", "MM_35_FEMALE");
            tableMapping.ColumnMappings.Add("MM_35_SUM", "MM_35_SUM");
            tableMapping.ColumnMappings.Add("MM_NEW", "MM_NEW");
            tableMapping.ColumnMappings.Add("MM_PARTY", "MM_PARTY");
            tableMapping.ColumnMappings.Add("PARTY_APP", "PARTY_APP");
            tableMapping.ColumnMappings.Add("MM_PARTY_APP", "MM_PARTY_APP");
            tableMapping.ColumnMappings.Add("MM_CL", "MM_CL");
            tableMapping.ColumnMappings.Add("MM_NT", "MM_NT");
            tableMapping.ColumnMappings.Add("MS_REMARK", "MS_REMARK");
            tableMapping.ColumnMappings.Add("CRE_DATE", "CRE_DATE");
            tableMapping.ColumnMappings.Add("MM_35_PARTY", "MS_35_PARTY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MemberStatic] WHERE (([OID] = @Original_OID) AND ([MS_YEAR] = @Original_MS_YEAR) AND ([MS_NUM] = @Original_MS_NUM) AND ([YG_NAME] = @Original_YG_NAME) AND ([MM_MALE] = @Original_MM_MALE) AND ([MM_FEMALE] = @Original_MM_FEMALE) AND ([MM_SUM] = @Original_MM_SUM) AND ([MM_1428_MALE] = @Original_MM_1428_MALE) AND ([MM_1428_FEMALE] = @Original_MM_1428_FEMALE) AND ([MM_1428_SUM] = @Original_MM_1428_SUM) AND ([MM_35_MALE] = @Original_MM_35_MALE) AND ([MM_35_FEMALE] = @Original_MM_35_FEMALE) AND ([MM_35_SUM] = @Original_MM_35_SUM) AND ([MM_NEW] = @Original_MM_NEW) AND ([MM_PARTY] = @Original_MM_PARTY) AND ([PARTY_APP] = @Original_PARTY_APP) AND ([MM_PARTY_APP] = @Original_MM_PARTY_APP) AND ([MM_CL] = @Original_MM_CL) AND ([MM_NT] = @Original_MM_NT) AND ([MS_REMARK] = @Original_MS_REMARK) AND ([CRE_DATE] = @Original_CRE_DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MS_YEAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_YEAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MS_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_MALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_FEMALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_SUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_1428_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_MALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_1428_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_FEMALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_1428_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_SUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_35_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_MALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_35_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_FEMALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_35_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_SUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_NEW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NEW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_PARTY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_PARTY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARTY_APP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTY_APP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_PARTY_APP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_PARTY_APP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_CL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_CL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_NT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MS_REMARK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_REMARK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MemberStatic] ([OID], [MS_YEAR], [MS_NUM], [YG_NAME], [MM_MALE], [MM_FEMALE], [MM_SUM], [MM_1428_MALE], [MM_1428_FEMALE], [MM_1428_SUM], [MM_35_MALE], [MM_35_FEMALE], [MM_35_SUM], [MM_NEW], [MM_PARTY], [PARTY_APP], [MM_PARTY_APP], [MM_CL], [MM_NT], [MS_REMARK], [CRE_DATE]) VALUES (@OID, @MS_YEAR, @MS_NUM, @YG_NAME, @MM_MALE, @MM_FEMALE, @MM_SUM, @MM_1428_MALE, @MM_1428_FEMALE, @MM_1428_SUM, @MM_35_MALE, @MM_35_FEMALE, @MM_35_SUM, @MM_NEW, @MM_PARTY, @PARTY_APP, @MM_PARTY_APP, @MM_CL, @MM_NT, @MS_REMARK, @CRE_DATE);
SELECT OID, MS_YEAR, MS_NUM, YG_NAME, MM_MALE, MM_FEMALE, MM_SUM, MM_1428_MALE, MM_1428_FEMALE, MM_1428_SUM, MM_35_MALE, MM_35_FEMALE, MM_35_SUM, MM_NEW, MM_PARTY, PARTY_APP, MM_PARTY_APP, MM_CL, MM_NT, MS_REMARK, CRE_DATE FROM MemberStatic WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MS_YEAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_YEAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MS_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_MALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_FEMALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_SUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_1428_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_MALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_1428_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_FEMALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_1428_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_SUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_35_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_MALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_35_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_FEMALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_35_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_SUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_NEW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NEW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_PARTY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_PARTY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARTY_APP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTY_APP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_PARTY_APP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_PARTY_APP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_CL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_CL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_NT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MS_REMARK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MemberStatic] SET [OID] = @OID, [MS_YEAR] = @MS_YEAR, [MS_NUM] = @M" +
                "S_NUM, [YG_NAME] = @YG_NAME, [MM_MALE] = @MM_MALE, [MM_FEMALE] = @MM_FEMALE, [MM" +
                "_SUM] = @MM_SUM, [MM_1428_MALE] = @MM_1428_MALE, [MM_1428_FEMALE] = @MM_1428_FEM" +
                "ALE, [MM_1428_SUM] = @MM_1428_SUM, [MM_35_MALE] = @MM_35_MALE, [MM_35_FEMALE] = " +
                "@MM_35_FEMALE, [MM_35_SUM] = @MM_35_SUM, [MM_NEW] = @MM_NEW, [MM_PARTY] = @MM_PA" +
                "RTY, [PARTY_APP] = @PARTY_APP, [MM_PARTY_APP] = @MM_PARTY_APP, [MM_CL] = @MM_CL," +
                " [MM_NT] = @MM_NT, [MS_REMARK] = @MS_REMARK, [CRE_DATE] = @CRE_DATE WHERE (([OID" +
                "] = @Original_OID) AND ([MS_YEAR] = @Original_MS_YEAR) AND ([MS_NUM] = @Original" +
                "_MS_NUM) AND ([YG_NAME] = @Original_YG_NAME) AND ([MM_MALE] = @Original_MM_MALE)" +
                " AND ([MM_FEMALE] = @Original_MM_FEMALE) AND ([MM_SUM] = @Original_MM_SUM) AND (" +
                "[MM_1428_MALE] = @Original_MM_1428_MALE) AND ([MM_1428_FEMALE] = @Original_MM_14" +
                "28_FEMALE) AND ([MM_1428_SUM] = @Original_MM_1428_SUM) AND ([MM_35_MALE] = @Orig" +
                "inal_MM_35_MALE) AND ([MM_35_FEMALE] = @Original_MM_35_FEMALE) AND ([MM_35_SUM] " +
                "= @Original_MM_35_SUM) AND ([MM_NEW] = @Original_MM_NEW) AND ([MM_PARTY] = @Orig" +
                "inal_MM_PARTY) AND ([PARTY_APP] = @Original_PARTY_APP) AND ([MM_PARTY_APP] = @Or" +
                "iginal_MM_PARTY_APP) AND ([MM_CL] = @Original_MM_CL) AND ([MM_NT] = @Original_MM" +
                "_NT) AND ([MS_REMARK] = @Original_MS_REMARK) AND ([CRE_DATE] = @Original_CRE_DAT" +
                "E));\r\nSELECT OID, MS_YEAR, MS_NUM, YG_NAME, MM_MALE, MM_FEMALE, MM_SUM, MM_1428_" +
                "MALE, MM_1428_FEMALE, MM_1428_SUM, MM_35_MALE, MM_35_FEMALE, MM_35_SUM, MM_NEW, " +
                "MM_PARTY, PARTY_APP, MM_PARTY_APP, MM_CL, MM_NT, MS_REMARK, CRE_DATE FROM Member" +
                "Static WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MS_YEAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_YEAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MS_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_MALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_FEMALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_SUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_1428_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_MALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_1428_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_FEMALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_1428_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_SUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_35_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_MALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_35_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_FEMALE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_35_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_SUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_NEW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NEW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_PARTY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_PARTY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARTY_APP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTY_APP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_PARTY_APP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_PARTY_APP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_CL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_CL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_NT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MS_REMARK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MS_YEAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_YEAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MS_NUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_MALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_FEMALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_SUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_1428_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_MALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_1428_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_FEMALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_1428_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_1428_SUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_35_MALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_MALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_35_FEMALE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_FEMALE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_35_SUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_35_SUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_NEW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NEW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_PARTY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_PARTY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARTY_APP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTY_APP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_PARTY_APP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_PARTY_APP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_CL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_CL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_NT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MS_REMARK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MS_REMARK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, MS_YEAR, MS_NUM, YG_NAME, MM_MALE, MM_FEMALE, MM_SUM, MM_1428_MALE, M" +
                "M_1428_FEMALE, MM_1428_SUM, MM_35_MALE, MM_35_FEMALE, MM_35_SUM, MM_NEW, MM_PART" +
                "Y, PARTY_APP, MM_PARTY_APP, MM_CL, MM_NT, MS_REMARK, CRE_DATE FROM dbo.MemberSta" +
                "tic";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.MemberStaticDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.MemberStaticDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.MemberStaticDataTable dataTable = new YouthOneDS.MemberStaticDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.MemberStaticDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "MemberStatic");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_OID, 
                    int Original_MS_YEAR, 
                    int Original_MS_NUM, 
                    string Original_YG_NAME, 
                    int Original_MM_MALE, 
                    int Original_MM_FEMALE, 
                    int Original_MM_SUM, 
                    int Original_MM_1428_MALE, 
                    int Original_MM_1428_FEMALE, 
                    int Original_MM_1428_SUM, 
                    int Original_MM_35_MALE, 
                    int Original_MM_35_FEMALE, 
                    int Original_MM_35_SUM, 
                    int Original_MM_NEW, 
                    int Original_MM_PARTY, 
                    int Original_PARTY_APP, 
                    int Original_MM_PARTY_APP, 
                    int Original_MM_CL, 
                    int Original_MM_NT, 
                    string Original_MS_REMARK, 
                    System.DateTime Original_CRE_DATE) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_MS_YEAR));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_MS_NUM));
            if ((Original_YG_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_YG_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_YG_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_MM_MALE));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_MM_FEMALE));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_MM_SUM));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_MM_1428_MALE));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_MM_1428_FEMALE));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_MM_1428_SUM));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_MM_35_MALE));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_MM_35_FEMALE));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_MM_35_SUM));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_MM_NEW));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_MM_PARTY));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_PARTY_APP));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_MM_PARTY_APP));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_MM_CL));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_MM_NT));
            if ((Original_MS_REMARK == null)) {
                throw new global::System.ArgumentNullException("Original_MS_REMARK");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_MS_REMARK));
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string OID, 
                    int MS_YEAR, 
                    int MS_NUM, 
                    string YG_NAME, 
                    int MM_MALE, 
                    int MM_FEMALE, 
                    int MM_SUM, 
                    int MM_1428_MALE, 
                    int MM_1428_FEMALE, 
                    int MM_1428_SUM, 
                    int MM_35_MALE, 
                    int MM_35_FEMALE, 
                    int MM_35_SUM, 
                    int MM_NEW, 
                    int MM_PARTY, 
                    int PARTY_APP, 
                    int MM_PARTY_APP, 
                    int MM_CL, 
                    int MM_NT, 
                    string MS_REMARK, 
                    System.DateTime CRE_DATE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(MS_YEAR));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(MS_NUM));
            if ((YG_NAME == null)) {
                throw new global::System.ArgumentNullException("YG_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(YG_NAME));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(MM_MALE));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(MM_FEMALE));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(MM_SUM));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(MM_1428_MALE));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(MM_1428_FEMALE));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(MM_1428_SUM));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(MM_35_MALE));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(MM_35_FEMALE));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(MM_35_SUM));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(MM_NEW));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(MM_PARTY));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(PARTY_APP));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(MM_PARTY_APP));
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(MM_CL));
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(MM_NT));
            if ((MS_REMARK == null)) {
                throw new global::System.ArgumentNullException("MS_REMARK");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(MS_REMARK));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string OID, 
                    int MS_YEAR, 
                    int MS_NUM, 
                    string YG_NAME, 
                    int MM_MALE, 
                    int MM_FEMALE, 
                    int MM_SUM, 
                    int MM_1428_MALE, 
                    int MM_1428_FEMALE, 
                    int MM_1428_SUM, 
                    int MM_35_MALE, 
                    int MM_35_FEMALE, 
                    int MM_35_SUM, 
                    int MM_NEW, 
                    int MM_PARTY, 
                    int PARTY_APP, 
                    int MM_PARTY_APP, 
                    int MM_CL, 
                    int MM_NT, 
                    string MS_REMARK, 
                    System.DateTime CRE_DATE, 
                    string Original_OID, 
                    int Original_MS_YEAR, 
                    int Original_MS_NUM, 
                    string Original_YG_NAME, 
                    int Original_MM_MALE, 
                    int Original_MM_FEMALE, 
                    int Original_MM_SUM, 
                    int Original_MM_1428_MALE, 
                    int Original_MM_1428_FEMALE, 
                    int Original_MM_1428_SUM, 
                    int Original_MM_35_MALE, 
                    int Original_MM_35_FEMALE, 
                    int Original_MM_35_SUM, 
                    int Original_MM_NEW, 
                    int Original_MM_PARTY, 
                    int Original_PARTY_APP, 
                    int Original_MM_PARTY_APP, 
                    int Original_MM_CL, 
                    int Original_MM_NT, 
                    string Original_MS_REMARK, 
                    System.DateTime Original_CRE_DATE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(MS_YEAR));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(MS_NUM));
            if ((YG_NAME == null)) {
                throw new global::System.ArgumentNullException("YG_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(YG_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(MM_MALE));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(MM_FEMALE));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(MM_SUM));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(MM_1428_MALE));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(MM_1428_FEMALE));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(MM_1428_SUM));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(MM_35_MALE));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(MM_35_FEMALE));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(MM_35_SUM));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(MM_NEW));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(MM_PARTY));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(PARTY_APP));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(MM_PARTY_APP));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(MM_CL));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(MM_NT));
            if ((MS_REMARK == null)) {
                throw new global::System.ArgumentNullException("MS_REMARK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(MS_REMARK));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(CRE_DATE));
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_OID));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_MS_YEAR));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_MS_NUM));
            if ((Original_YG_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_YG_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_YG_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_MM_MALE));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_MM_FEMALE));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_MM_SUM));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_MM_1428_MALE));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_MM_1428_FEMALE));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_MM_1428_SUM));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_MM_35_MALE));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_MM_35_FEMALE));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_MM_35_SUM));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_MM_NEW));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_MM_PARTY));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_PARTY_APP));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_MM_PARTY_APP));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_MM_CL));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_MM_NT));
            if ((Original_MS_REMARK == null)) {
                throw new global::System.ArgumentNullException("Original_MS_REMARK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_MS_REMARK));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(Original_CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int MS_YEAR, 
                    int MS_NUM, 
                    string YG_NAME, 
                    int MM_MALE, 
                    int MM_FEMALE, 
                    int MM_SUM, 
                    int MM_1428_MALE, 
                    int MM_1428_FEMALE, 
                    int MM_1428_SUM, 
                    int MM_35_MALE, 
                    int MM_35_FEMALE, 
                    int MM_35_SUM, 
                    int MM_NEW, 
                    int MM_PARTY, 
                    int PARTY_APP, 
                    int MM_PARTY_APP, 
                    int MM_CL, 
                    int MM_NT, 
                    string MS_REMARK, 
                    System.DateTime CRE_DATE, 
                    string Original_OID, 
                    int Original_MS_YEAR, 
                    int Original_MS_NUM, 
                    string Original_YG_NAME, 
                    int Original_MM_MALE, 
                    int Original_MM_FEMALE, 
                    int Original_MM_SUM, 
                    int Original_MM_1428_MALE, 
                    int Original_MM_1428_FEMALE, 
                    int Original_MM_1428_SUM, 
                    int Original_MM_35_MALE, 
                    int Original_MM_35_FEMALE, 
                    int Original_MM_35_SUM, 
                    int Original_MM_NEW, 
                    int Original_MM_PARTY, 
                    int Original_PARTY_APP, 
                    int Original_MM_PARTY_APP, 
                    int Original_MM_CL, 
                    int Original_MM_NT, 
                    string Original_MS_REMARK, 
                    System.DateTime Original_CRE_DATE) {
            return this.Update(Original_OID, MS_YEAR, MS_NUM, YG_NAME, MM_MALE, MM_FEMALE, MM_SUM, MM_1428_MALE, MM_1428_FEMALE, MM_1428_SUM, MM_35_MALE, MM_35_FEMALE, MM_35_SUM, MM_NEW, MM_PARTY, PARTY_APP, MM_PARTY_APP, MM_CL, MM_NT, MS_REMARK, CRE_DATE, Original_OID, Original_MS_YEAR, Original_MS_NUM, Original_YG_NAME, Original_MM_MALE, Original_MM_FEMALE, Original_MM_SUM, Original_MM_1428_MALE, Original_MM_1428_FEMALE, Original_MM_1428_SUM, Original_MM_35_MALE, Original_MM_35_FEMALE, Original_MM_35_SUM, Original_MM_NEW, Original_MM_PARTY, Original_PARTY_APP, Original_MM_PARTY_APP, Original_MM_CL, Original_MM_NT, Original_MS_REMARK, Original_CRE_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NotificationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NotificationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Notification";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("MM_OID", "MM_OID");
            tableMapping.ColumnMappings.Add("MM_NAME", "MM_NAME");
            tableMapping.ColumnMappings.Add("MM_YG_OID", "MM_YG_OID");
            tableMapping.ColumnMappings.Add("MM_YG_NAME", "MM_YG_NAME");
            tableMapping.ColumnMappings.Add("NF_NAME", "NF_NAME");
            tableMapping.ColumnMappings.Add("NF_YG_OID", "NF_YG_OID");
            tableMapping.ColumnMappings.Add("NF_CAT", "NF_CAT");
            tableMapping.ColumnMappings.Add("NF_STATUS", "NF_STATUS");
            tableMapping.ColumnMappings.Add("OP_DATE", "OP_DATE");
            tableMapping.ColumnMappings.Add("OP_ADMIN", "OP_ADMIN");
            tableMapping.ColumnMappings.Add("CRE_DATE", "CRE_DATE");
            tableMapping.ColumnMappings.Add("Dept", "Dept");
            tableMapping.ColumnMappings.Add("WorkGroup", "WorkGroup");
            tableMapping.ColumnMappings.Add("Post", "Post");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Notification] WHERE (([OID] = @Original_OID) AND ([MM_OID] = @Original_MM_OID) AND ([MM_NAME] = @Original_MM_NAME) AND ([MM_YG_OID] = @Original_MM_YG_OID) AND ([MM_YG_NAME] = @Original_MM_YG_NAME) AND ([NF_NAME] = @Original_NF_NAME) AND ([NF_YG_OID] = @Original_NF_YG_OID) AND ([NF_CAT] = @Original_NF_CAT) AND ([NF_STATUS] = @Original_NF_STATUS) AND ([OP_DATE] = @Original_OP_DATE) AND ([OP_ADMIN] = @Original_OP_ADMIN) AND ([CRE_DATE] = @Original_CRE_DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_YG_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NF_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NF_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NF_CAT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_CAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NF_STATUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_STATUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_ADMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Notification] ([OID], [MM_OID], [MM_NAME], [MM_YG_OID], [MM_YG_NAME], [NF_NAME], [NF_YG_OID], [NF_CAT], [NF_STATUS], [OP_DATE], [OP_ADMIN], [CRE_DATE]) VALUES (@OID, @MM_OID, @MM_NAME, @MM_YG_OID, @MM_YG_NAME, @NF_NAME, @NF_YG_OID, @NF_CAT, @NF_STATUS, @OP_DATE, @OP_ADMIN, @CRE_DATE);
SELECT OID, MM_OID, MM_NAME, MM_YG_OID, MM_YG_NAME, NF_NAME, NF_YG_OID, NF_CAT, NF_STATUS, OP_DATE, OP_ADMIN, CRE_DATE FROM Notification WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_YG_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NF_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NF_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NF_CAT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_CAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NF_STATUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_ADMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Notification] SET [OID] = @OID, [MM_OID] = @MM_OID, [MM_NAME] = @MM_NAME, [MM_YG_OID] = @MM_YG_OID, [MM_YG_NAME] = @MM_YG_NAME, [NF_NAME] = @NF_NAME, [NF_YG_OID] = @NF_YG_OID, [NF_CAT] = @NF_CAT, [NF_STATUS] = @NF_STATUS, [OP_DATE] = @OP_DATE, [OP_ADMIN] = @OP_ADMIN, [CRE_DATE] = @CRE_DATE WHERE (([OID] = @Original_OID) AND ([MM_OID] = @Original_MM_OID) AND ([MM_NAME] = @Original_MM_NAME) AND ([MM_YG_OID] = @Original_MM_YG_OID) AND ([MM_YG_NAME] = @Original_MM_YG_NAME) AND ([NF_NAME] = @Original_NF_NAME) AND ([NF_YG_OID] = @Original_NF_YG_OID) AND ([NF_CAT] = @Original_NF_CAT) AND ([NF_STATUS] = @Original_NF_STATUS) AND ([OP_DATE] = @Original_OP_DATE) AND ([OP_ADMIN] = @Original_OP_ADMIN) AND ([CRE_DATE] = @Original_CRE_DATE));
SELECT OID, MM_OID, MM_NAME, MM_YG_OID, MM_YG_NAME, NF_NAME, NF_YG_OID, NF_CAT, NF_STATUS, OP_DATE, OP_ADMIN, CRE_DATE FROM Notification WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM_YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_YG_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NF_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NF_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NF_CAT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_CAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NF_STATUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_ADMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM_YG_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM_YG_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NF_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NF_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NF_CAT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_CAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NF_STATUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF_STATUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_ADMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, MM_OID, MM_NAME, MM_YG_OID, MM_YG_NAME, NF_NAME, NF_YG_OID, NF_CAT, N" +
                "F_STATUS, OP_DATE, OP_ADMIN, CRE_DATE FROM Notification";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.NotificationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.NotificationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.NotificationDataTable dataTable = new YouthOneDS.NotificationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.NotificationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "Notification");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OID, string Original_MM_OID, string Original_MM_NAME, string Original_MM_YG_OID, string Original_MM_YG_NAME, string Original_NF_NAME, string Original_NF_YG_OID, string Original_NF_CAT, int Original_NF_STATUS, System.DateTime Original_OP_DATE, string Original_OP_ADMIN, System.DateTime Original_CRE_DATE) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            if ((Original_MM_OID == null)) {
                throw new global::System.ArgumentNullException("Original_MM_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MM_OID));
            }
            if ((Original_MM_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_MM_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MM_NAME));
            }
            if ((Original_MM_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_MM_YG_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_MM_YG_OID));
            }
            if ((Original_MM_YG_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_MM_YG_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MM_YG_NAME));
            }
            if ((Original_NF_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_NF_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_NF_NAME));
            }
            if ((Original_NF_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_NF_YG_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_NF_YG_OID));
            }
            if ((Original_NF_CAT == null)) {
                throw new global::System.ArgumentNullException("Original_NF_CAT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_NF_CAT));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_NF_STATUS));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_OP_DATE));
            if ((Original_OP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("Original_OP_ADMIN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_OP_ADMIN));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OID, string MM_OID, string MM_NAME, string MM_YG_OID, string MM_YG_NAME, string NF_NAME, string NF_YG_OID, string NF_CAT, int NF_STATUS, System.DateTime OP_DATE, string OP_ADMIN, System.DateTime CRE_DATE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((MM_OID == null)) {
                throw new global::System.ArgumentNullException("MM_OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MM_OID));
            }
            if ((MM_NAME == null)) {
                throw new global::System.ArgumentNullException("MM_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MM_NAME));
            }
            if ((MM_YG_OID == null)) {
                throw new global::System.ArgumentNullException("MM_YG_OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MM_YG_OID));
            }
            if ((MM_YG_NAME == null)) {
                throw new global::System.ArgumentNullException("MM_YG_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MM_YG_NAME));
            }
            if ((NF_NAME == null)) {
                throw new global::System.ArgumentNullException("NF_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(NF_NAME));
            }
            if ((NF_YG_OID == null)) {
                throw new global::System.ArgumentNullException("NF_YG_OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(NF_YG_OID));
            }
            if ((NF_CAT == null)) {
                throw new global::System.ArgumentNullException("NF_CAT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(NF_CAT));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(NF_STATUS));
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(OP_DATE));
            if ((OP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("OP_ADMIN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(OP_ADMIN));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string OID, 
                    string MM_OID, 
                    string MM_NAME, 
                    string MM_YG_OID, 
                    string MM_YG_NAME, 
                    string NF_NAME, 
                    string NF_YG_OID, 
                    string NF_CAT, 
                    int NF_STATUS, 
                    System.DateTime OP_DATE, 
                    string OP_ADMIN, 
                    System.DateTime CRE_DATE, 
                    string Original_OID, 
                    string Original_MM_OID, 
                    string Original_MM_NAME, 
                    string Original_MM_YG_OID, 
                    string Original_MM_YG_NAME, 
                    string Original_NF_NAME, 
                    string Original_NF_YG_OID, 
                    string Original_NF_CAT, 
                    int Original_NF_STATUS, 
                    System.DateTime Original_OP_DATE, 
                    string Original_OP_ADMIN, 
                    System.DateTime Original_CRE_DATE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((MM_OID == null)) {
                throw new global::System.ArgumentNullException("MM_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MM_OID));
            }
            if ((MM_NAME == null)) {
                throw new global::System.ArgumentNullException("MM_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MM_NAME));
            }
            if ((MM_YG_OID == null)) {
                throw new global::System.ArgumentNullException("MM_YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MM_YG_OID));
            }
            if ((MM_YG_NAME == null)) {
                throw new global::System.ArgumentNullException("MM_YG_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MM_YG_NAME));
            }
            if ((NF_NAME == null)) {
                throw new global::System.ArgumentNullException("NF_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(NF_NAME));
            }
            if ((NF_YG_OID == null)) {
                throw new global::System.ArgumentNullException("NF_YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(NF_YG_OID));
            }
            if ((NF_CAT == null)) {
                throw new global::System.ArgumentNullException("NF_CAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(NF_CAT));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(NF_STATUS));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(OP_DATE));
            if ((OP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("OP_ADMIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(OP_ADMIN));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(CRE_DATE));
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_OID));
            }
            if ((Original_MM_OID == null)) {
                throw new global::System.ArgumentNullException("Original_MM_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_MM_OID));
            }
            if ((Original_MM_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_MM_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MM_NAME));
            }
            if ((Original_MM_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_MM_YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_MM_YG_OID));
            }
            if ((Original_MM_YG_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_MM_YG_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_MM_YG_NAME));
            }
            if ((Original_NF_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_NF_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_NF_NAME));
            }
            if ((Original_NF_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_NF_YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_NF_YG_OID));
            }
            if ((Original_NF_CAT == null)) {
                throw new global::System.ArgumentNullException("Original_NF_CAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_NF_CAT));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_NF_STATUS));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_OP_DATE));
            if ((Original_OP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("Original_OP_ADMIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_OP_ADMIN));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_CRE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MM_OID, 
                    string MM_NAME, 
                    string MM_YG_OID, 
                    string MM_YG_NAME, 
                    string NF_NAME, 
                    string NF_YG_OID, 
                    string NF_CAT, 
                    int NF_STATUS, 
                    System.DateTime OP_DATE, 
                    string OP_ADMIN, 
                    System.DateTime CRE_DATE, 
                    string Original_OID, 
                    string Original_MM_OID, 
                    string Original_MM_NAME, 
                    string Original_MM_YG_OID, 
                    string Original_MM_YG_NAME, 
                    string Original_NF_NAME, 
                    string Original_NF_YG_OID, 
                    string Original_NF_CAT, 
                    int Original_NF_STATUS, 
                    System.DateTime Original_OP_DATE, 
                    string Original_OP_ADMIN, 
                    System.DateTime Original_CRE_DATE) {
            return this.Update(Original_OID, MM_OID, MM_NAME, MM_YG_OID, MM_YG_NAME, NF_NAME, NF_YG_OID, NF_CAT, NF_STATUS, OP_DATE, OP_ADMIN, CRE_DATE, Original_OID, Original_MM_OID, Original_MM_NAME, Original_MM_YG_OID, Original_MM_YG_NAME, Original_NF_NAME, Original_NF_YG_OID, Original_NF_CAT, Original_NF_STATUS, Original_OP_DATE, Original_OP_ADMIN, Original_CRE_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OutlayPublishTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OutlayPublishTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OutlayPublish";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("OP_ADMIN", "OP_ADMIN");
            tableMapping.ColumnMappings.Add("YG_OID", "YG_OID");
            tableMapping.ColumnMappings.Add("OL_NUM", "OL_NUM");
            tableMapping.ColumnMappings.Add("OL_STATUS", "OL_STATUS");
            tableMapping.ColumnMappings.Add("OL_DATE", "OL_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[OutlayPublish] WHERE (([OID] = @Original_OID) AND ([OP_ADMIN] " +
                "= @Original_OP_ADMIN) AND ([YG_OID] = @Original_YG_OID) AND ([OL_NUM] = @Origina" +
                "l_OL_NUM) AND ([OL_STATUS] = @Original_OL_STATUS) AND ([OL_DATE] = @Original_OL_" +
                "DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_ADMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OL_NUM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OL_NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OL_STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OL_STATUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OL_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OL_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OutlayPublish] ([OID], [OP_ADMIN], [YG_OID], [OL_NUM], [OL_STATUS], [OL_DATE]) VALUES (@OID, @OP_ADMIN, @YG_OID, @OL_NUM, @OL_STATUS, @OL_DATE);
SELECT OID, OP_ADMIN, YG_OID, OL_NUM, OL_STATUS, OL_DATE FROM OutlayPublish WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_ADMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OL_NUM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OL_NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OL_STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OL_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OL_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OL_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[OutlayPublish] SET [OID] = @OID, [OP_ADMIN] = @OP_ADMIN, [YG_OID] = @YG_OID, [OL_NUM] = @OL_NUM, [OL_STATUS] = @OL_STATUS, [OL_DATE] = @OL_DATE WHERE (([OID] = @Original_OID) AND ([OP_ADMIN] = @Original_OP_ADMIN) AND ([YG_OID] = @Original_YG_OID) AND ([OL_NUM] = @Original_OL_NUM) AND ([OL_STATUS] = @Original_OL_STATUS) AND ([OL_DATE] = @Original_OL_DATE));
SELECT OID, OP_ADMIN, YG_OID, OL_NUM, OL_STATUS, OL_DATE FROM OutlayPublish WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_ADMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OL_NUM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OL_NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OL_STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OL_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OL_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OL_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_ADMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OL_NUM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OL_NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OL_STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OL_STATUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OL_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OL_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, OP_ADMIN, YG_OID, OL_NUM, OL_STATUS, OL_DATE FROM dbo.OutlayPublish";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.OutlayPublishDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.OutlayPublishDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.OutlayPublishDataTable dataTable = new YouthOneDS.OutlayPublishDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.OutlayPublishDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "OutlayPublish");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OID, string Original_OP_ADMIN, string Original_YG_OID, decimal Original_OL_NUM, string Original_OL_STATUS, System.DateTime Original_OL_DATE) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            if ((Original_OP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("Original_OP_ADMIN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_OP_ADMIN));
            }
            if ((Original_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_YG_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_YG_OID));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_OL_NUM));
            if ((Original_OL_STATUS == null)) {
                throw new global::System.ArgumentNullException("Original_OL_STATUS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_OL_STATUS));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_OL_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OID, string OP_ADMIN, string YG_OID, decimal OL_NUM, string OL_STATUS, System.DateTime OL_DATE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((OP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("OP_ADMIN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(OP_ADMIN));
            }
            if ((YG_OID == null)) {
                throw new global::System.ArgumentNullException("YG_OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(YG_OID));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(OL_NUM));
            if ((OL_STATUS == null)) {
                throw new global::System.ArgumentNullException("OL_STATUS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(OL_STATUS));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(OL_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OID, string OP_ADMIN, string YG_OID, decimal OL_NUM, string OL_STATUS, System.DateTime OL_DATE, string Original_OID, string Original_OP_ADMIN, string Original_YG_OID, decimal Original_OL_NUM, string Original_OL_STATUS, System.DateTime Original_OL_DATE) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((OP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("OP_ADMIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(OP_ADMIN));
            }
            if ((YG_OID == null)) {
                throw new global::System.ArgumentNullException("YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(YG_OID));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(OL_NUM));
            if ((OL_STATUS == null)) {
                throw new global::System.ArgumentNullException("OL_STATUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(OL_STATUS));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(OL_DATE));
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_OID));
            }
            if ((Original_OP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("Original_OP_ADMIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_OP_ADMIN));
            }
            if ((Original_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_YG_OID));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_OL_NUM));
            if ((Original_OL_STATUS == null)) {
                throw new global::System.ArgumentNullException("Original_OL_STATUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_OL_STATUS));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_OL_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OP_ADMIN, string YG_OID, decimal OL_NUM, string OL_STATUS, System.DateTime OL_DATE, string Original_OID, string Original_OP_ADMIN, string Original_YG_OID, decimal Original_OL_NUM, string Original_OL_STATUS, System.DateTime Original_OL_DATE) {
            return this.Update(Original_OID, OP_ADMIN, YG_OID, OL_NUM, OL_STATUS, OL_DATE, Original_OID, Original_OP_ADMIN, Original_YG_OID, Original_OL_NUM, Original_OL_STATUS, Original_OL_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OutlayUseTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OutlayUseTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OutlayUse";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("YG_OID", "YG_OID");
            tableMapping.ColumnMappings.Add("OU_TYPE", "OU_TYPE");
            tableMapping.ColumnMappings.Add("OU_ZC", "OU_ZC");
            tableMapping.ColumnMappings.Add("OU_SL", "OU_SL");
            tableMapping.ColumnMappings.Add("OU_JY", "OU_JY");
            tableMapping.ColumnMappings.Add("OU_DESC", "OU_DESC");
            tableMapping.ColumnMappings.Add("OU_DATE", "OU_DATE");
            tableMapping.ColumnMappings.Add("OU_ADMIN", "OU_ADMIN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[OutlayUse] WHERE (([OID] = @Original_OID) AND ([YG_OID] = @Original_YG_OID) AND ([OU_TYPE] = @Original_OU_TYPE) AND ([OU_ZC] = @Original_OU_ZC) AND ([OU_SL] = @Original_OU_SL) AND ([OU_JY] = @Original_OU_JY) AND ([OU_DESC] = @Original_OU_DESC) AND ([OU_DATE] = @Original_OU_DATE) AND ([OU_ADMIN] = @Original_OU_ADMIN))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_ZC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_ZC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_SL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_SL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_JY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_JY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_DESC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_ADMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OutlayUse] ([OID], [YG_OID], [OU_TYPE], [OU_ZC], [OU_SL], [OU_JY], [OU_DESC], [OU_DATE], [OU_ADMIN]) VALUES (@OID, @YG_OID, @OU_TYPE, @OU_ZC, @OU_SL, @OU_JY, @OU_DESC, @OU_DATE, @OU_ADMIN);
SELECT OID, YG_OID, OU_TYPE, OU_ZC, OU_SL, OU_JY, OU_DESC, OU_DATE, OU_ADMIN FROM OutlayUse WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_ZC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_ZC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_SL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_SL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_JY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_JY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_ADMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[OutlayUse] SET [OID] = @OID, [YG_OID] = @YG_OID, [OU_TYPE] = @OU_TYPE, [OU_ZC] = @OU_ZC, [OU_SL] = @OU_SL, [OU_JY] = @OU_JY, [OU_DESC] = @OU_DESC, [OU_DATE] = @OU_DATE, [OU_ADMIN] = @OU_ADMIN WHERE (([OID] = @Original_OID) AND ([YG_OID] = @Original_YG_OID) AND ([OU_TYPE] = @Original_OU_TYPE) AND ([OU_ZC] = @Original_OU_ZC) AND ([OU_SL] = @Original_OU_SL) AND ([OU_JY] = @Original_OU_JY) AND ([OU_DESC] = @Original_OU_DESC) AND ([OU_DATE] = @Original_OU_DATE) AND ([OU_ADMIN] = @Original_OU_ADMIN));
SELECT OID, YG_OID, OU_TYPE, OU_ZC, OU_SL, OU_JY, OU_DESC, OU_DATE, OU_ADMIN FROM OutlayUse WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_ZC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_ZC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_SL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_SL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_JY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_JY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OU_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_ADMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_ZC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_ZC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_SL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_SL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_JY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OU_JY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_DESC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OU_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OU_ADMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, YG_OID, OU_TYPE, OU_ZC, OU_SL, OU_JY, OU_DESC, OU_DATE, OU_ADMIN FROM" +
                " dbo.OutlayUse";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.OutlayUseDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.OutlayUseDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.OutlayUseDataTable dataTable = new YouthOneDS.OutlayUseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.OutlayUseDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "OutlayUse");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OID, string Original_YG_OID, string Original_OU_TYPE, decimal Original_OU_ZC, decimal Original_OU_SL, decimal Original_OU_JY, string Original_OU_DESC, System.DateTime Original_OU_DATE, string Original_OU_ADMIN) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            if ((Original_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_YG_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_YG_OID));
            }
            if ((Original_OU_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_OU_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_OU_TYPE));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_OU_ZC));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_OU_SL));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_OU_JY));
            if ((Original_OU_DESC == null)) {
                throw new global::System.ArgumentNullException("Original_OU_DESC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_OU_DESC));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_OU_DATE));
            if ((Original_OU_ADMIN == null)) {
                throw new global::System.ArgumentNullException("Original_OU_ADMIN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_OU_ADMIN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OID, string YG_OID, string OU_TYPE, decimal OU_ZC, decimal OU_SL, decimal OU_JY, string OU_DESC, System.DateTime OU_DATE, string OU_ADMIN) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((YG_OID == null)) {
                throw new global::System.ArgumentNullException("YG_OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(YG_OID));
            }
            if ((OU_TYPE == null)) {
                throw new global::System.ArgumentNullException("OU_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(OU_TYPE));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(OU_ZC));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(OU_SL));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(OU_JY));
            if ((OU_DESC == null)) {
                throw new global::System.ArgumentNullException("OU_DESC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(OU_DESC));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(OU_DATE));
            if ((OU_ADMIN == null)) {
                throw new global::System.ArgumentNullException("OU_ADMIN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(OU_ADMIN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string OID, 
                    string YG_OID, 
                    string OU_TYPE, 
                    decimal OU_ZC, 
                    decimal OU_SL, 
                    decimal OU_JY, 
                    string OU_DESC, 
                    System.DateTime OU_DATE, 
                    string OU_ADMIN, 
                    string Original_OID, 
                    string Original_YG_OID, 
                    string Original_OU_TYPE, 
                    decimal Original_OU_ZC, 
                    decimal Original_OU_SL, 
                    decimal Original_OU_JY, 
                    string Original_OU_DESC, 
                    System.DateTime Original_OU_DATE, 
                    string Original_OU_ADMIN) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((YG_OID == null)) {
                throw new global::System.ArgumentNullException("YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(YG_OID));
            }
            if ((OU_TYPE == null)) {
                throw new global::System.ArgumentNullException("OU_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(OU_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(OU_ZC));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(OU_SL));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(OU_JY));
            if ((OU_DESC == null)) {
                throw new global::System.ArgumentNullException("OU_DESC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(OU_DESC));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(OU_DATE));
            if ((OU_ADMIN == null)) {
                throw new global::System.ArgumentNullException("OU_ADMIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(OU_ADMIN));
            }
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_OID));
            }
            if ((Original_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_YG_OID));
            }
            if ((Original_OU_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_OU_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_OU_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_OU_ZC));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_OU_SL));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_OU_JY));
            if ((Original_OU_DESC == null)) {
                throw new global::System.ArgumentNullException("Original_OU_DESC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_OU_DESC));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_OU_DATE));
            if ((Original_OU_ADMIN == null)) {
                throw new global::System.ArgumentNullException("Original_OU_ADMIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_OU_ADMIN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string YG_OID, 
                    string OU_TYPE, 
                    decimal OU_ZC, 
                    decimal OU_SL, 
                    decimal OU_JY, 
                    string OU_DESC, 
                    System.DateTime OU_DATE, 
                    string OU_ADMIN, 
                    string Original_OID, 
                    string Original_YG_OID, 
                    string Original_OU_TYPE, 
                    decimal Original_OU_ZC, 
                    decimal Original_OU_SL, 
                    decimal Original_OU_JY, 
                    string Original_OU_DESC, 
                    System.DateTime Original_OU_DATE, 
                    string Original_OU_ADMIN) {
            return this.Update(Original_OID, YG_OID, OU_TYPE, OU_ZC, OU_SL, OU_JY, OU_DESC, OU_DATE, OU_ADMIN, Original_OID, Original_YG_OID, Original_OU_TYPE, Original_OU_ZC, Original_OU_SL, Original_OU_JY, Original_OU_DESC, Original_OU_DATE, Original_OU_ADMIN);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MemberImportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MemberImportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MemberImport";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("ExcelNum", "ExcelNum");
            tableMapping.ColumnMappings.Add("ErrorDesc", "ErrorDesc");
            tableMapping.ColumnMappings.Add("FK_YouthGroup", "FK_YouthGroup");
            tableMapping.ColumnMappings.Add("FK_YouthGroup_FZ", "FK_YouthGroup_FZ");
            tableMapping.ColumnMappings.Add("Dept", "Dept");
            tableMapping.ColumnMappings.Add("WorkGroup", "WorkGroup");
            tableMapping.ColumnMappings.Add("Post", "Post");
            tableMapping.ColumnMappings.Add("HrCode", "HrCode");
            tableMapping.ColumnMappings.Add("HrType", "HrType");
            tableMapping.ColumnMappings.Add("HrStatus", "HrStatus");
            tableMapping.ColumnMappings.Add("EmpName", "EmpName");
            tableMapping.ColumnMappings.Add("EmpID", "EmpID");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("Birthday", "Birthday");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("ParttimeName", "ParttimeName");
            tableMapping.ColumnMappings.Add("JobDateTime", "JobDateTime");
            tableMapping.ColumnMappings.Add("ComDateTime", "ComDateTime");
            tableMapping.ColumnMappings.Add("Wedding", "Wedding");
            tableMapping.ColumnMappings.Add("NativePlace", "NativePlace");
            tableMapping.ColumnMappings.Add("Politics", "Politics");
            tableMapping.ColumnMappings.Add("PartyDate", "PartyDate");
            tableMapping.ColumnMappings.Add("Nation", "Nation");
            tableMapping.ColumnMappings.Add("House", "House");
            tableMapping.ColumnMappings.Add("SkillLevel", "SkillLevel");
            tableMapping.ColumnMappings.Add("FstSchoolExp", "FstSchoolExp");
            tableMapping.ColumnMappings.Add("FstDegree", "FstDegree");
            tableMapping.ColumnMappings.Add("LstSchoolExp", "LstSchoolExp");
            tableMapping.ColumnMappings.Add("LstDegree", "LstDegree");
            tableMapping.ColumnMappings.Add("FstSchool", "FstSchool");
            tableMapping.ColumnMappings.Add("FstProfession", "FstProfession");
            tableMapping.ColumnMappings.Add("FstGraduateDate", "FstGraduateDate");
            tableMapping.ColumnMappings.Add("LstSchool", "LstSchool");
            tableMapping.ColumnMappings.Add("LstProfession", "LstProfession");
            tableMapping.ColumnMappings.Add("LstGraduateDate", "LstGraduateDate");
            tableMapping.ColumnMappings.Add("ApplyParty", "ApplyParty");
            tableMapping.ColumnMappings.Add("ApplyPartyDate", "ApplyPartyDate");
            tableMapping.ColumnMappings.Add("VolunteerInfo", "VolunteerInfo");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("SpecialSkill", "SpecialSkill");
            tableMapping.ColumnMappings.Add("YouthChargeStd", "YouthChargeStd");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MemberImport] WHERE (([OID] = @Original_OID) AND ([ExcelNum] =" +
                " @Original_ExcelNum) AND ([ErrorDesc] = @Original_ErrorDesc) AND ([FK_YouthGroup" +
                "] = @Original_FK_YouthGroup) AND ([FK_YouthGroup_FZ] = @Original_FK_YouthGroup_F" +
                "Z) AND ([Dept] = @Original_Dept) AND ([WorkGroup] = @Original_WorkGroup) AND ([P" +
                "ost] = @Original_Post) AND ([HrCode] = @Original_HrCode) AND ([HrType] = @Origin" +
                "al_HrType) AND ([HrStatus] = @Original_HrStatus) AND ([EmpName] = @Original_EmpN" +
                "ame) AND ([EmpID] = @Original_EmpID) AND ([Sex] = @Original_Sex) AND ([Birthday]" +
                " = @Original_Birthday) AND ([Age] = @Original_Age) AND ([ParttimeName] = @Origin" +
                "al_ParttimeName) AND ([JobDateTime] = @Original_JobDateTime) AND ([ComDateTime] " +
                "= @Original_ComDateTime) AND ([Wedding] = @Original_Wedding) AND ([NativePlace] " +
                "= @Original_NativePlace) AND ([Politics] = @Original_Politics) AND ([PartyDate] " +
                "= @Original_PartyDate) AND ([Nation] = @Original_Nation) AND ([House] = @Origina" +
                "l_House) AND ([SkillLevel] = @Original_SkillLevel) AND ([FstSchoolExp] = @Origin" +
                "al_FstSchoolExp) AND ([FstDegree] = @Original_FstDegree) AND ([LstSchoolExp] = @" +
                "Original_LstSchoolExp) AND ([LstDegree] = @Original_LstDegree) AND ([FstSchool] " +
                "= @Original_FstSchool) AND ([FstProfession] = @Original_FstProfession) AND ([Fst" +
                "GraduateDate] = @Original_FstGraduateDate) AND ([LstSchool] = @Original_LstSchoo" +
                "l) AND ([LstProfession] = @Original_LstProfession) AND ([LstGraduateDate] = @Ori" +
                "ginal_LstGraduateDate) AND ([ApplyParty] = @Original_ApplyParty) AND ([ApplyPart" +
                "yDate] = @Original_ApplyPartyDate) AND ([VolunteerInfo] = @Original_VolunteerInf" +
                "o) AND ([Mobile] = @Original_Mobile) AND ([Email] = @Original_Email) AND ([Speci" +
                "alSkill] = @Original_SpecialSkill) AND ([YouthChargeStd] = @Original_YouthCharge" +
                "Std))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExcelNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcelNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ErrorDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ErrorDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FK_YouthGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FK_YouthGroup_FZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup_FZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dept", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Post", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParttimeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParttimeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wedding", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wedding", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NativePlace", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NativePlace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Politics", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Politics", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_House", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "House", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SkillLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkillLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchoolExp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchoolExp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstProfession", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstGraduateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstProfession", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstGraduateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApplyParty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyParty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApplyPartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyPartyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VolunteerInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerInfo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mobile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialSkill", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialSkill", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YouthChargeStd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouthChargeStd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MemberImport] ([OID], [ExcelNum], [ErrorDesc], [FK_YouthGroup]" +
                ", [FK_YouthGroup_FZ], [Dept], [WorkGroup], [Post], [HrCode], [HrType], [HrStatus" +
                "], [EmpName], [EmpID], [Sex], [Birthday], [Age], [ParttimeName], [JobDateTime], " +
                "[ComDateTime], [Wedding], [NativePlace], [Politics], [PartyDate], [Nation], [Hou" +
                "se], [SkillLevel], [FstSchoolExp], [FstDegree], [LstSchoolExp], [LstDegree], [Fs" +
                "tSchool], [FstProfession], [FstGraduateDate], [LstSchool], [LstProfession], [Lst" +
                "GraduateDate], [ApplyParty], [ApplyPartyDate], [VolunteerInfo], [Mobile], [Email" +
                "], [SpecialSkill], [YouthChargeStd]) VALUES (@OID, @ExcelNum, @ErrorDesc, @FK_Yo" +
                "uthGroup, @FK_YouthGroup_FZ, @Dept, @WorkGroup, @Post, @HrCode, @HrType, @HrStat" +
                "us, @EmpName, @EmpID, @Sex, @Birthday, @Age, @ParttimeName, @JobDateTime, @ComDa" +
                "teTime, @Wedding, @NativePlace, @Politics, @PartyDate, @Nation, @House, @SkillLe" +
                "vel, @FstSchoolExp, @FstDegree, @LstSchoolExp, @LstDegree, @FstSchool, @FstProfe" +
                "ssion, @FstGraduateDate, @LstSchool, @LstProfession, @LstGraduateDate, @ApplyPar" +
                "ty, @ApplyPartyDate, @VolunteerInfo, @Mobile, @Email, @SpecialSkill, @YouthCharg" +
                "eStd);\r\nSELECT OID, ExcelNum, ErrorDesc, FK_YouthGroup, FK_YouthGroup_FZ, Dept, " +
                "WorkGroup, Post, HrCode, HrType, HrStatus, EmpName, EmpID, Sex, Birthday, Age, P" +
                "arttimeName, JobDateTime, ComDateTime, Wedding, NativePlace, Politics, PartyDate" +
                ", Nation, House, SkillLevel, FstSchoolExp, FstDegree, LstSchoolExp, LstDegree, F" +
                "stSchool, FstProfession, FstGraduateDate, LstSchool, LstProfession, LstGraduateD" +
                "ate, ApplyParty, ApplyPartyDate, VolunteerInfo, Mobile, Email, SpecialSkill, You" +
                "thChargeStd FROM MemberImport WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcelNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcelNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ErrorDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ErrorDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FK_YouthGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FK_YouthGroup_FZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup_FZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dept", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Post", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParttimeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParttimeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wedding", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wedding", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NativePlace", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NativePlace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Politics", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Politics", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@House", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "House", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SkillLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkillLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchoolExp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchoolExp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstProfession", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstGraduateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstProfession", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstGraduateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplyParty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyParty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplyPartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyPartyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialSkill", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialSkill", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YouthChargeStd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouthChargeStd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MemberImport] SET [OID] = @OID, [ExcelNum] = @ExcelNum, [ErrorDesc]" +
                " = @ErrorDesc, [FK_YouthGroup] = @FK_YouthGroup, [FK_YouthGroup_FZ] = @FK_YouthG" +
                "roup_FZ, [Dept] = @Dept, [WorkGroup] = @WorkGroup, [Post] = @Post, [HrCode] = @H" +
                "rCode, [HrType] = @HrType, [HrStatus] = @HrStatus, [EmpName] = @EmpName, [EmpID]" +
                " = @EmpID, [Sex] = @Sex, [Birthday] = @Birthday, [Age] = @Age, [ParttimeName] = " +
                "@ParttimeName, [JobDateTime] = @JobDateTime, [ComDateTime] = @ComDateTime, [Wedd" +
                "ing] = @Wedding, [NativePlace] = @NativePlace, [Politics] = @Politics, [PartyDat" +
                "e] = @PartyDate, [Nation] = @Nation, [House] = @House, [SkillLevel] = @SkillLeve" +
                "l, [FstSchoolExp] = @FstSchoolExp, [FstDegree] = @FstDegree, [LstSchoolExp] = @L" +
                "stSchoolExp, [LstDegree] = @LstDegree, [FstSchool] = @FstSchool, [FstProfession]" +
                " = @FstProfession, [FstGraduateDate] = @FstGraduateDate, [LstSchool] = @LstSchoo" +
                "l, [LstProfession] = @LstProfession, [LstGraduateDate] = @LstGraduateDate, [Appl" +
                "yParty] = @ApplyParty, [ApplyPartyDate] = @ApplyPartyDate, [VolunteerInfo] = @Vo" +
                "lunteerInfo, [Mobile] = @Mobile, [Email] = @Email, [SpecialSkill] = @SpecialSkil" +
                "l, [YouthChargeStd] = @YouthChargeStd WHERE (([OID] = @Original_OID) AND ([Excel" +
                "Num] = @Original_ExcelNum) AND ([ErrorDesc] = @Original_ErrorDesc) AND ([FK_Yout" +
                "hGroup] = @Original_FK_YouthGroup) AND ([FK_YouthGroup_FZ] = @Original_FK_YouthG" +
                "roup_FZ) AND ([Dept] = @Original_Dept) AND ([WorkGroup] = @Original_WorkGroup) A" +
                "ND ([Post] = @Original_Post) AND ([HrCode] = @Original_HrCode) AND ([HrType] = @" +
                "Original_HrType) AND ([HrStatus] = @Original_HrStatus) AND ([EmpName] = @Origina" +
                "l_EmpName) AND ([EmpID] = @Original_EmpID) AND ([Sex] = @Original_Sex) AND ([Bir" +
                "thday] = @Original_Birthday) AND ([Age] = @Original_Age) AND ([ParttimeName] = @" +
                "Original_ParttimeName) AND ([JobDateTime] = @Original_JobDateTime) AND ([ComDate" +
                "Time] = @Original_ComDateTime) AND ([Wedding] = @Original_Wedding) AND ([NativeP" +
                "lace] = @Original_NativePlace) AND ([Politics] = @Original_Politics) AND ([Party" +
                "Date] = @Original_PartyDate) AND ([Nation] = @Original_Nation) AND ([House] = @O" +
                "riginal_House) AND ([SkillLevel] = @Original_SkillLevel) AND ([FstSchoolExp] = @" +
                "Original_FstSchoolExp) AND ([FstDegree] = @Original_FstDegree) AND ([LstSchoolEx" +
                "p] = @Original_LstSchoolExp) AND ([LstDegree] = @Original_LstDegree) AND ([FstSc" +
                "hool] = @Original_FstSchool) AND ([FstProfession] = @Original_FstProfession) AND" +
                " ([FstGraduateDate] = @Original_FstGraduateDate) AND ([LstSchool] = @Original_Ls" +
                "tSchool) AND ([LstProfession] = @Original_LstProfession) AND ([LstGraduateDate] " +
                "= @Original_LstGraduateDate) AND ([ApplyParty] = @Original_ApplyParty) AND ([App" +
                "lyPartyDate] = @Original_ApplyPartyDate) AND ([VolunteerInfo] = @Original_Volunt" +
                "eerInfo) AND ([Mobile] = @Original_Mobile) AND ([Email] = @Original_Email) AND (" +
                "[SpecialSkill] = @Original_SpecialSkill) AND ([YouthChargeStd] = @Original_Youth" +
                "ChargeStd));\r\nSELECT OID, ExcelNum, ErrorDesc, FK_YouthGroup, FK_YouthGroup_FZ, " +
                "Dept, WorkGroup, Post, HrCode, HrType, HrStatus, EmpName, EmpID, Sex, Birthday, " +
                "Age, ParttimeName, JobDateTime, ComDateTime, Wedding, NativePlace, Politics, Par" +
                "tyDate, Nation, House, SkillLevel, FstSchoolExp, FstDegree, LstSchoolExp, LstDeg" +
                "ree, FstSchool, FstProfession, FstGraduateDate, LstSchool, LstProfession, LstGra" +
                "duateDate, ApplyParty, ApplyPartyDate, VolunteerInfo, Mobile, Email, SpecialSkil" +
                "l, YouthChargeStd FROM MemberImport WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcelNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcelNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ErrorDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ErrorDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FK_YouthGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FK_YouthGroup_FZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup_FZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dept", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Post", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParttimeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParttimeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wedding", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wedding", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NativePlace", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NativePlace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Politics", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Politics", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@House", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "House", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SkillLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkillLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchoolExp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchoolExp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstProfession", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstGraduateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstProfession", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstGraduateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplyParty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyParty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplyPartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyPartyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialSkill", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialSkill", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YouthChargeStd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouthChargeStd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExcelNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcelNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ErrorDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ErrorDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FK_YouthGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FK_YouthGroup_FZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup_FZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dept", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Post", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParttimeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParttimeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wedding", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wedding", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NativePlace", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NativePlace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Politics", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Politics", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_House", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "House", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SkillLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkillLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchoolExp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchoolExp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstProfession", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstGraduateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstProfession", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstGraduateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApplyParty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyParty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApplyPartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyPartyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VolunteerInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerInfo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mobile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialSkill", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialSkill", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YouthChargeStd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouthChargeStd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT OID, ExcelNum, ErrorDesc, FK_YouthGroup, FK_YouthGroup_FZ, Dept, WorkGroup, Post, HrCode, HrType, HrStatus, EmpName, EmpID, Sex, Birthday, Age, ParttimeName, JobDateTime, ComDateTime, Wedding, NativePlace, Politics, PartyDate, Nation, House, SkillLevel, FstSchoolExp, FstDegree, LstSchoolExp, LstDegree, FstSchool, FstProfession, FstGraduateDate, LstSchool, LstProfession, LstGraduateDate, ApplyParty, ApplyPartyDate, VolunteerInfo, Mobile, Email, SpecialSkill, YouthChargeStd FROM dbo.MemberImport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.MemberImportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.MemberImportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.MemberImportDataTable dataTable = new YouthOneDS.MemberImportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.MemberImportDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "MemberImport");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_OID, 
                    int Original_ExcelNum, 
                    string Original_ErrorDesc, 
                    string Original_FK_YouthGroup, 
                    string Original_FK_YouthGroup_FZ, 
                    string Original_Dept, 
                    string Original_WorkGroup, 
                    string Original_Post, 
                    string Original_HrCode, 
                    string Original_HrType, 
                    string Original_HrStatus, 
                    string Original_EmpName, 
                    string Original_EmpID, 
                    string Original_Sex, 
                    System.DateTime Original_Birthday, 
                    int Original_Age, 
                    string Original_ParttimeName, 
                    System.DateTime Original_JobDateTime, 
                    System.DateTime Original_ComDateTime, 
                    string Original_Wedding, 
                    string Original_NativePlace, 
                    string Original_Politics, 
                    System.DateTime Original_PartyDate, 
                    string Original_Nation, 
                    string Original_House, 
                    string Original_SkillLevel, 
                    string Original_FstSchoolExp, 
                    string Original_FstDegree, 
                    string Original_LstSchoolExp, 
                    string Original_LstDegree, 
                    string Original_FstSchool, 
                    string Original_FstProfession, 
                    System.DateTime Original_FstGraduateDate, 
                    string Original_LstSchool, 
                    string Original_LstProfession, 
                    System.DateTime Original_LstGraduateDate, 
                    string Original_ApplyParty, 
                    System.DateTime Original_ApplyPartyDate, 
                    string Original_VolunteerInfo, 
                    string Original_Mobile, 
                    string Original_Email, 
                    string Original_SpecialSkill, 
                    int Original_YouthChargeStd) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ExcelNum));
            if ((Original_ErrorDesc == null)) {
                throw new global::System.ArgumentNullException("Original_ErrorDesc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ErrorDesc));
            }
            if ((Original_FK_YouthGroup == null)) {
                throw new global::System.ArgumentNullException("Original_FK_YouthGroup");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_FK_YouthGroup));
            }
            if ((Original_FK_YouthGroup_FZ == null)) {
                throw new global::System.ArgumentNullException("Original_FK_YouthGroup_FZ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_FK_YouthGroup_FZ));
            }
            if ((Original_Dept == null)) {
                throw new global::System.ArgumentNullException("Original_Dept");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Dept));
            }
            if ((Original_WorkGroup == null)) {
                throw new global::System.ArgumentNullException("Original_WorkGroup");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_WorkGroup));
            }
            if ((Original_Post == null)) {
                throw new global::System.ArgumentNullException("Original_Post");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Post));
            }
            if ((Original_HrCode == null)) {
                throw new global::System.ArgumentNullException("Original_HrCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_HrCode));
            }
            if ((Original_HrType == null)) {
                throw new global::System.ArgumentNullException("Original_HrType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_HrType));
            }
            if ((Original_HrStatus == null)) {
                throw new global::System.ArgumentNullException("Original_HrStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_HrStatus));
            }
            if ((Original_EmpName == null)) {
                throw new global::System.ArgumentNullException("Original_EmpName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_EmpName));
            }
            if ((Original_EmpID == null)) {
                throw new global::System.ArgumentNullException("Original_EmpID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_EmpID));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Sex));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_Birthday));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_Age));
            if ((Original_ParttimeName == null)) {
                throw new global::System.ArgumentNullException("Original_ParttimeName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_ParttimeName));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_JobDateTime));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_ComDateTime));
            if ((Original_Wedding == null)) {
                throw new global::System.ArgumentNullException("Original_Wedding");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Wedding));
            }
            if ((Original_NativePlace == null)) {
                throw new global::System.ArgumentNullException("Original_NativePlace");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_NativePlace));
            }
            if ((Original_Politics == null)) {
                throw new global::System.ArgumentNullException("Original_Politics");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Politics));
            }
            this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_PartyDate));
            if ((Original_Nation == null)) {
                throw new global::System.ArgumentNullException("Original_Nation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_Nation));
            }
            if ((Original_House == null)) {
                throw new global::System.ArgumentNullException("Original_House");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_House));
            }
            if ((Original_SkillLevel == null)) {
                throw new global::System.ArgumentNullException("Original_SkillLevel");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_SkillLevel));
            }
            if ((Original_FstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("Original_FstSchoolExp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_FstSchoolExp));
            }
            if ((Original_FstDegree == null)) {
                throw new global::System.ArgumentNullException("Original_FstDegree");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_FstDegree));
            }
            if ((Original_LstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("Original_LstSchoolExp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_LstSchoolExp));
            }
            if ((Original_LstDegree == null)) {
                throw new global::System.ArgumentNullException("Original_LstDegree");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_LstDegree));
            }
            if ((Original_FstSchool == null)) {
                throw new global::System.ArgumentNullException("Original_FstSchool");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_FstSchool));
            }
            if ((Original_FstProfession == null)) {
                throw new global::System.ArgumentNullException("Original_FstProfession");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_FstProfession));
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_FstGraduateDate));
            if ((Original_LstSchool == null)) {
                throw new global::System.ArgumentNullException("Original_LstSchool");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_LstSchool));
            }
            if ((Original_LstProfession == null)) {
                throw new global::System.ArgumentNullException("Original_LstProfession");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_LstProfession));
            }
            this.Adapter.DeleteCommand.Parameters[35].Value = ((System.DateTime)(Original_LstGraduateDate));
            if ((Original_ApplyParty == null)) {
                throw new global::System.ArgumentNullException("Original_ApplyParty");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_ApplyParty));
            }
            this.Adapter.DeleteCommand.Parameters[37].Value = ((System.DateTime)(Original_ApplyPartyDate));
            if ((Original_VolunteerInfo == null)) {
                throw new global::System.ArgumentNullException("Original_VolunteerInfo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_VolunteerInfo));
            }
            if ((Original_Mobile == null)) {
                throw new global::System.ArgumentNullException("Original_Mobile");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_Mobile));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_Email));
            }
            if ((Original_SpecialSkill == null)) {
                throw new global::System.ArgumentNullException("Original_SpecialSkill");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_SpecialSkill));
            }
            this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_YouthChargeStd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string OID, 
                    int ExcelNum, 
                    string ErrorDesc, 
                    string FK_YouthGroup, 
                    string FK_YouthGroup_FZ, 
                    string Dept, 
                    string WorkGroup, 
                    string Post, 
                    string HrCode, 
                    string HrType, 
                    string HrStatus, 
                    string EmpName, 
                    string EmpID, 
                    string Sex, 
                    System.DateTime Birthday, 
                    int Age, 
                    string ParttimeName, 
                    System.DateTime JobDateTime, 
                    System.DateTime ComDateTime, 
                    string Wedding, 
                    string NativePlace, 
                    string Politics, 
                    System.DateTime PartyDate, 
                    string Nation, 
                    string House, 
                    string SkillLevel, 
                    string FstSchoolExp, 
                    string FstDegree, 
                    string LstSchoolExp, 
                    string LstDegree, 
                    string FstSchool, 
                    string FstProfession, 
                    System.DateTime FstGraduateDate, 
                    string LstSchool, 
                    string LstProfession, 
                    System.DateTime LstGraduateDate, 
                    string ApplyParty, 
                    System.DateTime ApplyPartyDate, 
                    string VolunteerInfo, 
                    string Mobile, 
                    string Email, 
                    string SpecialSkill, 
                    int YouthChargeStd) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ExcelNum));
            if ((ErrorDesc == null)) {
                throw new global::System.ArgumentNullException("ErrorDesc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ErrorDesc));
            }
            if ((FK_YouthGroup == null)) {
                throw new global::System.ArgumentNullException("FK_YouthGroup");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(FK_YouthGroup));
            }
            if ((FK_YouthGroup_FZ == null)) {
                throw new global::System.ArgumentNullException("FK_YouthGroup_FZ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(FK_YouthGroup_FZ));
            }
            if ((Dept == null)) {
                throw new global::System.ArgumentNullException("Dept");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Dept));
            }
            if ((WorkGroup == null)) {
                throw new global::System.ArgumentNullException("WorkGroup");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(WorkGroup));
            }
            if ((Post == null)) {
                throw new global::System.ArgumentNullException("Post");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Post));
            }
            if ((HrCode == null)) {
                throw new global::System.ArgumentNullException("HrCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(HrCode));
            }
            if ((HrType == null)) {
                throw new global::System.ArgumentNullException("HrType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(HrType));
            }
            if ((HrStatus == null)) {
                throw new global::System.ArgumentNullException("HrStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(HrStatus));
            }
            if ((EmpName == null)) {
                throw new global::System.ArgumentNullException("EmpName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(EmpName));
            }
            if ((EmpID == null)) {
                throw new global::System.ArgumentNullException("EmpID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(EmpID));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Sex));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(Birthday));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Age));
            if ((ParttimeName == null)) {
                throw new global::System.ArgumentNullException("ParttimeName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ParttimeName));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(JobDateTime));
            this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(ComDateTime));
            if ((Wedding == null)) {
                throw new global::System.ArgumentNullException("Wedding");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Wedding));
            }
            if ((NativePlace == null)) {
                throw new global::System.ArgumentNullException("NativePlace");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(NativePlace));
            }
            if ((Politics == null)) {
                throw new global::System.ArgumentNullException("Politics");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Politics));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(PartyDate));
            if ((Nation == null)) {
                throw new global::System.ArgumentNullException("Nation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Nation));
            }
            if ((House == null)) {
                throw new global::System.ArgumentNullException("House");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(House));
            }
            if ((SkillLevel == null)) {
                throw new global::System.ArgumentNullException("SkillLevel");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(SkillLevel));
            }
            if ((FstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("FstSchoolExp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(FstSchoolExp));
            }
            if ((FstDegree == null)) {
                throw new global::System.ArgumentNullException("FstDegree");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(FstDegree));
            }
            if ((LstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("LstSchoolExp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(LstSchoolExp));
            }
            if ((LstDegree == null)) {
                throw new global::System.ArgumentNullException("LstDegree");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(LstDegree));
            }
            if ((FstSchool == null)) {
                throw new global::System.ArgumentNullException("FstSchool");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(FstSchool));
            }
            if ((FstProfession == null)) {
                throw new global::System.ArgumentNullException("FstProfession");
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(FstProfession));
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(FstGraduateDate));
            if ((LstSchool == null)) {
                throw new global::System.ArgumentNullException("LstSchool");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(LstSchool));
            }
            if ((LstProfession == null)) {
                throw new global::System.ArgumentNullException("LstProfession");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(LstProfession));
            }
            this.Adapter.InsertCommand.Parameters[35].Value = ((System.DateTime)(LstGraduateDate));
            if ((ApplyParty == null)) {
                throw new global::System.ArgumentNullException("ApplyParty");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(ApplyParty));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(ApplyPartyDate));
            if ((VolunteerInfo == null)) {
                throw new global::System.ArgumentNullException("VolunteerInfo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(VolunteerInfo));
            }
            if ((Mobile == null)) {
                throw new global::System.ArgumentNullException("Mobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(Mobile));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(Email));
            }
            if ((SpecialSkill == null)) {
                throw new global::System.ArgumentNullException("SpecialSkill");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(SpecialSkill));
            }
            this.Adapter.InsertCommand.Parameters[42].Value = ((int)(YouthChargeStd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string OID, 
                    int ExcelNum, 
                    string ErrorDesc, 
                    string FK_YouthGroup, 
                    string FK_YouthGroup_FZ, 
                    string Dept, 
                    string WorkGroup, 
                    string Post, 
                    string HrCode, 
                    string HrType, 
                    string HrStatus, 
                    string EmpName, 
                    string EmpID, 
                    string Sex, 
                    System.DateTime Birthday, 
                    int Age, 
                    string ParttimeName, 
                    System.DateTime JobDateTime, 
                    System.DateTime ComDateTime, 
                    string Wedding, 
                    string NativePlace, 
                    string Politics, 
                    System.DateTime PartyDate, 
                    string Nation, 
                    string House, 
                    string SkillLevel, 
                    string FstSchoolExp, 
                    string FstDegree, 
                    string LstSchoolExp, 
                    string LstDegree, 
                    string FstSchool, 
                    string FstProfession, 
                    System.DateTime FstGraduateDate, 
                    string LstSchool, 
                    string LstProfession, 
                    System.DateTime LstGraduateDate, 
                    string ApplyParty, 
                    System.DateTime ApplyPartyDate, 
                    string VolunteerInfo, 
                    string Mobile, 
                    string Email, 
                    string SpecialSkill, 
                    int YouthChargeStd, 
                    string Original_OID, 
                    int Original_ExcelNum, 
                    string Original_ErrorDesc, 
                    string Original_FK_YouthGroup, 
                    string Original_FK_YouthGroup_FZ, 
                    string Original_Dept, 
                    string Original_WorkGroup, 
                    string Original_Post, 
                    string Original_HrCode, 
                    string Original_HrType, 
                    string Original_HrStatus, 
                    string Original_EmpName, 
                    string Original_EmpID, 
                    string Original_Sex, 
                    System.DateTime Original_Birthday, 
                    int Original_Age, 
                    string Original_ParttimeName, 
                    System.DateTime Original_JobDateTime, 
                    System.DateTime Original_ComDateTime, 
                    string Original_Wedding, 
                    string Original_NativePlace, 
                    string Original_Politics, 
                    System.DateTime Original_PartyDate, 
                    string Original_Nation, 
                    string Original_House, 
                    string Original_SkillLevel, 
                    string Original_FstSchoolExp, 
                    string Original_FstDegree, 
                    string Original_LstSchoolExp, 
                    string Original_LstDegree, 
                    string Original_FstSchool, 
                    string Original_FstProfession, 
                    System.DateTime Original_FstGraduateDate, 
                    string Original_LstSchool, 
                    string Original_LstProfession, 
                    System.DateTime Original_LstGraduateDate, 
                    string Original_ApplyParty, 
                    System.DateTime Original_ApplyPartyDate, 
                    string Original_VolunteerInfo, 
                    string Original_Mobile, 
                    string Original_Email, 
                    string Original_SpecialSkill, 
                    int Original_YouthChargeStd) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ExcelNum));
            if ((ErrorDesc == null)) {
                throw new global::System.ArgumentNullException("ErrorDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ErrorDesc));
            }
            if ((FK_YouthGroup == null)) {
                throw new global::System.ArgumentNullException("FK_YouthGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(FK_YouthGroup));
            }
            if ((FK_YouthGroup_FZ == null)) {
                throw new global::System.ArgumentNullException("FK_YouthGroup_FZ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(FK_YouthGroup_FZ));
            }
            if ((Dept == null)) {
                throw new global::System.ArgumentNullException("Dept");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Dept));
            }
            if ((WorkGroup == null)) {
                throw new global::System.ArgumentNullException("WorkGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(WorkGroup));
            }
            if ((Post == null)) {
                throw new global::System.ArgumentNullException("Post");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Post));
            }
            if ((HrCode == null)) {
                throw new global::System.ArgumentNullException("HrCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(HrCode));
            }
            if ((HrType == null)) {
                throw new global::System.ArgumentNullException("HrType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(HrType));
            }
            if ((HrStatus == null)) {
                throw new global::System.ArgumentNullException("HrStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(HrStatus));
            }
            if ((EmpName == null)) {
                throw new global::System.ArgumentNullException("EmpName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(EmpName));
            }
            if ((EmpID == null)) {
                throw new global::System.ArgumentNullException("EmpID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(EmpID));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Sex));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Birthday));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Age));
            if ((ParttimeName == null)) {
                throw new global::System.ArgumentNullException("ParttimeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ParttimeName));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(JobDateTime));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(ComDateTime));
            if ((Wedding == null)) {
                throw new global::System.ArgumentNullException("Wedding");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Wedding));
            }
            if ((NativePlace == null)) {
                throw new global::System.ArgumentNullException("NativePlace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(NativePlace));
            }
            if ((Politics == null)) {
                throw new global::System.ArgumentNullException("Politics");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Politics));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(PartyDate));
            if ((Nation == null)) {
                throw new global::System.ArgumentNullException("Nation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Nation));
            }
            if ((House == null)) {
                throw new global::System.ArgumentNullException("House");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(House));
            }
            if ((SkillLevel == null)) {
                throw new global::System.ArgumentNullException("SkillLevel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(SkillLevel));
            }
            if ((FstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("FstSchoolExp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(FstSchoolExp));
            }
            if ((FstDegree == null)) {
                throw new global::System.ArgumentNullException("FstDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(FstDegree));
            }
            if ((LstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("LstSchoolExp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(LstSchoolExp));
            }
            if ((LstDegree == null)) {
                throw new global::System.ArgumentNullException("LstDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(LstDegree));
            }
            if ((FstSchool == null)) {
                throw new global::System.ArgumentNullException("FstSchool");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(FstSchool));
            }
            if ((FstProfession == null)) {
                throw new global::System.ArgumentNullException("FstProfession");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(FstProfession));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(FstGraduateDate));
            if ((LstSchool == null)) {
                throw new global::System.ArgumentNullException("LstSchool");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(LstSchool));
            }
            if ((LstProfession == null)) {
                throw new global::System.ArgumentNullException("LstProfession");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(LstProfession));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(LstGraduateDate));
            if ((ApplyParty == null)) {
                throw new global::System.ArgumentNullException("ApplyParty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(ApplyParty));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(ApplyPartyDate));
            if ((VolunteerInfo == null)) {
                throw new global::System.ArgumentNullException("VolunteerInfo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(VolunteerInfo));
            }
            if ((Mobile == null)) {
                throw new global::System.ArgumentNullException("Mobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Mobile));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Email));
            }
            if ((SpecialSkill == null)) {
                throw new global::System.ArgumentNullException("SpecialSkill");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(SpecialSkill));
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(YouthChargeStd));
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_OID));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_ExcelNum));
            if ((Original_ErrorDesc == null)) {
                throw new global::System.ArgumentNullException("Original_ErrorDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_ErrorDesc));
            }
            if ((Original_FK_YouthGroup == null)) {
                throw new global::System.ArgumentNullException("Original_FK_YouthGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_FK_YouthGroup));
            }
            if ((Original_FK_YouthGroup_FZ == null)) {
                throw new global::System.ArgumentNullException("Original_FK_YouthGroup_FZ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_FK_YouthGroup_FZ));
            }
            if ((Original_Dept == null)) {
                throw new global::System.ArgumentNullException("Original_Dept");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_Dept));
            }
            if ((Original_WorkGroup == null)) {
                throw new global::System.ArgumentNullException("Original_WorkGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_WorkGroup));
            }
            if ((Original_Post == null)) {
                throw new global::System.ArgumentNullException("Original_Post");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_Post));
            }
            if ((Original_HrCode == null)) {
                throw new global::System.ArgumentNullException("Original_HrCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_HrCode));
            }
            if ((Original_HrType == null)) {
                throw new global::System.ArgumentNullException("Original_HrType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_HrType));
            }
            if ((Original_HrStatus == null)) {
                throw new global::System.ArgumentNullException("Original_HrStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_HrStatus));
            }
            if ((Original_EmpName == null)) {
                throw new global::System.ArgumentNullException("Original_EmpName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_EmpName));
            }
            if ((Original_EmpID == null)) {
                throw new global::System.ArgumentNullException("Original_EmpID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_EmpID));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_Sex));
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_Birthday));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Original_Age));
            if ((Original_ParttimeName == null)) {
                throw new global::System.ArgumentNullException("Original_ParttimeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_ParttimeName));
            }
            this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(Original_JobDateTime));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_ComDateTime));
            if ((Original_Wedding == null)) {
                throw new global::System.ArgumentNullException("Original_Wedding");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_Wedding));
            }
            if ((Original_NativePlace == null)) {
                throw new global::System.ArgumentNullException("Original_NativePlace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_NativePlace));
            }
            if ((Original_Politics == null)) {
                throw new global::System.ArgumentNullException("Original_Politics");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_Politics));
            }
            this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(Original_PartyDate));
            if ((Original_Nation == null)) {
                throw new global::System.ArgumentNullException("Original_Nation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_Nation));
            }
            if ((Original_House == null)) {
                throw new global::System.ArgumentNullException("Original_House");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_House));
            }
            if ((Original_SkillLevel == null)) {
                throw new global::System.ArgumentNullException("Original_SkillLevel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_SkillLevel));
            }
            if ((Original_FstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("Original_FstSchoolExp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_FstSchoolExp));
            }
            if ((Original_FstDegree == null)) {
                throw new global::System.ArgumentNullException("Original_FstDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_FstDegree));
            }
            if ((Original_LstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("Original_LstSchoolExp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_LstSchoolExp));
            }
            if ((Original_LstDegree == null)) {
                throw new global::System.ArgumentNullException("Original_LstDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_LstDegree));
            }
            if ((Original_FstSchool == null)) {
                throw new global::System.ArgumentNullException("Original_FstSchool");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_FstSchool));
            }
            if ((Original_FstProfession == null)) {
                throw new global::System.ArgumentNullException("Original_FstProfession");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_FstProfession));
            }
            this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(Original_FstGraduateDate));
            if ((Original_LstSchool == null)) {
                throw new global::System.ArgumentNullException("Original_LstSchool");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_LstSchool));
            }
            if ((Original_LstProfession == null)) {
                throw new global::System.ArgumentNullException("Original_LstProfession");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_LstProfession));
            }
            this.Adapter.UpdateCommand.Parameters[78].Value = ((System.DateTime)(Original_LstGraduateDate));
            if ((Original_ApplyParty == null)) {
                throw new global::System.ArgumentNullException("Original_ApplyParty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_ApplyParty));
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((System.DateTime)(Original_ApplyPartyDate));
            if ((Original_VolunteerInfo == null)) {
                throw new global::System.ArgumentNullException("Original_VolunteerInfo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_VolunteerInfo));
            }
            if ((Original_Mobile == null)) {
                throw new global::System.ArgumentNullException("Original_Mobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_Mobile));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_Email));
            }
            if ((Original_SpecialSkill == null)) {
                throw new global::System.ArgumentNullException("Original_SpecialSkill");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_SpecialSkill));
            }
            this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(Original_YouthChargeStd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ExcelNum, 
                    string ErrorDesc, 
                    string FK_YouthGroup, 
                    string FK_YouthGroup_FZ, 
                    string Dept, 
                    string WorkGroup, 
                    string Post, 
                    string HrCode, 
                    string HrType, 
                    string HrStatus, 
                    string EmpName, 
                    string EmpID, 
                    string Sex, 
                    System.DateTime Birthday, 
                    int Age, 
                    string ParttimeName, 
                    System.DateTime JobDateTime, 
                    System.DateTime ComDateTime, 
                    string Wedding, 
                    string NativePlace, 
                    string Politics, 
                    System.DateTime PartyDate, 
                    string Nation, 
                    string House, 
                    string SkillLevel, 
                    string FstSchoolExp, 
                    string FstDegree, 
                    string LstSchoolExp, 
                    string LstDegree, 
                    string FstSchool, 
                    string FstProfession, 
                    System.DateTime FstGraduateDate, 
                    string LstSchool, 
                    string LstProfession, 
                    System.DateTime LstGraduateDate, 
                    string ApplyParty, 
                    System.DateTime ApplyPartyDate, 
                    string VolunteerInfo, 
                    string Mobile, 
                    string Email, 
                    string SpecialSkill, 
                    int YouthChargeStd, 
                    string Original_OID, 
                    int Original_ExcelNum, 
                    string Original_ErrorDesc, 
                    string Original_FK_YouthGroup, 
                    string Original_FK_YouthGroup_FZ, 
                    string Original_Dept, 
                    string Original_WorkGroup, 
                    string Original_Post, 
                    string Original_HrCode, 
                    string Original_HrType, 
                    string Original_HrStatus, 
                    string Original_EmpName, 
                    string Original_EmpID, 
                    string Original_Sex, 
                    System.DateTime Original_Birthday, 
                    int Original_Age, 
                    string Original_ParttimeName, 
                    System.DateTime Original_JobDateTime, 
                    System.DateTime Original_ComDateTime, 
                    string Original_Wedding, 
                    string Original_NativePlace, 
                    string Original_Politics, 
                    System.DateTime Original_PartyDate, 
                    string Original_Nation, 
                    string Original_House, 
                    string Original_SkillLevel, 
                    string Original_FstSchoolExp, 
                    string Original_FstDegree, 
                    string Original_LstSchoolExp, 
                    string Original_LstDegree, 
                    string Original_FstSchool, 
                    string Original_FstProfession, 
                    System.DateTime Original_FstGraduateDate, 
                    string Original_LstSchool, 
                    string Original_LstProfession, 
                    System.DateTime Original_LstGraduateDate, 
                    string Original_ApplyParty, 
                    System.DateTime Original_ApplyPartyDate, 
                    string Original_VolunteerInfo, 
                    string Original_Mobile, 
                    string Original_Email, 
                    string Original_SpecialSkill, 
                    int Original_YouthChargeStd) {
            return this.Update(Original_OID, ExcelNum, ErrorDesc, FK_YouthGroup, FK_YouthGroup_FZ, Dept, WorkGroup, Post, HrCode, HrType, HrStatus, EmpName, EmpID, Sex, Birthday, Age, ParttimeName, JobDateTime, ComDateTime, Wedding, NativePlace, Politics, PartyDate, Nation, House, SkillLevel, FstSchoolExp, FstDegree, LstSchoolExp, LstDegree, FstSchool, FstProfession, FstGraduateDate, LstSchool, LstProfession, LstGraduateDate, ApplyParty, ApplyPartyDate, VolunteerInfo, Mobile, Email, SpecialSkill, YouthChargeStd, Original_OID, Original_ExcelNum, Original_ErrorDesc, Original_FK_YouthGroup, Original_FK_YouthGroup_FZ, Original_Dept, Original_WorkGroup, Original_Post, Original_HrCode, Original_HrType, Original_HrStatus, Original_EmpName, Original_EmpID, Original_Sex, Original_Birthday, Original_Age, Original_ParttimeName, Original_JobDateTime, Original_ComDateTime, Original_Wedding, Original_NativePlace, Original_Politics, Original_PartyDate, Original_Nation, Original_House, Original_SkillLevel, Original_FstSchoolExp, Original_FstDegree, Original_LstSchoolExp, Original_LstDegree, Original_FstSchool, Original_FstProfession, Original_FstGraduateDate, Original_LstSchool, Original_LstProfession, Original_LstGraduateDate, Original_ApplyParty, Original_ApplyPartyDate, Original_VolunteerInfo, Original_Mobile, Original_Email, Original_SpecialSkill, Original_YouthChargeStd);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MemberTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MemberTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Member";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("FK_YouthGroup", "FK_YouthGroup");
            tableMapping.ColumnMappings.Add("FK_YouthGroup_FZ", "FK_YouthGroup_FZ");
            tableMapping.ColumnMappings.Add("Dept", "Dept");
            tableMapping.ColumnMappings.Add("WorkGroup", "WorkGroup");
            tableMapping.ColumnMappings.Add("Post", "Post");
            tableMapping.ColumnMappings.Add("HrCode", "HrCode");
            tableMapping.ColumnMappings.Add("HrType", "HrType");
            tableMapping.ColumnMappings.Add("HrStatus", "HrStatus");
            tableMapping.ColumnMappings.Add("EmpName", "EmpName");
            tableMapping.ColumnMappings.Add("EmpID", "EmpID");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("Birthday", "Birthday");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("ParttimeName", "ParttimeName");
            tableMapping.ColumnMappings.Add("JobDateTime", "JobDateTime");
            tableMapping.ColumnMappings.Add("ComDateTime", "ComDateTime");
            tableMapping.ColumnMappings.Add("Wedding", "Wedding");
            tableMapping.ColumnMappings.Add("NativePlace", "NativePlace");
            tableMapping.ColumnMappings.Add("Politics", "Politics");
            tableMapping.ColumnMappings.Add("PartyDate", "PartyDate");
            tableMapping.ColumnMappings.Add("Nation", "Nation");
            tableMapping.ColumnMappings.Add("House", "House");
            tableMapping.ColumnMappings.Add("SkillLevel", "SkillLevel");
            tableMapping.ColumnMappings.Add("FstSchoolExp", "FstSchoolExp");
            tableMapping.ColumnMappings.Add("FstDegree", "FstDegree");
            tableMapping.ColumnMappings.Add("LstSchoolExp", "LstSchoolExp");
            tableMapping.ColumnMappings.Add("LstDegree", "LstDegree");
            tableMapping.ColumnMappings.Add("FstSchool", "FstSchool");
            tableMapping.ColumnMappings.Add("FstProfession", "FstProfession");
            tableMapping.ColumnMappings.Add("FstGraduateDate", "FstGraduateDate");
            tableMapping.ColumnMappings.Add("LstSchool", "LstSchool");
            tableMapping.ColumnMappings.Add("LstProfession", "LstProfession");
            tableMapping.ColumnMappings.Add("LstGraduateDate", "LstGraduateDate");
            tableMapping.ColumnMappings.Add("ApplyParty", "ApplyParty");
            tableMapping.ColumnMappings.Add("ApplyPartyDate", "ApplyPartyDate");
            tableMapping.ColumnMappings.Add("VolunteerInfo", "VolunteerInfo");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("SpecialSkill", "SpecialSkill");
            tableMapping.ColumnMappings.Add("YouthChargeStd", "YouthChargeStd");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Member] WHERE (([OID] = @Original_OID) AND ([FK_YouthGroup] = " +
                "@Original_FK_YouthGroup) AND ([FK_YouthGroup_FZ] = @Original_FK_YouthGroup_FZ) A" +
                "ND ([Dept] = @Original_Dept) AND ([WorkGroup] = @Original_WorkGroup) AND ([Post]" +
                " = @Original_Post) AND ([HrCode] = @Original_HrCode) AND ([HrType] = @Original_H" +
                "rType) AND ([HrStatus] = @Original_HrStatus) AND ([EmpName] = @Original_EmpName)" +
                " AND ([EmpID] = @Original_EmpID) AND ([Sex] = @Original_Sex) AND ([Birthday] = @" +
                "Original_Birthday) AND ([Age] = @Original_Age) AND ([ParttimeName] = @Original_P" +
                "arttimeName) AND ([JobDateTime] = @Original_JobDateTime) AND ([ComDateTime] = @O" +
                "riginal_ComDateTime) AND ([Wedding] = @Original_Wedding) AND ([NativePlace] = @O" +
                "riginal_NativePlace) AND ([Politics] = @Original_Politics) AND ([PartyDate] = @O" +
                "riginal_PartyDate) AND ([Nation] = @Original_Nation) AND ([House] = @Original_Ho" +
                "use) AND ([SkillLevel] = @Original_SkillLevel) AND ([FstSchoolExp] = @Original_F" +
                "stSchoolExp) AND ([FstDegree] = @Original_FstDegree) AND ([LstSchoolExp] = @Orig" +
                "inal_LstSchoolExp) AND ([LstDegree] = @Original_LstDegree) AND ([FstSchool] = @O" +
                "riginal_FstSchool) AND ([FstProfession] = @Original_FstProfession) AND ([FstGrad" +
                "uateDate] = @Original_FstGraduateDate) AND ([LstSchool] = @Original_LstSchool) A" +
                "ND ([LstProfession] = @Original_LstProfession) AND ([LstGraduateDate] = @Origina" +
                "l_LstGraduateDate) AND ([ApplyParty] = @Original_ApplyParty) AND ([ApplyPartyDat" +
                "e] = @Original_ApplyPartyDate) AND ([VolunteerInfo] = @Original_VolunteerInfo) A" +
                "ND ([Mobile] = @Original_Mobile) AND ([Email] = @Original_Email) AND ([SpecialSk" +
                "ill] = @Original_SpecialSkill) AND ([YouthChargeStd] = @Original_YouthChargeStd)" +
                ")";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FK_YouthGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FK_YouthGroup_FZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup_FZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dept", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Post", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParttimeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParttimeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wedding", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wedding", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NativePlace", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NativePlace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Politics", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Politics", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_House", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "House", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SkillLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkillLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchoolExp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchoolExp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstProfession", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstGraduateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstProfession", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstGraduateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApplyParty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyParty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApplyPartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyPartyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VolunteerInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerInfo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mobile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialSkill", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialSkill", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YouthChargeStd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouthChargeStd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Member] ([OID], [FK_YouthGroup], [FK_YouthGroup_FZ], [Dept], [" +
                "WorkGroup], [Post], [HrCode], [HrType], [HrStatus], [EmpName], [EmpID], [Sex], [" +
                "Birthday], [Age], [ParttimeName], [JobDateTime], [ComDateTime], [Wedding], [Nati" +
                "vePlace], [Politics], [PartyDate], [Nation], [House], [SkillLevel], [FstSchoolEx" +
                "p], [FstDegree], [LstSchoolExp], [LstDegree], [FstSchool], [FstProfession], [Fst" +
                "GraduateDate], [LstSchool], [LstProfession], [LstGraduateDate], [ApplyParty], [A" +
                "pplyPartyDate], [VolunteerInfo], [Mobile], [Email], [SpecialSkill], [YouthCharge" +
                "Std]) VALUES (@OID, @FK_YouthGroup, @FK_YouthGroup_FZ, @Dept, @WorkGroup, @Post," +
                " @HrCode, @HrType, @HrStatus, @EmpName, @EmpID, @Sex, @Birthday, @Age, @Parttime" +
                "Name, @JobDateTime, @ComDateTime, @Wedding, @NativePlace, @Politics, @PartyDate," +
                " @Nation, @House, @SkillLevel, @FstSchoolExp, @FstDegree, @LstSchoolExp, @LstDeg" +
                "ree, @FstSchool, @FstProfession, @FstGraduateDate, @LstSchool, @LstProfession, @" +
                "LstGraduateDate, @ApplyParty, @ApplyPartyDate, @VolunteerInfo, @Mobile, @Email, " +
                "@SpecialSkill, @YouthChargeStd);\r\nSELECT OID, FK_YouthGroup, FK_YouthGroup_FZ, D" +
                "ept, WorkGroup, Post, HrCode, HrType, HrStatus, EmpName, EmpID, Sex, Birthday, A" +
                "ge, ParttimeName, JobDateTime, ComDateTime, Wedding, NativePlace, Politics, Part" +
                "yDate, Nation, House, SkillLevel, FstSchoolExp, FstDegree, LstSchoolExp, LstDegr" +
                "ee, FstSchool, FstProfession, FstGraduateDate, LstSchool, LstProfession, LstGrad" +
                "uateDate, ApplyParty, ApplyPartyDate, VolunteerInfo, Mobile, Email, SpecialSkill" +
                ", YouthChargeStd FROM Member WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FK_YouthGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FK_YouthGroup_FZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup_FZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dept", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Post", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParttimeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParttimeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wedding", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wedding", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NativePlace", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NativePlace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Politics", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Politics", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@House", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "House", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SkillLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkillLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchoolExp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchoolExp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstProfession", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstGraduateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstProfession", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstGraduateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplyParty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyParty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplyPartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyPartyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialSkill", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialSkill", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YouthChargeStd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouthChargeStd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Member] SET [OID] = @OID, [FK_YouthGroup] = @FK_YouthGroup, [FK_You" +
                "thGroup_FZ] = @FK_YouthGroup_FZ, [Dept] = @Dept, [WorkGroup] = @WorkGroup, [Post" +
                "] = @Post, [HrCode] = @HrCode, [HrType] = @HrType, [HrStatus] = @HrStatus, [EmpN" +
                "ame] = @EmpName, [EmpID] = @EmpID, [Sex] = @Sex, [Birthday] = @Birthday, [Age] =" +
                " @Age, [ParttimeName] = @ParttimeName, [JobDateTime] = @JobDateTime, [ComDateTim" +
                "e] = @ComDateTime, [Wedding] = @Wedding, [NativePlace] = @NativePlace, [Politics" +
                "] = @Politics, [PartyDate] = @PartyDate, [Nation] = @Nation, [House] = @House, [" +
                "SkillLevel] = @SkillLevel, [FstSchoolExp] = @FstSchoolExp, [FstDegree] = @FstDeg" +
                "ree, [LstSchoolExp] = @LstSchoolExp, [LstDegree] = @LstDegree, [FstSchool] = @Fs" +
                "tSchool, [FstProfession] = @FstProfession, [FstGraduateDate] = @FstGraduateDate," +
                " [LstSchool] = @LstSchool, [LstProfession] = @LstProfession, [LstGraduateDate] =" +
                " @LstGraduateDate, [ApplyParty] = @ApplyParty, [ApplyPartyDate] = @ApplyPartyDat" +
                "e, [VolunteerInfo] = @VolunteerInfo, [Mobile] = @Mobile, [Email] = @Email, [Spec" +
                "ialSkill] = @SpecialSkill, [YouthChargeStd] = @YouthChargeStd WHERE (([OID] = @O" +
                "riginal_OID) AND ([FK_YouthGroup] = @Original_FK_YouthGroup) AND ([FK_YouthGroup" +
                "_FZ] = @Original_FK_YouthGroup_FZ) AND ([Dept] = @Original_Dept) AND ([WorkGroup" +
                "] = @Original_WorkGroup) AND ([Post] = @Original_Post) AND ([HrCode] = @Original" +
                "_HrCode) AND ([HrType] = @Original_HrType) AND ([HrStatus] = @Original_HrStatus)" +
                " AND ([EmpName] = @Original_EmpName) AND ([EmpID] = @Original_EmpID) AND ([Sex] " +
                "= @Original_Sex) AND ([Birthday] = @Original_Birthday) AND ([Age] = @Original_Ag" +
                "e) AND ([ParttimeName] = @Original_ParttimeName) AND ([JobDateTime] = @Original_" +
                "JobDateTime) AND ([ComDateTime] = @Original_ComDateTime) AND ([Wedding] = @Origi" +
                "nal_Wedding) AND ([NativePlace] = @Original_NativePlace) AND ([Politics] = @Orig" +
                "inal_Politics) AND ([PartyDate] = @Original_PartyDate) AND ([Nation] = @Original" +
                "_Nation) AND ([House] = @Original_House) AND ([SkillLevel] = @Original_SkillLeve" +
                "l) AND ([FstSchoolExp] = @Original_FstSchoolExp) AND ([FstDegree] = @Original_Fs" +
                "tDegree) AND ([LstSchoolExp] = @Original_LstSchoolExp) AND ([LstDegree] = @Origi" +
                "nal_LstDegree) AND ([FstSchool] = @Original_FstSchool) AND ([FstProfession] = @O" +
                "riginal_FstProfession) AND ([FstGraduateDate] = @Original_FstGraduateDate) AND (" +
                "[LstSchool] = @Original_LstSchool) AND ([LstProfession] = @Original_LstProfessio" +
                "n) AND ([LstGraduateDate] = @Original_LstGraduateDate) AND ([ApplyParty] = @Orig" +
                "inal_ApplyParty) AND ([ApplyPartyDate] = @Original_ApplyPartyDate) AND ([Volunte" +
                "erInfo] = @Original_VolunteerInfo) AND ([Mobile] = @Original_Mobile) AND ([Email" +
                "] = @Original_Email) AND ([SpecialSkill] = @Original_SpecialSkill) AND ([YouthCh" +
                "argeStd] = @Original_YouthChargeStd));\r\nSELECT OID, FK_YouthGroup, FK_YouthGroup" +
                "_FZ, Dept, WorkGroup, Post, HrCode, HrType, HrStatus, EmpName, EmpID, Sex, Birth" +
                "day, Age, ParttimeName, JobDateTime, ComDateTime, Wedding, NativePlace, Politics" +
                ", PartyDate, Nation, House, SkillLevel, FstSchoolExp, FstDegree, LstSchoolExp, L" +
                "stDegree, FstSchool, FstProfession, FstGraduateDate, LstSchool, LstProfession, L" +
                "stGraduateDate, ApplyParty, ApplyPartyDate, VolunteerInfo, Mobile, Email, Specia" +
                "lSkill, YouthChargeStd FROM Member WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FK_YouthGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FK_YouthGroup_FZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup_FZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dept", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Post", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HrStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParttimeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParttimeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wedding", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wedding", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NativePlace", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NativePlace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Politics", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Politics", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@House", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "House", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SkillLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkillLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchoolExp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchoolExp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstDegree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstProfession", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstGraduateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchool", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstProfession", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstGraduateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplyParty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyParty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplyPartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyPartyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialSkill", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialSkill", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YouthChargeStd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouthChargeStd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FK_YouthGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FK_YouthGroup_FZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FK_YouthGroup_FZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dept", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dept", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkGroup", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Post", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HrStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HrStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParttimeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParttimeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wedding", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wedding", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NativePlace", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NativePlace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Politics", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Politics", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_House", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "House", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SkillLevel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SkillLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchoolExp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstSchoolExp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchoolExp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstDegree", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstDegree", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstSchool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstProfession", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FstGraduateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstSchool", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstSchool", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstProfession", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstProfession", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LstGraduateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LstGraduateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApplyParty", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyParty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApplyPartyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApplyPartyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VolunteerInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerInfo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mobile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialSkill", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialSkill", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YouthChargeStd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouthChargeStd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT OID, FK_YouthGroup, FK_YouthGroup_FZ, Dept, WorkGroup, Post, HrCode, HrType, HrStatus, EmpName, EmpID, Sex, Birthday, Age, ParttimeName, JobDateTime, ComDateTime, Wedding, NativePlace, Politics, PartyDate, Nation, House, SkillLevel, FstSchoolExp, FstDegree, LstSchoolExp, LstDegree, FstSchool, FstProfession, FstGraduateDate, LstSchool, LstProfession, LstGraduateDate, ApplyParty, ApplyPartyDate, VolunteerInfo, Mobile, Email, SpecialSkill, YouthChargeStd FROM dbo.Member";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.MemberDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.MemberDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.MemberDataTable dataTable = new YouthOneDS.MemberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.MemberDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "Member");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_OID, 
                    string Original_FK_YouthGroup, 
                    string Original_FK_YouthGroup_FZ, 
                    string Original_Dept, 
                    string Original_WorkGroup, 
                    string Original_Post, 
                    string Original_HrCode, 
                    string Original_HrType, 
                    string Original_HrStatus, 
                    string Original_EmpName, 
                    string Original_EmpID, 
                    string Original_Sex, 
                    System.DateTime Original_Birthday, 
                    int Original_Age, 
                    string Original_ParttimeName, 
                    System.DateTime Original_JobDateTime, 
                    System.DateTime Original_ComDateTime, 
                    string Original_Wedding, 
                    string Original_NativePlace, 
                    string Original_Politics, 
                    System.DateTime Original_PartyDate, 
                    string Original_Nation, 
                    string Original_House, 
                    string Original_SkillLevel, 
                    string Original_FstSchoolExp, 
                    string Original_FstDegree, 
                    string Original_LstSchoolExp, 
                    string Original_LstDegree, 
                    string Original_FstSchool, 
                    string Original_FstProfession, 
                    System.DateTime Original_FstGraduateDate, 
                    string Original_LstSchool, 
                    string Original_LstProfession, 
                    System.DateTime Original_LstGraduateDate, 
                    string Original_ApplyParty, 
                    System.DateTime Original_ApplyPartyDate, 
                    string Original_VolunteerInfo, 
                    string Original_Mobile, 
                    string Original_Email, 
                    string Original_SpecialSkill, 
                    int Original_YouthChargeStd) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            if ((Original_FK_YouthGroup == null)) {
                throw new global::System.ArgumentNullException("Original_FK_YouthGroup");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FK_YouthGroup));
            }
            if ((Original_FK_YouthGroup_FZ == null)) {
                throw new global::System.ArgumentNullException("Original_FK_YouthGroup_FZ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FK_YouthGroup_FZ));
            }
            if ((Original_Dept == null)) {
                throw new global::System.ArgumentNullException("Original_Dept");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Dept));
            }
            if ((Original_WorkGroup == null)) {
                throw new global::System.ArgumentNullException("Original_WorkGroup");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_WorkGroup));
            }
            if ((Original_Post == null)) {
                throw new global::System.ArgumentNullException("Original_Post");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Post));
            }
            if ((Original_HrCode == null)) {
                throw new global::System.ArgumentNullException("Original_HrCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_HrCode));
            }
            if ((Original_HrType == null)) {
                throw new global::System.ArgumentNullException("Original_HrType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_HrType));
            }
            if ((Original_HrStatus == null)) {
                throw new global::System.ArgumentNullException("Original_HrStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_HrStatus));
            }
            if ((Original_EmpName == null)) {
                throw new global::System.ArgumentNullException("Original_EmpName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_EmpName));
            }
            if ((Original_EmpID == null)) {
                throw new global::System.ArgumentNullException("Original_EmpID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_EmpID));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Sex));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_Birthday));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_Age));
            if ((Original_ParttimeName == null)) {
                throw new global::System.ArgumentNullException("Original_ParttimeName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_ParttimeName));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_JobDateTime));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_ComDateTime));
            if ((Original_Wedding == null)) {
                throw new global::System.ArgumentNullException("Original_Wedding");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Wedding));
            }
            if ((Original_NativePlace == null)) {
                throw new global::System.ArgumentNullException("Original_NativePlace");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_NativePlace));
            }
            if ((Original_Politics == null)) {
                throw new global::System.ArgumentNullException("Original_Politics");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Politics));
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_PartyDate));
            if ((Original_Nation == null)) {
                throw new global::System.ArgumentNullException("Original_Nation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Nation));
            }
            if ((Original_House == null)) {
                throw new global::System.ArgumentNullException("Original_House");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_House));
            }
            if ((Original_SkillLevel == null)) {
                throw new global::System.ArgumentNullException("Original_SkillLevel");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_SkillLevel));
            }
            if ((Original_FstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("Original_FstSchoolExp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_FstSchoolExp));
            }
            if ((Original_FstDegree == null)) {
                throw new global::System.ArgumentNullException("Original_FstDegree");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_FstDegree));
            }
            if ((Original_LstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("Original_LstSchoolExp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_LstSchoolExp));
            }
            if ((Original_LstDegree == null)) {
                throw new global::System.ArgumentNullException("Original_LstDegree");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_LstDegree));
            }
            if ((Original_FstSchool == null)) {
                throw new global::System.ArgumentNullException("Original_FstSchool");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_FstSchool));
            }
            if ((Original_FstProfession == null)) {
                throw new global::System.ArgumentNullException("Original_FstProfession");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_FstProfession));
            }
            this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_FstGraduateDate));
            if ((Original_LstSchool == null)) {
                throw new global::System.ArgumentNullException("Original_LstSchool");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_LstSchool));
            }
            if ((Original_LstProfession == null)) {
                throw new global::System.ArgumentNullException("Original_LstProfession");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_LstProfession));
            }
            this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_LstGraduateDate));
            if ((Original_ApplyParty == null)) {
                throw new global::System.ArgumentNullException("Original_ApplyParty");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_ApplyParty));
            }
            this.Adapter.DeleteCommand.Parameters[35].Value = ((System.DateTime)(Original_ApplyPartyDate));
            if ((Original_VolunteerInfo == null)) {
                throw new global::System.ArgumentNullException("Original_VolunteerInfo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_VolunteerInfo));
            }
            if ((Original_Mobile == null)) {
                throw new global::System.ArgumentNullException("Original_Mobile");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_Mobile));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_Email));
            }
            if ((Original_SpecialSkill == null)) {
                throw new global::System.ArgumentNullException("Original_SpecialSkill");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_SpecialSkill));
            }
            this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_YouthChargeStd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string OID, 
                    string FK_YouthGroup, 
                    string FK_YouthGroup_FZ, 
                    string Dept, 
                    string WorkGroup, 
                    string Post, 
                    string HrCode, 
                    string HrType, 
                    string HrStatus, 
                    string EmpName, 
                    string EmpID, 
                    string Sex, 
                    System.DateTime Birthday, 
                    int Age, 
                    string ParttimeName, 
                    System.DateTime JobDateTime, 
                    System.DateTime ComDateTime, 
                    string Wedding, 
                    string NativePlace, 
                    string Politics, 
                    System.DateTime PartyDate, 
                    string Nation, 
                    string House, 
                    string SkillLevel, 
                    string FstSchoolExp, 
                    string FstDegree, 
                    string LstSchoolExp, 
                    string LstDegree, 
                    string FstSchool, 
                    string FstProfession, 
                    System.DateTime FstGraduateDate, 
                    string LstSchool, 
                    string LstProfession, 
                    System.DateTime LstGraduateDate, 
                    string ApplyParty, 
                    System.DateTime ApplyPartyDate, 
                    string VolunteerInfo, 
                    string Mobile, 
                    string Email, 
                    string SpecialSkill, 
                    int YouthChargeStd) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((FK_YouthGroup == null)) {
                throw new global::System.ArgumentNullException("FK_YouthGroup");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FK_YouthGroup));
            }
            if ((FK_YouthGroup_FZ == null)) {
                throw new global::System.ArgumentNullException("FK_YouthGroup_FZ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FK_YouthGroup_FZ));
            }
            if ((Dept == null)) {
                throw new global::System.ArgumentNullException("Dept");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Dept));
            }
            if ((WorkGroup == null)) {
                throw new global::System.ArgumentNullException("WorkGroup");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(WorkGroup));
            }
            if ((Post == null)) {
                throw new global::System.ArgumentNullException("Post");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Post));
            }
            if ((HrCode == null)) {
                throw new global::System.ArgumentNullException("HrCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(HrCode));
            }
            if ((HrType == null)) {
                throw new global::System.ArgumentNullException("HrType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(HrType));
            }
            if ((HrStatus == null)) {
                throw new global::System.ArgumentNullException("HrStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(HrStatus));
            }
            if ((EmpName == null)) {
                throw new global::System.ArgumentNullException("EmpName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(EmpName));
            }
            if ((EmpID == null)) {
                throw new global::System.ArgumentNullException("EmpID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(EmpID));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Sex));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(Birthday));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(Age));
            if ((ParttimeName == null)) {
                throw new global::System.ArgumentNullException("ParttimeName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ParttimeName));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(JobDateTime));
            this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(ComDateTime));
            if ((Wedding == null)) {
                throw new global::System.ArgumentNullException("Wedding");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Wedding));
            }
            if ((NativePlace == null)) {
                throw new global::System.ArgumentNullException("NativePlace");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(NativePlace));
            }
            if ((Politics == null)) {
                throw new global::System.ArgumentNullException("Politics");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Politics));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(PartyDate));
            if ((Nation == null)) {
                throw new global::System.ArgumentNullException("Nation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Nation));
            }
            if ((House == null)) {
                throw new global::System.ArgumentNullException("House");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(House));
            }
            if ((SkillLevel == null)) {
                throw new global::System.ArgumentNullException("SkillLevel");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(SkillLevel));
            }
            if ((FstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("FstSchoolExp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(FstSchoolExp));
            }
            if ((FstDegree == null)) {
                throw new global::System.ArgumentNullException("FstDegree");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(FstDegree));
            }
            if ((LstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("LstSchoolExp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(LstSchoolExp));
            }
            if ((LstDegree == null)) {
                throw new global::System.ArgumentNullException("LstDegree");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(LstDegree));
            }
            if ((FstSchool == null)) {
                throw new global::System.ArgumentNullException("FstSchool");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(FstSchool));
            }
            if ((FstProfession == null)) {
                throw new global::System.ArgumentNullException("FstProfession");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(FstProfession));
            }
            this.Adapter.InsertCommand.Parameters[30].Value = ((System.DateTime)(FstGraduateDate));
            if ((LstSchool == null)) {
                throw new global::System.ArgumentNullException("LstSchool");
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(LstSchool));
            }
            if ((LstProfession == null)) {
                throw new global::System.ArgumentNullException("LstProfession");
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(LstProfession));
            }
            this.Adapter.InsertCommand.Parameters[33].Value = ((System.DateTime)(LstGraduateDate));
            if ((ApplyParty == null)) {
                throw new global::System.ArgumentNullException("ApplyParty");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(ApplyParty));
            }
            this.Adapter.InsertCommand.Parameters[35].Value = ((System.DateTime)(ApplyPartyDate));
            if ((VolunteerInfo == null)) {
                throw new global::System.ArgumentNullException("VolunteerInfo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(VolunteerInfo));
            }
            if ((Mobile == null)) {
                throw new global::System.ArgumentNullException("Mobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(Mobile));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(Email));
            }
            if ((SpecialSkill == null)) {
                throw new global::System.ArgumentNullException("SpecialSkill");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(SpecialSkill));
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((int)(YouthChargeStd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string OID, 
                    string FK_YouthGroup, 
                    string FK_YouthGroup_FZ, 
                    string Dept, 
                    string WorkGroup, 
                    string Post, 
                    string HrCode, 
                    string HrType, 
                    string HrStatus, 
                    string EmpName, 
                    string EmpID, 
                    string Sex, 
                    System.DateTime Birthday, 
                    int Age, 
                    string ParttimeName, 
                    System.DateTime JobDateTime, 
                    System.DateTime ComDateTime, 
                    string Wedding, 
                    string NativePlace, 
                    string Politics, 
                    System.DateTime PartyDate, 
                    string Nation, 
                    string House, 
                    string SkillLevel, 
                    string FstSchoolExp, 
                    string FstDegree, 
                    string LstSchoolExp, 
                    string LstDegree, 
                    string FstSchool, 
                    string FstProfession, 
                    System.DateTime FstGraduateDate, 
                    string LstSchool, 
                    string LstProfession, 
                    System.DateTime LstGraduateDate, 
                    string ApplyParty, 
                    System.DateTime ApplyPartyDate, 
                    string VolunteerInfo, 
                    string Mobile, 
                    string Email, 
                    string SpecialSkill, 
                    int YouthChargeStd, 
                    string Original_OID, 
                    string Original_FK_YouthGroup, 
                    string Original_FK_YouthGroup_FZ, 
                    string Original_Dept, 
                    string Original_WorkGroup, 
                    string Original_Post, 
                    string Original_HrCode, 
                    string Original_HrType, 
                    string Original_HrStatus, 
                    string Original_EmpName, 
                    string Original_EmpID, 
                    string Original_Sex, 
                    System.DateTime Original_Birthday, 
                    int Original_Age, 
                    string Original_ParttimeName, 
                    System.DateTime Original_JobDateTime, 
                    System.DateTime Original_ComDateTime, 
                    string Original_Wedding, 
                    string Original_NativePlace, 
                    string Original_Politics, 
                    System.DateTime Original_PartyDate, 
                    string Original_Nation, 
                    string Original_House, 
                    string Original_SkillLevel, 
                    string Original_FstSchoolExp, 
                    string Original_FstDegree, 
                    string Original_LstSchoolExp, 
                    string Original_LstDegree, 
                    string Original_FstSchool, 
                    string Original_FstProfession, 
                    System.DateTime Original_FstGraduateDate, 
                    string Original_LstSchool, 
                    string Original_LstProfession, 
                    System.DateTime Original_LstGraduateDate, 
                    string Original_ApplyParty, 
                    System.DateTime Original_ApplyPartyDate, 
                    string Original_VolunteerInfo, 
                    string Original_Mobile, 
                    string Original_Email, 
                    string Original_SpecialSkill, 
                    int Original_YouthChargeStd) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((FK_YouthGroup == null)) {
                throw new global::System.ArgumentNullException("FK_YouthGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FK_YouthGroup));
            }
            if ((FK_YouthGroup_FZ == null)) {
                throw new global::System.ArgumentNullException("FK_YouthGroup_FZ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FK_YouthGroup_FZ));
            }
            if ((Dept == null)) {
                throw new global::System.ArgumentNullException("Dept");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Dept));
            }
            if ((WorkGroup == null)) {
                throw new global::System.ArgumentNullException("WorkGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(WorkGroup));
            }
            if ((Post == null)) {
                throw new global::System.ArgumentNullException("Post");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Post));
            }
            if ((HrCode == null)) {
                throw new global::System.ArgumentNullException("HrCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(HrCode));
            }
            if ((HrType == null)) {
                throw new global::System.ArgumentNullException("HrType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(HrType));
            }
            if ((HrStatus == null)) {
                throw new global::System.ArgumentNullException("HrStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(HrStatus));
            }
            if ((EmpName == null)) {
                throw new global::System.ArgumentNullException("EmpName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(EmpName));
            }
            if ((EmpID == null)) {
                throw new global::System.ArgumentNullException("EmpID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(EmpID));
            }
            if ((Sex == null)) {
                throw new global::System.ArgumentNullException("Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Sex));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Birthday));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Age));
            if ((ParttimeName == null)) {
                throw new global::System.ArgumentNullException("ParttimeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ParttimeName));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(JobDateTime));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(ComDateTime));
            if ((Wedding == null)) {
                throw new global::System.ArgumentNullException("Wedding");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Wedding));
            }
            if ((NativePlace == null)) {
                throw new global::System.ArgumentNullException("NativePlace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(NativePlace));
            }
            if ((Politics == null)) {
                throw new global::System.ArgumentNullException("Politics");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Politics));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(PartyDate));
            if ((Nation == null)) {
                throw new global::System.ArgumentNullException("Nation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Nation));
            }
            if ((House == null)) {
                throw new global::System.ArgumentNullException("House");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(House));
            }
            if ((SkillLevel == null)) {
                throw new global::System.ArgumentNullException("SkillLevel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(SkillLevel));
            }
            if ((FstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("FstSchoolExp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(FstSchoolExp));
            }
            if ((FstDegree == null)) {
                throw new global::System.ArgumentNullException("FstDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(FstDegree));
            }
            if ((LstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("LstSchoolExp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(LstSchoolExp));
            }
            if ((LstDegree == null)) {
                throw new global::System.ArgumentNullException("LstDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(LstDegree));
            }
            if ((FstSchool == null)) {
                throw new global::System.ArgumentNullException("FstSchool");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(FstSchool));
            }
            if ((FstProfession == null)) {
                throw new global::System.ArgumentNullException("FstProfession");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(FstProfession));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(FstGraduateDate));
            if ((LstSchool == null)) {
                throw new global::System.ArgumentNullException("LstSchool");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(LstSchool));
            }
            if ((LstProfession == null)) {
                throw new global::System.ArgumentNullException("LstProfession");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(LstProfession));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(LstGraduateDate));
            if ((ApplyParty == null)) {
                throw new global::System.ArgumentNullException("ApplyParty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(ApplyParty));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(ApplyPartyDate));
            if ((VolunteerInfo == null)) {
                throw new global::System.ArgumentNullException("VolunteerInfo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(VolunteerInfo));
            }
            if ((Mobile == null)) {
                throw new global::System.ArgumentNullException("Mobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Mobile));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Email));
            }
            if ((SpecialSkill == null)) {
                throw new global::System.ArgumentNullException("SpecialSkill");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(SpecialSkill));
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(YouthChargeStd));
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_OID));
            }
            if ((Original_FK_YouthGroup == null)) {
                throw new global::System.ArgumentNullException("Original_FK_YouthGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_FK_YouthGroup));
            }
            if ((Original_FK_YouthGroup_FZ == null)) {
                throw new global::System.ArgumentNullException("Original_FK_YouthGroup_FZ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_FK_YouthGroup_FZ));
            }
            if ((Original_Dept == null)) {
                throw new global::System.ArgumentNullException("Original_Dept");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_Dept));
            }
            if ((Original_WorkGroup == null)) {
                throw new global::System.ArgumentNullException("Original_WorkGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_WorkGroup));
            }
            if ((Original_Post == null)) {
                throw new global::System.ArgumentNullException("Original_Post");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_Post));
            }
            if ((Original_HrCode == null)) {
                throw new global::System.ArgumentNullException("Original_HrCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_HrCode));
            }
            if ((Original_HrType == null)) {
                throw new global::System.ArgumentNullException("Original_HrType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_HrType));
            }
            if ((Original_HrStatus == null)) {
                throw new global::System.ArgumentNullException("Original_HrStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_HrStatus));
            }
            if ((Original_EmpName == null)) {
                throw new global::System.ArgumentNullException("Original_EmpName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_EmpName));
            }
            if ((Original_EmpID == null)) {
                throw new global::System.ArgumentNullException("Original_EmpID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_EmpID));
            }
            if ((Original_Sex == null)) {
                throw new global::System.ArgumentNullException("Original_Sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_Sex));
            }
            this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(Original_Birthday));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_Age));
            if ((Original_ParttimeName == null)) {
                throw new global::System.ArgumentNullException("Original_ParttimeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_ParttimeName));
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(Original_JobDateTime));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_ComDateTime));
            if ((Original_Wedding == null)) {
                throw new global::System.ArgumentNullException("Original_Wedding");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_Wedding));
            }
            if ((Original_NativePlace == null)) {
                throw new global::System.ArgumentNullException("Original_NativePlace");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_NativePlace));
            }
            if ((Original_Politics == null)) {
                throw new global::System.ArgumentNullException("Original_Politics");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_Politics));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_PartyDate));
            if ((Original_Nation == null)) {
                throw new global::System.ArgumentNullException("Original_Nation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_Nation));
            }
            if ((Original_House == null)) {
                throw new global::System.ArgumentNullException("Original_House");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_House));
            }
            if ((Original_SkillLevel == null)) {
                throw new global::System.ArgumentNullException("Original_SkillLevel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_SkillLevel));
            }
            if ((Original_FstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("Original_FstSchoolExp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_FstSchoolExp));
            }
            if ((Original_FstDegree == null)) {
                throw new global::System.ArgumentNullException("Original_FstDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_FstDegree));
            }
            if ((Original_LstSchoolExp == null)) {
                throw new global::System.ArgumentNullException("Original_LstSchoolExp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_LstSchoolExp));
            }
            if ((Original_LstDegree == null)) {
                throw new global::System.ArgumentNullException("Original_LstDegree");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_LstDegree));
            }
            if ((Original_FstSchool == null)) {
                throw new global::System.ArgumentNullException("Original_FstSchool");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_FstSchool));
            }
            if ((Original_FstProfession == null)) {
                throw new global::System.ArgumentNullException("Original_FstProfession");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_FstProfession));
            }
            this.Adapter.UpdateCommand.Parameters[71].Value = ((System.DateTime)(Original_FstGraduateDate));
            if ((Original_LstSchool == null)) {
                throw new global::System.ArgumentNullException("Original_LstSchool");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_LstSchool));
            }
            if ((Original_LstProfession == null)) {
                throw new global::System.ArgumentNullException("Original_LstProfession");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_LstProfession));
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((System.DateTime)(Original_LstGraduateDate));
            if ((Original_ApplyParty == null)) {
                throw new global::System.ArgumentNullException("Original_ApplyParty");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_ApplyParty));
            }
            this.Adapter.UpdateCommand.Parameters[76].Value = ((System.DateTime)(Original_ApplyPartyDate));
            if ((Original_VolunteerInfo == null)) {
                throw new global::System.ArgumentNullException("Original_VolunteerInfo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_VolunteerInfo));
            }
            if ((Original_Mobile == null)) {
                throw new global::System.ArgumentNullException("Original_Mobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_Mobile));
            }
            if ((Original_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_Email));
            }
            if ((Original_SpecialSkill == null)) {
                throw new global::System.ArgumentNullException("Original_SpecialSkill");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_SpecialSkill));
            }
            this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_YouthChargeStd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FK_YouthGroup, 
                    string FK_YouthGroup_FZ, 
                    string Dept, 
                    string WorkGroup, 
                    string Post, 
                    string HrCode, 
                    string HrType, 
                    string HrStatus, 
                    string EmpName, 
                    string EmpID, 
                    string Sex, 
                    System.DateTime Birthday, 
                    int Age, 
                    string ParttimeName, 
                    System.DateTime JobDateTime, 
                    System.DateTime ComDateTime, 
                    string Wedding, 
                    string NativePlace, 
                    string Politics, 
                    System.DateTime PartyDate, 
                    string Nation, 
                    string House, 
                    string SkillLevel, 
                    string FstSchoolExp, 
                    string FstDegree, 
                    string LstSchoolExp, 
                    string LstDegree, 
                    string FstSchool, 
                    string FstProfession, 
                    System.DateTime FstGraduateDate, 
                    string LstSchool, 
                    string LstProfession, 
                    System.DateTime LstGraduateDate, 
                    string ApplyParty, 
                    System.DateTime ApplyPartyDate, 
                    string VolunteerInfo, 
                    string Mobile, 
                    string Email, 
                    string SpecialSkill, 
                    int YouthChargeStd, 
                    string Original_OID, 
                    string Original_FK_YouthGroup, 
                    string Original_FK_YouthGroup_FZ, 
                    string Original_Dept, 
                    string Original_WorkGroup, 
                    string Original_Post, 
                    string Original_HrCode, 
                    string Original_HrType, 
                    string Original_HrStatus, 
                    string Original_EmpName, 
                    string Original_EmpID, 
                    string Original_Sex, 
                    System.DateTime Original_Birthday, 
                    int Original_Age, 
                    string Original_ParttimeName, 
                    System.DateTime Original_JobDateTime, 
                    System.DateTime Original_ComDateTime, 
                    string Original_Wedding, 
                    string Original_NativePlace, 
                    string Original_Politics, 
                    System.DateTime Original_PartyDate, 
                    string Original_Nation, 
                    string Original_House, 
                    string Original_SkillLevel, 
                    string Original_FstSchoolExp, 
                    string Original_FstDegree, 
                    string Original_LstSchoolExp, 
                    string Original_LstDegree, 
                    string Original_FstSchool, 
                    string Original_FstProfession, 
                    System.DateTime Original_FstGraduateDate, 
                    string Original_LstSchool, 
                    string Original_LstProfession, 
                    System.DateTime Original_LstGraduateDate, 
                    string Original_ApplyParty, 
                    System.DateTime Original_ApplyPartyDate, 
                    string Original_VolunteerInfo, 
                    string Original_Mobile, 
                    string Original_Email, 
                    string Original_SpecialSkill, 
                    int Original_YouthChargeStd) {
            return this.Update(Original_OID, FK_YouthGroup, FK_YouthGroup_FZ, Dept, WorkGroup, Post, HrCode, HrType, HrStatus, EmpName, EmpID, Sex, Birthday, Age, ParttimeName, JobDateTime, ComDateTime, Wedding, NativePlace, Politics, PartyDate, Nation, House, SkillLevel, FstSchoolExp, FstDegree, LstSchoolExp, LstDegree, FstSchool, FstProfession, FstGraduateDate, LstSchool, LstProfession, LstGraduateDate, ApplyParty, ApplyPartyDate, VolunteerInfo, Mobile, Email, SpecialSkill, YouthChargeStd, Original_OID, Original_FK_YouthGroup, Original_FK_YouthGroup_FZ, Original_Dept, Original_WorkGroup, Original_Post, Original_HrCode, Original_HrType, Original_HrStatus, Original_EmpName, Original_EmpID, Original_Sex, Original_Birthday, Original_Age, Original_ParttimeName, Original_JobDateTime, Original_ComDateTime, Original_Wedding, Original_NativePlace, Original_Politics, Original_PartyDate, Original_Nation, Original_House, Original_SkillLevel, Original_FstSchoolExp, Original_FstDegree, Original_LstSchoolExp, Original_LstDegree, Original_FstSchool, Original_FstProfession, Original_FstGraduateDate, Original_LstSchool, Original_LstProfession, Original_LstGraduateDate, Original_ApplyParty, Original_ApplyPartyDate, Original_VolunteerInfo, Original_Mobile, Original_Email, Original_SpecialSkill, Original_YouthChargeStd);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BudgetApplyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BudgetApplyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BudgetApply";
            tableMapping.ColumnMappings.Add("OID", "OID");
            tableMapping.ColumnMappings.Add("YG_OID", "YG_OID");
            tableMapping.ColumnMappings.Add("CRE_DATE", "CRE_DATE");
            tableMapping.ColumnMappings.Add("BA_NUM", "BA_NUM");
            tableMapping.ColumnMappings.Add("BA_DESC", "BA_DESC");
            tableMapping.ColumnMappings.Add("BA_STATUS", "BA_STATUS");
            tableMapping.ColumnMappings.Add("BA_ADMIN", "BA_ADMIN");
            tableMapping.ColumnMappings.Add("SP_ADMIN", "SP_ADMIN");
            tableMapping.ColumnMappings.Add("SP_DATE", "SP_DATE");
            tableMapping.ColumnMappings.Add("YJ_MONTH", "YJ_MONTH");
            tableMapping.ColumnMappings.Add("SP_REASON", "SP_REASON");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[BudgetApply] WHERE (([OID] = @Original_OID) AND ([YG_OID] = @Original_YG_OID) AND ([CRE_DATE] = @Original_CRE_DATE) AND ([BA_NUM] = @Original_BA_NUM) AND ([BA_DESC] = @Original_BA_DESC) AND ([BA_STATUS] = @Original_BA_STATUS) AND ([BA_ADMIN] = @Original_BA_ADMIN) AND ([SP_ADMIN] = @Original_SP_ADMIN) AND ([SP_DATE] = @Original_SP_DATE) AND ([YJ_MONTH] = @Original_YJ_MONTH) AND ([SP_REASON] = @Original_SP_REASON))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BA_NUM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BA_NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BA_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_DESC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BA_STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_STATUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BA_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_ADMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_ADMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YJ_MONTH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_MONTH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SP_REASON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_REASON", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[BudgetApply] ([OID], [YG_OID], [CRE_DATE], [BA_NUM], [BA_DESC], [BA_STATUS], [BA_ADMIN], [SP_ADMIN], [SP_DATE], [YJ_MONTH], [SP_REASON]) VALUES (@OID, @YG_OID, @CRE_DATE, @BA_NUM, @BA_DESC, @BA_STATUS, @BA_ADMIN, @SP_ADMIN, @SP_DATE, @YJ_MONTH, @SP_REASON);
SELECT OID, YG_OID, CRE_DATE, BA_NUM, BA_DESC, BA_STATUS, BA_ADMIN, SP_ADMIN, SP_DATE, YJ_MONTH, SP_REASON FROM BudgetApply WHERE (OID = @OID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BA_NUM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BA_NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BA_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BA_STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BA_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_ADMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_ADMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YJ_MONTH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_MONTH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SP_REASON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_REASON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BudgetApply] SET [OID] = @OID, [YG_OID] = @YG_OID, [CRE_DATE] = @CRE_DATE, [BA_NUM] = @BA_NUM, [BA_DESC] = @BA_DESC, [BA_STATUS] = @BA_STATUS, [BA_ADMIN] = @BA_ADMIN, [SP_ADMIN] = @SP_ADMIN, [SP_DATE] = @SP_DATE, [YJ_MONTH] = @YJ_MONTH, [SP_REASON] = @SP_REASON WHERE (([OID] = @Original_OID) AND ([YG_OID] = @Original_YG_OID) AND ([CRE_DATE] = @Original_CRE_DATE) AND ([BA_NUM] = @Original_BA_NUM) AND ([BA_DESC] = @Original_BA_DESC) AND ([BA_STATUS] = @Original_BA_STATUS) AND ([BA_ADMIN] = @Original_BA_ADMIN) AND ([SP_ADMIN] = @Original_SP_ADMIN) AND ([SP_DATE] = @Original_SP_DATE) AND ([YJ_MONTH] = @Original_YJ_MONTH) AND ([SP_REASON] = @Original_SP_REASON));
SELECT OID, YG_OID, CRE_DATE, BA_NUM, BA_DESC, BA_STATUS, BA_ADMIN, SP_ADMIN, SP_DATE, YJ_MONTH, SP_REASON FROM BudgetApply WHERE (OID = @OID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BA_NUM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BA_NUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BA_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BA_STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BA_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_ADMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_ADMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YJ_MONTH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_MONTH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SP_REASON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_REASON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YG_OID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YG_OID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BA_NUM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BA_NUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BA_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_DESC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BA_STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_STATUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BA_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA_ADMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SP_ADMIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_ADMIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YJ_MONTH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YJ_MONTH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SP_REASON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SP_REASON", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::YouthOne.Component.Properties.Settings.Default.YouthOneConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OID, YG_OID, CRE_DATE, BA_NUM, BA_DESC, BA_STATUS, BA_ADMIN, SP_ADMIN, SP_" +
                "DATE, YJ_MONTH, SP_REASON FROM dbo.BudgetApply";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(YouthOneDS.BudgetApplyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual YouthOneDS.BudgetApplyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            YouthOneDS.BudgetApplyDataTable dataTable = new YouthOneDS.BudgetApplyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS.BudgetApplyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(YouthOneDS dataSet) {
            return this.Adapter.Update(dataSet, "BudgetApply");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_OID, string Original_YG_OID, System.DateTime Original_CRE_DATE, decimal Original_BA_NUM, string Original_BA_DESC, string Original_BA_STATUS, string Original_BA_ADMIN, string Original_SP_ADMIN, System.DateTime Original_SP_DATE, string Original_YJ_MONTH, string Original_SP_REASON) {
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_OID));
            }
            if ((Original_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_YG_OID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_YG_OID));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_CRE_DATE));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_BA_NUM));
            if ((Original_BA_DESC == null)) {
                throw new global::System.ArgumentNullException("Original_BA_DESC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_BA_DESC));
            }
            if ((Original_BA_STATUS == null)) {
                throw new global::System.ArgumentNullException("Original_BA_STATUS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_BA_STATUS));
            }
            if ((Original_BA_ADMIN == null)) {
                throw new global::System.ArgumentNullException("Original_BA_ADMIN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_BA_ADMIN));
            }
            if ((Original_SP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("Original_SP_ADMIN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SP_ADMIN));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_SP_DATE));
            if ((Original_YJ_MONTH == null)) {
                throw new global::System.ArgumentNullException("Original_YJ_MONTH");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_YJ_MONTH));
            }
            if ((Original_SP_REASON == null)) {
                throw new global::System.ArgumentNullException("Original_SP_REASON");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SP_REASON));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OID, string YG_OID, System.DateTime CRE_DATE, decimal BA_NUM, string BA_DESC, string BA_STATUS, string BA_ADMIN, string SP_ADMIN, System.DateTime SP_DATE, string YJ_MONTH, string SP_REASON) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((YG_OID == null)) {
                throw new global::System.ArgumentNullException("YG_OID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(YG_OID));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(CRE_DATE));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(BA_NUM));
            if ((BA_DESC == null)) {
                throw new global::System.ArgumentNullException("BA_DESC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(BA_DESC));
            }
            if ((BA_STATUS == null)) {
                throw new global::System.ArgumentNullException("BA_STATUS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(BA_STATUS));
            }
            if ((BA_ADMIN == null)) {
                throw new global::System.ArgumentNullException("BA_ADMIN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(BA_ADMIN));
            }
            if ((SP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("SP_ADMIN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SP_ADMIN));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(SP_DATE));
            if ((YJ_MONTH == null)) {
                throw new global::System.ArgumentNullException("YJ_MONTH");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(YJ_MONTH));
            }
            if ((SP_REASON == null)) {
                throw new global::System.ArgumentNullException("SP_REASON");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(SP_REASON));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string OID, 
                    string YG_OID, 
                    System.DateTime CRE_DATE, 
                    decimal BA_NUM, 
                    string BA_DESC, 
                    string BA_STATUS, 
                    string BA_ADMIN, 
                    string SP_ADMIN, 
                    System.DateTime SP_DATE, 
                    string YJ_MONTH, 
                    string SP_REASON, 
                    string Original_OID, 
                    string Original_YG_OID, 
                    System.DateTime Original_CRE_DATE, 
                    decimal Original_BA_NUM, 
                    string Original_BA_DESC, 
                    string Original_BA_STATUS, 
                    string Original_BA_ADMIN, 
                    string Original_SP_ADMIN, 
                    System.DateTime Original_SP_DATE, 
                    string Original_YJ_MONTH, 
                    string Original_SP_REASON) {
            if ((OID == null)) {
                throw new global::System.ArgumentNullException("OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OID));
            }
            if ((YG_OID == null)) {
                throw new global::System.ArgumentNullException("YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(YG_OID));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(CRE_DATE));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(BA_NUM));
            if ((BA_DESC == null)) {
                throw new global::System.ArgumentNullException("BA_DESC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(BA_DESC));
            }
            if ((BA_STATUS == null)) {
                throw new global::System.ArgumentNullException("BA_STATUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(BA_STATUS));
            }
            if ((BA_ADMIN == null)) {
                throw new global::System.ArgumentNullException("BA_ADMIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(BA_ADMIN));
            }
            if ((SP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("SP_ADMIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SP_ADMIN));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(SP_DATE));
            if ((YJ_MONTH == null)) {
                throw new global::System.ArgumentNullException("YJ_MONTH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(YJ_MONTH));
            }
            if ((SP_REASON == null)) {
                throw new global::System.ArgumentNullException("SP_REASON");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(SP_REASON));
            }
            if ((Original_OID == null)) {
                throw new global::System.ArgumentNullException("Original_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_OID));
            }
            if ((Original_YG_OID == null)) {
                throw new global::System.ArgumentNullException("Original_YG_OID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_YG_OID));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_CRE_DATE));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_BA_NUM));
            if ((Original_BA_DESC == null)) {
                throw new global::System.ArgumentNullException("Original_BA_DESC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_BA_DESC));
            }
            if ((Original_BA_STATUS == null)) {
                throw new global::System.ArgumentNullException("Original_BA_STATUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_BA_STATUS));
            }
            if ((Original_BA_ADMIN == null)) {
                throw new global::System.ArgumentNullException("Original_BA_ADMIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_BA_ADMIN));
            }
            if ((Original_SP_ADMIN == null)) {
                throw new global::System.ArgumentNullException("Original_SP_ADMIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_SP_ADMIN));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_SP_DATE));
            if ((Original_YJ_MONTH == null)) {
                throw new global::System.ArgumentNullException("Original_YJ_MONTH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_YJ_MONTH));
            }
            if ((Original_SP_REASON == null)) {
                throw new global::System.ArgumentNullException("Original_SP_REASON");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_SP_REASON));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string YG_OID, 
                    System.DateTime CRE_DATE, 
                    decimal BA_NUM, 
                    string BA_DESC, 
                    string BA_STATUS, 
                    string BA_ADMIN, 
                    string SP_ADMIN, 
                    System.DateTime SP_DATE, 
                    string YJ_MONTH, 
                    string SP_REASON, 
                    string Original_OID, 
                    string Original_YG_OID, 
                    System.DateTime Original_CRE_DATE, 
                    decimal Original_BA_NUM, 
                    string Original_BA_DESC, 
                    string Original_BA_STATUS, 
                    string Original_BA_ADMIN, 
                    string Original_SP_ADMIN, 
                    System.DateTime Original_SP_DATE, 
                    string Original_YJ_MONTH, 
                    string Original_SP_REASON) {
            return this.Update(Original_OID, YG_OID, CRE_DATE, BA_NUM, BA_DESC, BA_STATUS, BA_ADMIN, SP_ADMIN, SP_DATE, YJ_MONTH, SP_REASON, Original_OID, Original_YG_OID, Original_CRE_DATE, Original_BA_NUM, Original_BA_DESC, Original_BA_STATUS, Original_BA_ADMIN, Original_SP_ADMIN, Original_SP_DATE, Original_YJ_MONTH, Original_SP_REASON);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private YouthGroupTableAdapter _youthGroupTableAdapter;
        
        private SystemAdminTableAdapter _systemAdminTableAdapter;
        
        private SystemLogTableAdapter _systemLogTableAdapter;
        
        private PostTableAdapter _postTableAdapter;
        
        private OrganizeTableAdapter _organizeTableAdapter;
        
        private StandardEnumTableAdapter _standardEnumTableAdapter;
        
        private MemberChargeTableAdapter _memberChargeTableAdapter;
        
        private PriseTableAdapter _priseTableAdapter;
        
        private MemberStaticTableAdapter _memberStaticTableAdapter;
        
        private NotificationTableAdapter _notificationTableAdapter;
        
        private OutlayPublishTableAdapter _outlayPublishTableAdapter;
        
        private OutlayUseTableAdapter _outlayUseTableAdapter;
        
        private MemberImportTableAdapter _memberImportTableAdapter;
        
        private MemberTableAdapter _memberTableAdapter;
        
        private BudgetApplyTableAdapter _budgetApplyTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public YouthGroupTableAdapter YouthGroupTableAdapter {
            get {
                return this._youthGroupTableAdapter;
            }
            set {
                this._youthGroupTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SystemAdminTableAdapter SystemAdminTableAdapter {
            get {
                return this._systemAdminTableAdapter;
            }
            set {
                this._systemAdminTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SystemLogTableAdapter SystemLogTableAdapter {
            get {
                return this._systemLogTableAdapter;
            }
            set {
                this._systemLogTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PostTableAdapter PostTableAdapter {
            get {
                return this._postTableAdapter;
            }
            set {
                this._postTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public OrganizeTableAdapter OrganizeTableAdapter {
            get {
                return this._organizeTableAdapter;
            }
            set {
                this._organizeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public StandardEnumTableAdapter StandardEnumTableAdapter {
            get {
                return this._standardEnumTableAdapter;
            }
            set {
                this._standardEnumTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MemberChargeTableAdapter MemberChargeTableAdapter {
            get {
                return this._memberChargeTableAdapter;
            }
            set {
                this._memberChargeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PriseTableAdapter PriseTableAdapter {
            get {
                return this._priseTableAdapter;
            }
            set {
                this._priseTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MemberStaticTableAdapter MemberStaticTableAdapter {
            get {
                return this._memberStaticTableAdapter;
            }
            set {
                this._memberStaticTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public NotificationTableAdapter NotificationTableAdapter {
            get {
                return this._notificationTableAdapter;
            }
            set {
                this._notificationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public OutlayPublishTableAdapter OutlayPublishTableAdapter {
            get {
                return this._outlayPublishTableAdapter;
            }
            set {
                this._outlayPublishTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public OutlayUseTableAdapter OutlayUseTableAdapter {
            get {
                return this._outlayUseTableAdapter;
            }
            set {
                this._outlayUseTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MemberImportTableAdapter MemberImportTableAdapter {
            get {
                return this._memberImportTableAdapter;
            }
            set {
                this._memberImportTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MemberTableAdapter MemberTableAdapter {
            get {
                return this._memberTableAdapter;
            }
            set {
                this._memberTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public BudgetApplyTableAdapter BudgetApplyTableAdapter {
            get {
                return this._budgetApplyTableAdapter;
            }
            set {
                this._budgetApplyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._youthGroupTableAdapter != null) 
                            && (this._youthGroupTableAdapter.Connection != null))) {
                    return this._youthGroupTableAdapter.Connection;
                }
                if (((this._systemAdminTableAdapter != null) 
                            && (this._systemAdminTableAdapter.Connection != null))) {
                    return this._systemAdminTableAdapter.Connection;
                }
                if (((this._systemLogTableAdapter != null) 
                            && (this._systemLogTableAdapter.Connection != null))) {
                    return this._systemLogTableAdapter.Connection;
                }
                if (((this._postTableAdapter != null) 
                            && (this._postTableAdapter.Connection != null))) {
                    return this._postTableAdapter.Connection;
                }
                if (((this._organizeTableAdapter != null) 
                            && (this._organizeTableAdapter.Connection != null))) {
                    return this._organizeTableAdapter.Connection;
                }
                if (((this._standardEnumTableAdapter != null) 
                            && (this._standardEnumTableAdapter.Connection != null))) {
                    return this._standardEnumTableAdapter.Connection;
                }
                if (((this._memberChargeTableAdapter != null) 
                            && (this._memberChargeTableAdapter.Connection != null))) {
                    return this._memberChargeTableAdapter.Connection;
                }
                if (((this._priseTableAdapter != null) 
                            && (this._priseTableAdapter.Connection != null))) {
                    return this._priseTableAdapter.Connection;
                }
                if (((this._memberStaticTableAdapter != null) 
                            && (this._memberStaticTableAdapter.Connection != null))) {
                    return this._memberStaticTableAdapter.Connection;
                }
                if (((this._notificationTableAdapter != null) 
                            && (this._notificationTableAdapter.Connection != null))) {
                    return this._notificationTableAdapter.Connection;
                }
                if (((this._outlayPublishTableAdapter != null) 
                            && (this._outlayPublishTableAdapter.Connection != null))) {
                    return this._outlayPublishTableAdapter.Connection;
                }
                if (((this._outlayUseTableAdapter != null) 
                            && (this._outlayUseTableAdapter.Connection != null))) {
                    return this._outlayUseTableAdapter.Connection;
                }
                if (((this._memberImportTableAdapter != null) 
                            && (this._memberImportTableAdapter.Connection != null))) {
                    return this._memberImportTableAdapter.Connection;
                }
                if (((this._memberTableAdapter != null) 
                            && (this._memberTableAdapter.Connection != null))) {
                    return this._memberTableAdapter.Connection;
                }
                if (((this._budgetApplyTableAdapter != null) 
                            && (this._budgetApplyTableAdapter.Connection != null))) {
                    return this._budgetApplyTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._youthGroupTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._systemAdminTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._systemLogTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._postTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._organizeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._standardEnumTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._memberChargeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._priseTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._memberStaticTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._notificationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._outlayPublishTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._outlayUseTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._memberImportTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._memberTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._budgetApplyTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(YouthOneDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._outlayPublishTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OutlayPublish.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._outlayPublishTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._notificationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Notification.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._notificationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._memberStaticTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MemberStatic.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._memberStaticTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._outlayUseTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OutlayUse.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._outlayUseTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._budgetApplyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BudgetApply.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._budgetApplyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._memberTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Member.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._memberTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._memberImportTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MemberImport.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._memberImportTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._priseTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Prise.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._priseTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._systemLogTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SystemLog.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._systemLogTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._systemAdminTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SystemAdmin.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._systemAdminTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._youthGroupTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.YouthGroup.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._youthGroupTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._postTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Post.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._postTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._memberChargeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MemberCharge.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._memberChargeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._standardEnumTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StandardEnum.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._standardEnumTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._organizeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Organize.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._organizeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(YouthOneDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._outlayPublishTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OutlayPublish.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._outlayPublishTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._notificationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Notification.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._notificationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._memberStaticTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MemberStatic.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._memberStaticTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._outlayUseTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OutlayUse.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._outlayUseTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._budgetApplyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BudgetApply.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._budgetApplyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._memberTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Member.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._memberTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._memberImportTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MemberImport.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._memberImportTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._priseTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Prise.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._priseTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._systemLogTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SystemLog.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._systemLogTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._systemAdminTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SystemAdmin.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._systemAdminTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._youthGroupTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.YouthGroup.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._youthGroupTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._postTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Post.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._postTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._memberChargeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MemberCharge.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._memberChargeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._standardEnumTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StandardEnum.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._standardEnumTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._organizeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Organize.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._organizeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(YouthOneDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._organizeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Organize.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._organizeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._standardEnumTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StandardEnum.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._standardEnumTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._memberChargeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MemberCharge.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._memberChargeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._postTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Post.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._postTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._youthGroupTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.YouthGroup.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._youthGroupTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._systemAdminTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SystemAdmin.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._systemAdminTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._systemLogTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SystemLog.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._systemLogTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._priseTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Prise.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._priseTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._memberImportTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MemberImport.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._memberImportTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._memberTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Member.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._memberTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._budgetApplyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BudgetApply.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._budgetApplyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._outlayUseTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OutlayUse.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._outlayUseTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._memberStaticTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MemberStatic.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._memberStaticTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._notificationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Notification.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._notificationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._outlayPublishTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OutlayPublish.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._outlayPublishTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(YouthOneDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._youthGroupTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._youthGroupTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._systemAdminTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._systemAdminTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._systemLogTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._systemLogTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._postTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._postTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._organizeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._organizeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._standardEnumTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._standardEnumTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._memberChargeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._memberChargeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._priseTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._priseTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._memberStaticTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._memberStaticTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._notificationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._notificationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._outlayPublishTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._outlayPublishTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._outlayUseTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._outlayUseTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._memberImportTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._memberImportTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._memberTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._memberTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._budgetApplyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._budgetApplyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._youthGroupTableAdapter != null)) {
                    revertConnections.Add(this._youthGroupTableAdapter, this._youthGroupTableAdapter.Connection);
                    this._youthGroupTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._youthGroupTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._youthGroupTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._youthGroupTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._youthGroupTableAdapter.Adapter);
                    }
                }
                if ((this._systemAdminTableAdapter != null)) {
                    revertConnections.Add(this._systemAdminTableAdapter, this._systemAdminTableAdapter.Connection);
                    this._systemAdminTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._systemAdminTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._systemAdminTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._systemAdminTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._systemAdminTableAdapter.Adapter);
                    }
                }
                if ((this._systemLogTableAdapter != null)) {
                    revertConnections.Add(this._systemLogTableAdapter, this._systemLogTableAdapter.Connection);
                    this._systemLogTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._systemLogTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._systemLogTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._systemLogTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._systemLogTableAdapter.Adapter);
                    }
                }
                if ((this._postTableAdapter != null)) {
                    revertConnections.Add(this._postTableAdapter, this._postTableAdapter.Connection);
                    this._postTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._postTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._postTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._postTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._postTableAdapter.Adapter);
                    }
                }
                if ((this._organizeTableAdapter != null)) {
                    revertConnections.Add(this._organizeTableAdapter, this._organizeTableAdapter.Connection);
                    this._organizeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._organizeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._organizeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._organizeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._organizeTableAdapter.Adapter);
                    }
                }
                if ((this._standardEnumTableAdapter != null)) {
                    revertConnections.Add(this._standardEnumTableAdapter, this._standardEnumTableAdapter.Connection);
                    this._standardEnumTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._standardEnumTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._standardEnumTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._standardEnumTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._standardEnumTableAdapter.Adapter);
                    }
                }
                if ((this._memberChargeTableAdapter != null)) {
                    revertConnections.Add(this._memberChargeTableAdapter, this._memberChargeTableAdapter.Connection);
                    this._memberChargeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._memberChargeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._memberChargeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._memberChargeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._memberChargeTableAdapter.Adapter);
                    }
                }
                if ((this._priseTableAdapter != null)) {
                    revertConnections.Add(this._priseTableAdapter, this._priseTableAdapter.Connection);
                    this._priseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._priseTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._priseTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._priseTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._priseTableAdapter.Adapter);
                    }
                }
                if ((this._memberStaticTableAdapter != null)) {
                    revertConnections.Add(this._memberStaticTableAdapter, this._memberStaticTableAdapter.Connection);
                    this._memberStaticTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._memberStaticTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._memberStaticTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._memberStaticTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._memberStaticTableAdapter.Adapter);
                    }
                }
                if ((this._notificationTableAdapter != null)) {
                    revertConnections.Add(this._notificationTableAdapter, this._notificationTableAdapter.Connection);
                    this._notificationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._notificationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._notificationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._notificationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._notificationTableAdapter.Adapter);
                    }
                }
                if ((this._outlayPublishTableAdapter != null)) {
                    revertConnections.Add(this._outlayPublishTableAdapter, this._outlayPublishTableAdapter.Connection);
                    this._outlayPublishTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._outlayPublishTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._outlayPublishTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._outlayPublishTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._outlayPublishTableAdapter.Adapter);
                    }
                }
                if ((this._outlayUseTableAdapter != null)) {
                    revertConnections.Add(this._outlayUseTableAdapter, this._outlayUseTableAdapter.Connection);
                    this._outlayUseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._outlayUseTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._outlayUseTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._outlayUseTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._outlayUseTableAdapter.Adapter);
                    }
                }
                if ((this._memberImportTableAdapter != null)) {
                    revertConnections.Add(this._memberImportTableAdapter, this._memberImportTableAdapter.Connection);
                    this._memberImportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._memberImportTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._memberImportTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._memberImportTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._memberImportTableAdapter.Adapter);
                    }
                }
                if ((this._memberTableAdapter != null)) {
                    revertConnections.Add(this._memberTableAdapter, this._memberTableAdapter.Connection);
                    this._memberTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._memberTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._memberTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._memberTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._memberTableAdapter.Adapter);
                    }
                }
                if ((this._budgetApplyTableAdapter != null)) {
                    revertConnections.Add(this._budgetApplyTableAdapter, this._budgetApplyTableAdapter.Connection);
                    this._budgetApplyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._budgetApplyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._budgetApplyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._budgetApplyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._budgetApplyTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._youthGroupTableAdapter != null)) {
                    this._youthGroupTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._youthGroupTableAdapter]));
                    this._youthGroupTableAdapter.Transaction = null;
                }
                if ((this._systemAdminTableAdapter != null)) {
                    this._systemAdminTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._systemAdminTableAdapter]));
                    this._systemAdminTableAdapter.Transaction = null;
                }
                if ((this._systemLogTableAdapter != null)) {
                    this._systemLogTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._systemLogTableAdapter]));
                    this._systemLogTableAdapter.Transaction = null;
                }
                if ((this._postTableAdapter != null)) {
                    this._postTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._postTableAdapter]));
                    this._postTableAdapter.Transaction = null;
                }
                if ((this._organizeTableAdapter != null)) {
                    this._organizeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._organizeTableAdapter]));
                    this._organizeTableAdapter.Transaction = null;
                }
                if ((this._standardEnumTableAdapter != null)) {
                    this._standardEnumTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._standardEnumTableAdapter]));
                    this._standardEnumTableAdapter.Transaction = null;
                }
                if ((this._memberChargeTableAdapter != null)) {
                    this._memberChargeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._memberChargeTableAdapter]));
                    this._memberChargeTableAdapter.Transaction = null;
                }
                if ((this._priseTableAdapter != null)) {
                    this._priseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._priseTableAdapter]));
                    this._priseTableAdapter.Transaction = null;
                }
                if ((this._memberStaticTableAdapter != null)) {
                    this._memberStaticTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._memberStaticTableAdapter]));
                    this._memberStaticTableAdapter.Transaction = null;
                }
                if ((this._notificationTableAdapter != null)) {
                    this._notificationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._notificationTableAdapter]));
                    this._notificationTableAdapter.Transaction = null;
                }
                if ((this._outlayPublishTableAdapter != null)) {
                    this._outlayPublishTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._outlayPublishTableAdapter]));
                    this._outlayPublishTableAdapter.Transaction = null;
                }
                if ((this._outlayUseTableAdapter != null)) {
                    this._outlayUseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._outlayUseTableAdapter]));
                    this._outlayUseTableAdapter.Transaction = null;
                }
                if ((this._memberImportTableAdapter != null)) {
                    this._memberImportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._memberImportTableAdapter]));
                    this._memberImportTableAdapter.Transaction = null;
                }
                if ((this._memberTableAdapter != null)) {
                    this._memberTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._memberTableAdapter]));
                    this._memberTableAdapter.Transaction = null;
                }
                if ((this._budgetApplyTableAdapter != null)) {
                    this._budgetApplyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._budgetApplyTableAdapter]));
                    this._budgetApplyTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591